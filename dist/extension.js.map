{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://scan2findimgs/webpack/runtime/require chunk loading","webpack://scan2findimgs/./node_modules/balanced-match/index.js","webpack://scan2findimgs/./node_modules/brace-expansion/index.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/copy/copy-sync.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/copy/copy.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/copy/index.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/empty/index.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/ensure/file.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/ensure/index.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/ensure/link.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/ensure/symlink-paths.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/ensure/symlink-type.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/ensure/symlink.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/fs/index.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/index.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/json/index.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/json/jsonfile.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/json/output-json-sync.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/json/output-json.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/mkdirs/index.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/mkdirs/make-dir.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/mkdirs/utils.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/move/index.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/move/move-sync.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/move/move.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/output-file/index.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/path-exists/index.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/remove/index.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/util/stat.js","webpack://scan2findimgs/./node_modules/fs-extra/lib/util/utimes.js","webpack://scan2findimgs/./node_modules/graceful-fs/clone.js","webpack://scan2findimgs/./node_modules/graceful-fs/graceful-fs.js","webpack://scan2findimgs/./node_modules/graceful-fs/legacy-streams.js","webpack://scan2findimgs/./node_modules/graceful-fs/polyfills.js","webpack://scan2findimgs/./node_modules/jsonfile/index.js","webpack://scan2findimgs/./node_modules/jsonfile/utils.js","webpack://scan2findimgs/./src/dependency-graph.ts","webpack://scan2findimgs/./src/extension.ts","webpack://scan2findimgs/./node_modules/universalify/index.js","webpack://scan2findimgs/external commonjs \"vscode\"","webpack://scan2findimgs/external node-commonjs \"assert\"","webpack://scan2findimgs/external node-commonjs \"constants\"","webpack://scan2findimgs/external node-commonjs \"fs\"","webpack://scan2findimgs/external node-commonjs \"node:events\"","webpack://scan2findimgs/external node-commonjs \"node:fs\"","webpack://scan2findimgs/external node-commonjs \"node:fs/promises\"","webpack://scan2findimgs/external node-commonjs \"node:path\"","webpack://scan2findimgs/external node-commonjs \"node:stream\"","webpack://scan2findimgs/external node-commonjs \"node:string_decoder\"","webpack://scan2findimgs/external node-commonjs \"node:url\"","webpack://scan2findimgs/external node-commonjs \"path\"","webpack://scan2findimgs/external node-commonjs \"stream\"","webpack://scan2findimgs/external node-commonjs \"util\"","webpack://scan2findimgs/./node_modules/glob/dist/commonjs/glob.js","webpack://scan2findimgs/./node_modules/glob/dist/commonjs/has-magic.js","webpack://scan2findimgs/./node_modules/glob/dist/commonjs/ignore.js","webpack://scan2findimgs/./node_modules/glob/dist/commonjs/index.js","webpack://scan2findimgs/./node_modules/glob/dist/commonjs/pattern.js","webpack://scan2findimgs/./node_modules/glob/dist/commonjs/processor.js","webpack://scan2findimgs/./node_modules/glob/dist/commonjs/walker.js","webpack://scan2findimgs/./node_modules/glob/node_modules/lru-cache/dist/commonjs/index.js","webpack://scan2findimgs/./node_modules/glob/node_modules/minimatch/dist/commonjs/assert-valid-pattern.js","webpack://scan2findimgs/./node_modules/glob/node_modules/minimatch/dist/commonjs/ast.js","webpack://scan2findimgs/./node_modules/glob/node_modules/minimatch/dist/commonjs/brace-expressions.js","webpack://scan2findimgs/./node_modules/glob/node_modules/minimatch/dist/commonjs/escape.js","webpack://scan2findimgs/./node_modules/glob/node_modules/minimatch/dist/commonjs/index.js","webpack://scan2findimgs/./node_modules/glob/node_modules/minimatch/dist/commonjs/unescape.js","webpack://scan2findimgs/./node_modules/glob/node_modules/path-scurry/dist/commonjs/index.js","webpack://scan2findimgs/./node_modules/minipass/dist/commonjs/index.js","webpack://scan2findimgs/webpack/bootstrap","webpack://scan2findimgs/webpack/runtime/define property getters","webpack://scan2findimgs/webpack/runtime/ensure chunk","webpack://scan2findimgs/webpack/runtime/get javascript chunk filename","webpack://scan2findimgs/webpack/runtime/hasOwnProperty shorthand","webpack://scan2findimgs/webpack/startup"],"sourcesContent":["// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"loaded\", otherwise not loaded yet\nvar installedChunks = {\n\t792: 1\n};\n\n// no on chunks loaded\n\nvar installChunk = (chunk) => {\n\tvar moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tfor(var i = 0; i < chunkIds.length; i++)\n\t\tinstalledChunks[chunkIds[i]] = 1;\n\n};\n\n// require() chunk loading for javascript\n__webpack_require__.f.require = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\tinstallChunk(require(\"./\" + __webpack_require__.u(chunkId)));\n\t\t} else installedChunks[chunkId] = 1;\n\t}\n};\n\n// no external install chunk\n\n// no HMR\n\n// no HMR manifest","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","var balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m) return [str];\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  if (/\\$$/.test(m.pre)) {    \n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre+ '{' + m.body + '}' + post[k];\n      expansions.push(expansion);\n    }\n  } else {\n    var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isSequence = isNumericSequence || isAlphaSequence;\n    var isOptions = m.body.indexOf(',') >= 0;\n    if (!isSequence && !isOptions) {\n      // {a},b}\n      if (m.post.match(/,.*\\}/)) {\n        str = m.pre + '{' + m.body + escClose + m.post;\n        return expand(str);\n      }\n      return [str];\n    }\n\n    var n;\n    if (isSequence) {\n      n = m.body.split(/\\.\\./);\n    } else {\n      n = parseCommaParts(m.body);\n      if (n.length === 1) {\n        // x{{a,b}}y ==> x{a}y x{b}y\n        n = expand(n[0], false).map(embrace);\n        if (n.length === 1) {\n          return post.map(function(p) {\n            return m.pre + n[0] + p;\n          });\n        }\n      }\n    }\n\n    // at this point, n is the parts, and we know it's not a comma set\n    // with a single entry.\n    var N;\n\n    if (isSequence) {\n      var x = numeric(n[0]);\n      var y = numeric(n[1]);\n      var width = Math.max(n[0].length, n[1].length)\n      var incr = n.length == 3\n        ? Math.abs(numeric(n[2]))\n        : 1;\n      var test = lte;\n      var reverse = y < x;\n      if (reverse) {\n        incr *= -1;\n        test = gte;\n      }\n      var pad = n.some(isPadded);\n\n      N = [];\n\n      for (var i = x; test(i, y); i += incr) {\n        var c;\n        if (isAlphaSequence) {\n          c = String.fromCharCode(i);\n          if (c === '\\\\')\n            c = '';\n        } else {\n          c = String(i);\n          if (pad) {\n            var need = width - c.length;\n            if (need > 0) {\n              var z = new Array(need + 1).join('0');\n              if (i < 0)\n                c = '-' + z + c.slice(1);\n              else\n                c = z + c;\n            }\n          }\n        }\n        N.push(c);\n      }\n    } else {\n      N = [];\n\n      for (var j = 0; j < n.length; j++) {\n        N.push.apply(N, expand(n[j], false));\n      }\n    }\n\n    for (var j = 0; j < N.length; j++) {\n      for (var k = 0; k < post.length; k++) {\n        var expansion = pre + N[j] + post[k];\n        if (!isTop || isSequence || expansion)\n          expansions.push(expansion);\n      }\n    }\n  }\n\n  return expansions;\n}\n\n","'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirsSync = require('../mkdirs').mkdirsSync\nconst utimesMillisSync = require('../util/utimes').utimesMillisSync\nconst stat = require('../util/stat')\n\nfunction copySync (src, dest, opts) {\n  if (typeof opts === 'function') {\n    opts = { filter: opts }\n  }\n\n  opts = opts || {}\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    process.emitWarning(\n      'Using the preserveTimestamps option in 32-bit node is not recommended;\\n\\n' +\n      '\\tsee https://github.com/jprichardson/node-fs-extra/issues/269',\n      'Warning', 'fs-extra-WARN0002'\n    )\n  }\n\n  const { srcStat, destStat } = stat.checkPathsSync(src, dest, 'copy', opts)\n  stat.checkParentPathsSync(src, srcStat, dest, 'copy')\n  if (opts.filter && !opts.filter(src, dest)) return\n  const destParent = path.dirname(dest)\n  if (!fs.existsSync(destParent)) mkdirsSync(destParent)\n  return getStats(destStat, src, dest, opts)\n}\n\nfunction getStats (destStat, src, dest, opts) {\n  const statSync = opts.dereference ? fs.statSync : fs.lstatSync\n  const srcStat = statSync(src)\n\n  if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isFile() ||\n           srcStat.isCharacterDevice() ||\n           srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts)\n  else if (srcStat.isSocket()) throw new Error(`Cannot copy a socket file: ${src}`)\n  else if (srcStat.isFIFO()) throw new Error(`Cannot copy a FIFO pipe: ${src}`)\n  throw new Error(`Unknown file: ${src}`)\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts)\n  return mayCopyFile(srcStat, src, dest, opts)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts) {\n  if (opts.overwrite) {\n    fs.unlinkSync(dest)\n    return copyFile(srcStat, src, dest, opts)\n  } else if (opts.errorOnExist) {\n    throw new Error(`'${dest}' already exists`)\n  }\n}\n\nfunction copyFile (srcStat, src, dest, opts) {\n  fs.copyFileSync(src, dest)\n  if (opts.preserveTimestamps) handleTimestamps(srcStat.mode, src, dest)\n  return setDestMode(dest, srcStat.mode)\n}\n\nfunction handleTimestamps (srcMode, src, dest) {\n  // Make sure the file is writable before setting the timestamp\n  // otherwise open fails with EPERM when invoked with 'r+'\n  // (through utimes call)\n  if (fileIsNotWritable(srcMode)) makeFileWritable(dest, srcMode)\n  return setDestTimestamps(src, dest)\n}\n\nfunction fileIsNotWritable (srcMode) {\n  return (srcMode & 0o200) === 0\n}\n\nfunction makeFileWritable (dest, srcMode) {\n  return setDestMode(dest, srcMode | 0o200)\n}\n\nfunction setDestMode (dest, srcMode) {\n  return fs.chmodSync(dest, srcMode)\n}\n\nfunction setDestTimestamps (src, dest) {\n  // The initial srcStat.atime cannot be trusted\n  // because it is modified by the read(2) system call\n  // (See https://nodejs.org/api/fs.html#fs_stat_time_values)\n  const updatedSrcStat = fs.statSync(src)\n  return utimesMillisSync(dest, updatedSrcStat.atime, updatedSrcStat.mtime)\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return mkDirAndCopy(srcStat.mode, src, dest, opts)\n  return copyDir(src, dest, opts)\n}\n\nfunction mkDirAndCopy (srcMode, src, dest, opts) {\n  fs.mkdirSync(dest)\n  copyDir(src, dest, opts)\n  return setDestMode(dest, srcMode)\n}\n\nfunction copyDir (src, dest, opts) {\n  fs.readdirSync(src).forEach(item => copyDirItem(item, src, dest, opts))\n}\n\nfunction copyDirItem (item, src, dest, opts) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  if (opts.filter && !opts.filter(srcItem, destItem)) return\n  const { destStat } = stat.checkPathsSync(srcItem, destItem, 'copy', opts)\n  return getStats(destStat, srcItem, destItem, opts)\n}\n\nfunction onLink (destStat, src, dest, opts) {\n  let resolvedSrc = fs.readlinkSync(src)\n  if (opts.dereference) {\n    resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n  }\n\n  if (!destStat) {\n    return fs.symlinkSync(resolvedSrc, dest)\n  } else {\n    let resolvedDest\n    try {\n      resolvedDest = fs.readlinkSync(dest)\n    } catch (err) {\n      // dest exists and is a regular file or directory,\n      // Windows may throw UNKNOWN error. If dest already exists,\n      // fs throws error anyway, so no need to guard against it here.\n      if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlinkSync(resolvedSrc, dest)\n      throw err\n    }\n    if (opts.dereference) {\n      resolvedDest = path.resolve(process.cwd(), resolvedDest)\n    }\n    if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n      throw new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`)\n    }\n\n    // prevent copy if src is a subdir of dest since unlinking\n    // dest in this case would result in removing src contents\n    // and therefore a broken symlink would be created.\n    if (stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n      throw new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`)\n    }\n    return copyLink(resolvedSrc, dest)\n  }\n}\n\nfunction copyLink (resolvedSrc, dest) {\n  fs.unlinkSync(dest)\n  return fs.symlinkSync(resolvedSrc, dest)\n}\n\nmodule.exports = copySync\n","'use strict'\n\nconst fs = require('../fs')\nconst path = require('path')\nconst { mkdirs } = require('../mkdirs')\nconst { pathExists } = require('../path-exists')\nconst { utimesMillis } = require('../util/utimes')\nconst stat = require('../util/stat')\n\nasync function copy (src, dest, opts = {}) {\n  if (typeof opts === 'function') {\n    opts = { filter: opts }\n  }\n\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    process.emitWarning(\n      'Using the preserveTimestamps option in 32-bit node is not recommended;\\n\\n' +\n      '\\tsee https://github.com/jprichardson/node-fs-extra/issues/269',\n      'Warning', 'fs-extra-WARN0001'\n    )\n  }\n\n  const { srcStat, destStat } = await stat.checkPaths(src, dest, 'copy', opts)\n\n  await stat.checkParentPaths(src, srcStat, dest, 'copy')\n\n  const include = await runFilter(src, dest, opts)\n\n  if (!include) return\n\n  // check if the parent of dest exists, and create it if it doesn't exist\n  const destParent = path.dirname(dest)\n  const dirExists = await pathExists(destParent)\n  if (!dirExists) {\n    await mkdirs(destParent)\n  }\n\n  await getStatsAndPerformCopy(destStat, src, dest, opts)\n}\n\nasync function runFilter (src, dest, opts) {\n  if (!opts.filter) return true\n  return opts.filter(src, dest)\n}\n\nasync function getStatsAndPerformCopy (destStat, src, dest, opts) {\n  const statFn = opts.dereference ? fs.stat : fs.lstat\n  const srcStat = await statFn(src)\n\n  if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts)\n\n  if (\n    srcStat.isFile() ||\n    srcStat.isCharacterDevice() ||\n    srcStat.isBlockDevice()\n  ) return onFile(srcStat, destStat, src, dest, opts)\n\n  if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts)\n  if (srcStat.isSocket()) throw new Error(`Cannot copy a socket file: ${src}`)\n  if (srcStat.isFIFO()) throw new Error(`Cannot copy a FIFO pipe: ${src}`)\n  throw new Error(`Unknown file: ${src}`)\n}\n\nasync function onFile (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts)\n\n  if (opts.overwrite) {\n    await fs.unlink(dest)\n    return copyFile(srcStat, src, dest, opts)\n  }\n  if (opts.errorOnExist) {\n    throw new Error(`'${dest}' already exists`)\n  }\n}\n\nasync function copyFile (srcStat, src, dest, opts) {\n  await fs.copyFile(src, dest)\n  if (opts.preserveTimestamps) {\n    // Make sure the file is writable before setting the timestamp\n    // otherwise open fails with EPERM when invoked with 'r+'\n    // (through utimes call)\n    if (fileIsNotWritable(srcStat.mode)) {\n      await makeFileWritable(dest, srcStat.mode)\n    }\n\n    // Set timestamps and mode correspondingly\n\n    // Note that The initial srcStat.atime cannot be trusted\n    // because it is modified by the read(2) system call\n    // (See https://nodejs.org/api/fs.html#fs_stat_time_values)\n    const updatedSrcStat = await fs.stat(src)\n    await utimesMillis(dest, updatedSrcStat.atime, updatedSrcStat.mtime)\n  }\n\n  return fs.chmod(dest, srcStat.mode)\n}\n\nfunction fileIsNotWritable (srcMode) {\n  return (srcMode & 0o200) === 0\n}\n\nfunction makeFileWritable (dest, srcMode) {\n  return fs.chmod(dest, srcMode | 0o200)\n}\n\nasync function onDir (srcStat, destStat, src, dest, opts) {\n  // the dest directory might not exist, create it\n  if (!destStat) {\n    await fs.mkdir(dest)\n  }\n\n  const items = await fs.readdir(src)\n\n  // loop through the files in the current directory to copy everything\n  await Promise.all(items.map(async item => {\n    const srcItem = path.join(src, item)\n    const destItem = path.join(dest, item)\n\n    // skip the item if it is matches by the filter function\n    const include = await runFilter(srcItem, destItem, opts)\n    if (!include) return\n\n    const { destStat } = await stat.checkPaths(srcItem, destItem, 'copy', opts)\n\n    // If the item is a copyable file, `getStatsAndPerformCopy` will copy it\n    // If the item is a directory, `getStatsAndPerformCopy` will call `onDir` recursively\n    return getStatsAndPerformCopy(destStat, srcItem, destItem, opts)\n  }))\n\n  if (!destStat) {\n    await fs.chmod(dest, srcStat.mode)\n  }\n}\n\nasync function onLink (destStat, src, dest, opts) {\n  let resolvedSrc = await fs.readlink(src)\n  if (opts.dereference) {\n    resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n  }\n  if (!destStat) {\n    return fs.symlink(resolvedSrc, dest)\n  }\n\n  let resolvedDest = null\n  try {\n    resolvedDest = await fs.readlink(dest)\n  } catch (e) {\n    // dest exists and is a regular file or directory,\n    // Windows may throw UNKNOWN error. If dest already exists,\n    // fs throws error anyway, so no need to guard against it here.\n    if (e.code === 'EINVAL' || e.code === 'UNKNOWN') return fs.symlink(resolvedSrc, dest)\n    throw e\n  }\n  if (opts.dereference) {\n    resolvedDest = path.resolve(process.cwd(), resolvedDest)\n  }\n  if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n    throw new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`)\n  }\n\n  // do not copy if src is a subdir of dest since unlinking\n  // dest in this case would result in removing src contents\n  // and therefore a broken symlink would be created.\n  if (stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n    throw new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`)\n  }\n\n  // copy the link\n  await fs.unlink(dest)\n  return fs.symlink(resolvedSrc, dest)\n}\n\nmodule.exports = copy\n","'use strict'\n\nconst u = require('universalify').fromPromise\nmodule.exports = {\n  copy: u(require('./copy')),\n  copySync: require('./copy-sync')\n}\n","'use strict'\n\nconst u = require('universalify').fromPromise\nconst fs = require('../fs')\nconst path = require('path')\nconst mkdir = require('../mkdirs')\nconst remove = require('../remove')\n\nconst emptyDir = u(async function emptyDir (dir) {\n  let items\n  try {\n    items = await fs.readdir(dir)\n  } catch {\n    return mkdir.mkdirs(dir)\n  }\n\n  return Promise.all(items.map(item => remove.remove(path.join(dir, item))))\n})\n\nfunction emptyDirSync (dir) {\n  let items\n  try {\n    items = fs.readdirSync(dir)\n  } catch {\n    return mkdir.mkdirsSync(dir)\n  }\n\n  items.forEach(item => {\n    item = path.join(dir, item)\n    remove.removeSync(item)\n  })\n}\n\nmodule.exports = {\n  emptyDirSync,\n  emptydirSync: emptyDirSync,\n  emptyDir,\n  emptydir: emptyDir\n}\n","'use strict'\n\nconst u = require('universalify').fromPromise\nconst path = require('path')\nconst fs = require('../fs')\nconst mkdir = require('../mkdirs')\n\nasync function createFile (file) {\n  let stats\n  try {\n    stats = await fs.stat(file)\n  } catch { }\n  if (stats && stats.isFile()) return\n\n  const dir = path.dirname(file)\n\n  let dirStats = null\n  try {\n    dirStats = await fs.stat(dir)\n  } catch (err) {\n    // if the directory doesn't exist, make it\n    if (err.code === 'ENOENT') {\n      await mkdir.mkdirs(dir)\n      await fs.writeFile(file, '')\n      return\n    } else {\n      throw err\n    }\n  }\n\n  if (dirStats.isDirectory()) {\n    await fs.writeFile(file, '')\n  } else {\n    // parent is not a directory\n    // This is just to cause an internal ENOTDIR error to be thrown\n    await fs.readdir(dir)\n  }\n}\n\nfunction createFileSync (file) {\n  let stats\n  try {\n    stats = fs.statSync(file)\n  } catch { }\n  if (stats && stats.isFile()) return\n\n  const dir = path.dirname(file)\n  try {\n    if (!fs.statSync(dir).isDirectory()) {\n      // parent is not a directory\n      // This is just to cause an internal ENOTDIR error to be thrown\n      fs.readdirSync(dir)\n    }\n  } catch (err) {\n    // If the stat call above failed because the directory doesn't exist, create it\n    if (err && err.code === 'ENOENT') mkdir.mkdirsSync(dir)\n    else throw err\n  }\n\n  fs.writeFileSync(file, '')\n}\n\nmodule.exports = {\n  createFile: u(createFile),\n  createFileSync\n}\n","'use strict'\n\nconst { createFile, createFileSync } = require('./file')\nconst { createLink, createLinkSync } = require('./link')\nconst { createSymlink, createSymlinkSync } = require('./symlink')\n\nmodule.exports = {\n  // file\n  createFile,\n  createFileSync,\n  ensureFile: createFile,\n  ensureFileSync: createFileSync,\n  // link\n  createLink,\n  createLinkSync,\n  ensureLink: createLink,\n  ensureLinkSync: createLinkSync,\n  // symlink\n  createSymlink,\n  createSymlinkSync,\n  ensureSymlink: createSymlink,\n  ensureSymlinkSync: createSymlinkSync\n}\n","'use strict'\n\nconst u = require('universalify').fromPromise\nconst path = require('path')\nconst fs = require('../fs')\nconst mkdir = require('../mkdirs')\nconst { pathExists } = require('../path-exists')\nconst { areIdentical } = require('../util/stat')\n\nasync function createLink (srcpath, dstpath) {\n  let dstStat\n  try {\n    dstStat = await fs.lstat(dstpath)\n  } catch {\n    // ignore error\n  }\n\n  let srcStat\n  try {\n    srcStat = await fs.lstat(srcpath)\n  } catch (err) {\n    err.message = err.message.replace('lstat', 'ensureLink')\n    throw err\n  }\n\n  if (dstStat && areIdentical(srcStat, dstStat)) return\n\n  const dir = path.dirname(dstpath)\n\n  const dirExists = await pathExists(dir)\n\n  if (!dirExists) {\n    await mkdir.mkdirs(dir)\n  }\n\n  await fs.link(srcpath, dstpath)\n}\n\nfunction createLinkSync (srcpath, dstpath) {\n  let dstStat\n  try {\n    dstStat = fs.lstatSync(dstpath)\n  } catch {}\n\n  try {\n    const srcStat = fs.lstatSync(srcpath)\n    if (dstStat && areIdentical(srcStat, dstStat)) return\n  } catch (err) {\n    err.message = err.message.replace('lstat', 'ensureLink')\n    throw err\n  }\n\n  const dir = path.dirname(dstpath)\n  const dirExists = fs.existsSync(dir)\n  if (dirExists) return fs.linkSync(srcpath, dstpath)\n  mkdir.mkdirsSync(dir)\n\n  return fs.linkSync(srcpath, dstpath)\n}\n\nmodule.exports = {\n  createLink: u(createLink),\n  createLinkSync\n}\n","'use strict'\n\nconst path = require('path')\nconst fs = require('../fs')\nconst { pathExists } = require('../path-exists')\n\nconst u = require('universalify').fromPromise\n\n/**\n * Function that returns two types of paths, one relative to symlink, and one\n * relative to the current working directory. Checks if path is absolute or\n * relative. If the path is relative, this function checks if the path is\n * relative to symlink or relative to current working directory. This is an\n * initiative to find a smarter `srcpath` to supply when building symlinks.\n * This allows you to determine which path to use out of one of three possible\n * types of source paths. The first is an absolute path. This is detected by\n * `path.isAbsolute()`. When an absolute path is provided, it is checked to\n * see if it exists. If it does it's used, if not an error is returned\n * (callback)/ thrown (sync). The other two options for `srcpath` are a\n * relative url. By default Node's `fs.symlink` works by creating a symlink\n * using `dstpath` and expects the `srcpath` to be relative to the newly\n * created symlink. If you provide a `srcpath` that does not exist on the file\n * system it results in a broken symlink. To minimize this, the function\n * checks to see if the 'relative to symlink' source file exists, and if it\n * does it will use it. If it does not, it checks if there's a file that\n * exists that is relative to the current working directory, if does its used.\n * This preserves the expectations of the original fs.symlink spec and adds\n * the ability to pass in `relative to current working direcotry` paths.\n */\n\nasync function symlinkPaths (srcpath, dstpath) {\n  if (path.isAbsolute(srcpath)) {\n    try {\n      await fs.lstat(srcpath)\n    } catch (err) {\n      err.message = err.message.replace('lstat', 'ensureSymlink')\n      throw err\n    }\n\n    return {\n      toCwd: srcpath,\n      toDst: srcpath\n    }\n  }\n\n  const dstdir = path.dirname(dstpath)\n  const relativeToDst = path.join(dstdir, srcpath)\n\n  const exists = await pathExists(relativeToDst)\n  if (exists) {\n    return {\n      toCwd: relativeToDst,\n      toDst: srcpath\n    }\n  }\n\n  try {\n    await fs.lstat(srcpath)\n  } catch (err) {\n    err.message = err.message.replace('lstat', 'ensureSymlink')\n    throw err\n  }\n\n  return {\n    toCwd: srcpath,\n    toDst: path.relative(dstdir, srcpath)\n  }\n}\n\nfunction symlinkPathsSync (srcpath, dstpath) {\n  if (path.isAbsolute(srcpath)) {\n    const exists = fs.existsSync(srcpath)\n    if (!exists) throw new Error('absolute srcpath does not exist')\n    return {\n      toCwd: srcpath,\n      toDst: srcpath\n    }\n  }\n\n  const dstdir = path.dirname(dstpath)\n  const relativeToDst = path.join(dstdir, srcpath)\n  const exists = fs.existsSync(relativeToDst)\n  if (exists) {\n    return {\n      toCwd: relativeToDst,\n      toDst: srcpath\n    }\n  }\n\n  const srcExists = fs.existsSync(srcpath)\n  if (!srcExists) throw new Error('relative srcpath does not exist')\n  return {\n    toCwd: srcpath,\n    toDst: path.relative(dstdir, srcpath)\n  }\n}\n\nmodule.exports = {\n  symlinkPaths: u(symlinkPaths),\n  symlinkPathsSync\n}\n","'use strict'\n\nconst fs = require('../fs')\nconst u = require('universalify').fromPromise\n\nasync function symlinkType (srcpath, type) {\n  if (type) return type\n\n  let stats\n  try {\n    stats = await fs.lstat(srcpath)\n  } catch {\n    return 'file'\n  }\n\n  return (stats && stats.isDirectory()) ? 'dir' : 'file'\n}\n\nfunction symlinkTypeSync (srcpath, type) {\n  if (type) return type\n\n  let stats\n  try {\n    stats = fs.lstatSync(srcpath)\n  } catch {\n    return 'file'\n  }\n  return (stats && stats.isDirectory()) ? 'dir' : 'file'\n}\n\nmodule.exports = {\n  symlinkType: u(symlinkType),\n  symlinkTypeSync\n}\n","'use strict'\n\nconst u = require('universalify').fromPromise\nconst path = require('path')\nconst fs = require('../fs')\n\nconst { mkdirs, mkdirsSync } = require('../mkdirs')\n\nconst { symlinkPaths, symlinkPathsSync } = require('./symlink-paths')\nconst { symlinkType, symlinkTypeSync } = require('./symlink-type')\n\nconst { pathExists } = require('../path-exists')\n\nconst { areIdentical } = require('../util/stat')\n\nasync function createSymlink (srcpath, dstpath, type) {\n  let stats\n  try {\n    stats = await fs.lstat(dstpath)\n  } catch { }\n\n  if (stats && stats.isSymbolicLink()) {\n    const [srcStat, dstStat] = await Promise.all([\n      fs.stat(srcpath),\n      fs.stat(dstpath)\n    ])\n\n    if (areIdentical(srcStat, dstStat)) return\n  }\n\n  const relative = await symlinkPaths(srcpath, dstpath)\n  srcpath = relative.toDst\n  const toType = await symlinkType(relative.toCwd, type)\n  const dir = path.dirname(dstpath)\n\n  if (!(await pathExists(dir))) {\n    await mkdirs(dir)\n  }\n\n  return fs.symlink(srcpath, dstpath, toType)\n}\n\nfunction createSymlinkSync (srcpath, dstpath, type) {\n  let stats\n  try {\n    stats = fs.lstatSync(dstpath)\n  } catch { }\n  if (stats && stats.isSymbolicLink()) {\n    const srcStat = fs.statSync(srcpath)\n    const dstStat = fs.statSync(dstpath)\n    if (areIdentical(srcStat, dstStat)) return\n  }\n\n  const relative = symlinkPathsSync(srcpath, dstpath)\n  srcpath = relative.toDst\n  type = symlinkTypeSync(relative.toCwd, type)\n  const dir = path.dirname(dstpath)\n  const exists = fs.existsSync(dir)\n  if (exists) return fs.symlinkSync(srcpath, dstpath, type)\n  mkdirsSync(dir)\n  return fs.symlinkSync(srcpath, dstpath, type)\n}\n\nmodule.exports = {\n  createSymlink: u(createSymlink),\n  createSymlinkSync\n}\n","'use strict'\n// This is adapted from https://github.com/normalize/mz\n// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\n\nconst api = [\n  'access',\n  'appendFile',\n  'chmod',\n  'chown',\n  'close',\n  'copyFile',\n  'fchmod',\n  'fchown',\n  'fdatasync',\n  'fstat',\n  'fsync',\n  'ftruncate',\n  'futimes',\n  'lchmod',\n  'lchown',\n  'link',\n  'lstat',\n  'mkdir',\n  'mkdtemp',\n  'open',\n  'opendir',\n  'readdir',\n  'readFile',\n  'readlink',\n  'realpath',\n  'rename',\n  'rm',\n  'rmdir',\n  'stat',\n  'symlink',\n  'truncate',\n  'unlink',\n  'utimes',\n  'writeFile'\n].filter(key => {\n  // Some commands are not available on some systems. Ex:\n  // fs.cp was added in Node.js v16.7.0\n  // fs.lchown is not available on at least some Linux\n  return typeof fs[key] === 'function'\n})\n\n// Export cloned fs:\nObject.assign(exports, fs)\n\n// Universalify async methods:\napi.forEach(method => {\n  exports[method] = u(fs[method])\n})\n\n// We differ from mz/fs in that we still ship the old, broken, fs.exists()\n// since we are a drop-in replacement for the native module\nexports.exists = function (filename, callback) {\n  if (typeof callback === 'function') {\n    return fs.exists(filename, callback)\n  }\n  return new Promise(resolve => {\n    return fs.exists(filename, resolve)\n  })\n}\n\n// fs.read(), fs.write(), fs.readv(), & fs.writev() need special treatment due to multiple callback args\n\nexports.read = function (fd, buffer, offset, length, position, callback) {\n  if (typeof callback === 'function') {\n    return fs.read(fd, buffer, offset, length, position, callback)\n  }\n  return new Promise((resolve, reject) => {\n    fs.read(fd, buffer, offset, length, position, (err, bytesRead, buffer) => {\n      if (err) return reject(err)\n      resolve({ bytesRead, buffer })\n    })\n  })\n}\n\n// Function signature can be\n// fs.write(fd, buffer[, offset[, length[, position]]], callback)\n// OR\n// fs.write(fd, string[, position[, encoding]], callback)\n// We need to handle both cases, so we use ...args\nexports.write = function (fd, buffer, ...args) {\n  if (typeof args[args.length - 1] === 'function') {\n    return fs.write(fd, buffer, ...args)\n  }\n\n  return new Promise((resolve, reject) => {\n    fs.write(fd, buffer, ...args, (err, bytesWritten, buffer) => {\n      if (err) return reject(err)\n      resolve({ bytesWritten, buffer })\n    })\n  })\n}\n\n// Function signature is\n// s.readv(fd, buffers[, position], callback)\n// We need to handle the optional arg, so we use ...args\nexports.readv = function (fd, buffers, ...args) {\n  if (typeof args[args.length - 1] === 'function') {\n    return fs.readv(fd, buffers, ...args)\n  }\n\n  return new Promise((resolve, reject) => {\n    fs.readv(fd, buffers, ...args, (err, bytesRead, buffers) => {\n      if (err) return reject(err)\n      resolve({ bytesRead, buffers })\n    })\n  })\n}\n\n// Function signature is\n// s.writev(fd, buffers[, position], callback)\n// We need to handle the optional arg, so we use ...args\nexports.writev = function (fd, buffers, ...args) {\n  if (typeof args[args.length - 1] === 'function') {\n    return fs.writev(fd, buffers, ...args)\n  }\n\n  return new Promise((resolve, reject) => {\n    fs.writev(fd, buffers, ...args, (err, bytesWritten, buffers) => {\n      if (err) return reject(err)\n      resolve({ bytesWritten, buffers })\n    })\n  })\n}\n\n// fs.realpath.native sometimes not available if fs is monkey-patched\nif (typeof fs.realpath.native === 'function') {\n  exports.realpath.native = u(fs.realpath.native)\n} else {\n  process.emitWarning(\n    'fs.realpath.native is not a function. Is fs being monkey-patched?',\n    'Warning', 'fs-extra-WARN0003'\n  )\n}\n","'use strict'\n\nmodule.exports = {\n  // Export promiseified graceful-fs:\n  ...require('./fs'),\n  // Export extra methods:\n  ...require('./copy'),\n  ...require('./empty'),\n  ...require('./ensure'),\n  ...require('./json'),\n  ...require('./mkdirs'),\n  ...require('./move'),\n  ...require('./output-file'),\n  ...require('./path-exists'),\n  ...require('./remove')\n}\n","'use strict'\n\nconst u = require('universalify').fromPromise\nconst jsonFile = require('./jsonfile')\n\njsonFile.outputJson = u(require('./output-json'))\njsonFile.outputJsonSync = require('./output-json-sync')\n// aliases\njsonFile.outputJSON = jsonFile.outputJson\njsonFile.outputJSONSync = jsonFile.outputJsonSync\njsonFile.writeJSON = jsonFile.writeJson\njsonFile.writeJSONSync = jsonFile.writeJsonSync\njsonFile.readJSON = jsonFile.readJson\njsonFile.readJSONSync = jsonFile.readJsonSync\n\nmodule.exports = jsonFile\n","'use strict'\n\nconst jsonFile = require('jsonfile')\n\nmodule.exports = {\n  // jsonfile exports\n  readJson: jsonFile.readFile,\n  readJsonSync: jsonFile.readFileSync,\n  writeJson: jsonFile.writeFile,\n  writeJsonSync: jsonFile.writeFileSync\n}\n","'use strict'\n\nconst { stringify } = require('jsonfile/utils')\nconst { outputFileSync } = require('../output-file')\n\nfunction outputJsonSync (file, data, options) {\n  const str = stringify(data, options)\n\n  outputFileSync(file, str, options)\n}\n\nmodule.exports = outputJsonSync\n","'use strict'\n\nconst { stringify } = require('jsonfile/utils')\nconst { outputFile } = require('../output-file')\n\nasync function outputJson (file, data, options = {}) {\n  const str = stringify(data, options)\n\n  await outputFile(file, str, options)\n}\n\nmodule.exports = outputJson\n","'use strict'\nconst u = require('universalify').fromPromise\nconst { makeDir: _makeDir, makeDirSync } = require('./make-dir')\nconst makeDir = u(_makeDir)\n\nmodule.exports = {\n  mkdirs: makeDir,\n  mkdirsSync: makeDirSync,\n  // alias\n  mkdirp: makeDir,\n  mkdirpSync: makeDirSync,\n  ensureDir: makeDir,\n  ensureDirSync: makeDirSync\n}\n","'use strict'\nconst fs = require('../fs')\nconst { checkPath } = require('./utils')\n\nconst getMode = options => {\n  const defaults = { mode: 0o777 }\n  if (typeof options === 'number') return options\n  return ({ ...defaults, ...options }).mode\n}\n\nmodule.exports.makeDir = async (dir, options) => {\n  checkPath(dir)\n\n  return fs.mkdir(dir, {\n    mode: getMode(options),\n    recursive: true\n  })\n}\n\nmodule.exports.makeDirSync = (dir, options) => {\n  checkPath(dir)\n\n  return fs.mkdirSync(dir, {\n    mode: getMode(options),\n    recursive: true\n  })\n}\n","// Adapted from https://github.com/sindresorhus/make-dir\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict'\nconst path = require('path')\n\n// https://github.com/nodejs/node/issues/8987\n// https://github.com/libuv/libuv/pull/1088\nmodule.exports.checkPath = function checkPath (pth) {\n  if (process.platform === 'win32') {\n    const pathHasInvalidWinCharacters = /[<>:\"|?*]/.test(pth.replace(path.parse(pth).root, ''))\n\n    if (pathHasInvalidWinCharacters) {\n      const error = new Error(`Path contains invalid characters: ${pth}`)\n      error.code = 'EINVAL'\n      throw error\n    }\n  }\n}\n","'use strict'\n\nconst u = require('universalify').fromPromise\nmodule.exports = {\n  move: u(require('./move')),\n  moveSync: require('./move-sync')\n}\n","'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst copySync = require('../copy').copySync\nconst removeSync = require('../remove').removeSync\nconst mkdirpSync = require('../mkdirs').mkdirpSync\nconst stat = require('../util/stat')\n\nfunction moveSync (src, dest, opts) {\n  opts = opts || {}\n  const overwrite = opts.overwrite || opts.clobber || false\n\n  const { srcStat, isChangingCase = false } = stat.checkPathsSync(src, dest, 'move', opts)\n  stat.checkParentPathsSync(src, srcStat, dest, 'move')\n  if (!isParentRoot(dest)) mkdirpSync(path.dirname(dest))\n  return doRename(src, dest, overwrite, isChangingCase)\n}\n\nfunction isParentRoot (dest) {\n  const parent = path.dirname(dest)\n  const parsedPath = path.parse(parent)\n  return parsedPath.root === parent\n}\n\nfunction doRename (src, dest, overwrite, isChangingCase) {\n  if (isChangingCase) return rename(src, dest, overwrite)\n  if (overwrite) {\n    removeSync(dest)\n    return rename(src, dest, overwrite)\n  }\n  if (fs.existsSync(dest)) throw new Error('dest already exists.')\n  return rename(src, dest, overwrite)\n}\n\nfunction rename (src, dest, overwrite) {\n  try {\n    fs.renameSync(src, dest)\n  } catch (err) {\n    if (err.code !== 'EXDEV') throw err\n    return moveAcrossDevice(src, dest, overwrite)\n  }\n}\n\nfunction moveAcrossDevice (src, dest, overwrite) {\n  const opts = {\n    overwrite,\n    errorOnExist: true,\n    preserveTimestamps: true\n  }\n  copySync(src, dest, opts)\n  return removeSync(src)\n}\n\nmodule.exports = moveSync\n","'use strict'\n\nconst fs = require('../fs')\nconst path = require('path')\nconst { copy } = require('../copy')\nconst { remove } = require('../remove')\nconst { mkdirp } = require('../mkdirs')\nconst { pathExists } = require('../path-exists')\nconst stat = require('../util/stat')\n\nasync function move (src, dest, opts = {}) {\n  const overwrite = opts.overwrite || opts.clobber || false\n\n  const { srcStat, isChangingCase = false } = await stat.checkPaths(src, dest, 'move', opts)\n\n  await stat.checkParentPaths(src, srcStat, dest, 'move')\n\n  // If the parent of dest is not root, make sure it exists before proceeding\n  const destParent = path.dirname(dest)\n  const parsedParentPath = path.parse(destParent)\n  if (parsedParentPath.root !== destParent) {\n    await mkdirp(destParent)\n  }\n\n  return doRename(src, dest, overwrite, isChangingCase)\n}\n\nasync function doRename (src, dest, overwrite, isChangingCase) {\n  if (!isChangingCase) {\n    if (overwrite) {\n      await remove(dest)\n    } else if (await pathExists(dest)) {\n      throw new Error('dest already exists.')\n    }\n  }\n\n  try {\n    // Try w/ rename first, and try copy + remove if EXDEV\n    await fs.rename(src, dest)\n  } catch (err) {\n    if (err.code !== 'EXDEV') {\n      throw err\n    }\n    await moveAcrossDevice(src, dest, overwrite)\n  }\n}\n\nasync function moveAcrossDevice (src, dest, overwrite) {\n  const opts = {\n    overwrite,\n    errorOnExist: true,\n    preserveTimestamps: true\n  }\n\n  await copy(src, dest, opts)\n  return remove(src)\n}\n\nmodule.exports = move\n","'use strict'\n\nconst u = require('universalify').fromPromise\nconst fs = require('../fs')\nconst path = require('path')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\n\nasync function outputFile (file, data, encoding = 'utf-8') {\n  const dir = path.dirname(file)\n\n  if (!(await pathExists(dir))) {\n    await mkdir.mkdirs(dir)\n  }\n\n  return fs.writeFile(file, data, encoding)\n}\n\nfunction outputFileSync (file, ...args) {\n  const dir = path.dirname(file)\n  if (!fs.existsSync(dir)) {\n    mkdir.mkdirsSync(dir)\n  }\n\n  fs.writeFileSync(file, ...args)\n}\n\nmodule.exports = {\n  outputFile: u(outputFile),\n  outputFileSync\n}\n","'use strict'\nconst u = require('universalify').fromPromise\nconst fs = require('../fs')\n\nfunction pathExists (path) {\n  return fs.access(path).then(() => true).catch(() => false)\n}\n\nmodule.exports = {\n  pathExists: u(pathExists),\n  pathExistsSync: fs.existsSync\n}\n","'use strict'\n\nconst fs = require('graceful-fs')\nconst u = require('universalify').fromCallback\n\nfunction remove (path, callback) {\n  fs.rm(path, { recursive: true, force: true }, callback)\n}\n\nfunction removeSync (path) {\n  fs.rmSync(path, { recursive: true, force: true })\n}\n\nmodule.exports = {\n  remove: u(remove),\n  removeSync\n}\n","'use strict'\n\nconst fs = require('../fs')\nconst path = require('path')\nconst u = require('universalify').fromPromise\n\nfunction getStats (src, dest, opts) {\n  const statFunc = opts.dereference\n    ? (file) => fs.stat(file, { bigint: true })\n    : (file) => fs.lstat(file, { bigint: true })\n  return Promise.all([\n    statFunc(src),\n    statFunc(dest).catch(err => {\n      if (err.code === 'ENOENT') return null\n      throw err\n    })\n  ]).then(([srcStat, destStat]) => ({ srcStat, destStat }))\n}\n\nfunction getStatsSync (src, dest, opts) {\n  let destStat\n  const statFunc = opts.dereference\n    ? (file) => fs.statSync(file, { bigint: true })\n    : (file) => fs.lstatSync(file, { bigint: true })\n  const srcStat = statFunc(src)\n  try {\n    destStat = statFunc(dest)\n  } catch (err) {\n    if (err.code === 'ENOENT') return { srcStat, destStat: null }\n    throw err\n  }\n  return { srcStat, destStat }\n}\n\nasync function checkPaths (src, dest, funcName, opts) {\n  const { srcStat, destStat } = await getStats(src, dest, opts)\n  if (destStat) {\n    if (areIdentical(srcStat, destStat)) {\n      const srcBaseName = path.basename(src)\n      const destBaseName = path.basename(dest)\n      if (funcName === 'move' &&\n        srcBaseName !== destBaseName &&\n        srcBaseName.toLowerCase() === destBaseName.toLowerCase()) {\n        return { srcStat, destStat, isChangingCase: true }\n      }\n      throw new Error('Source and destination must not be the same.')\n    }\n    if (srcStat.isDirectory() && !destStat.isDirectory()) {\n      throw new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`)\n    }\n    if (!srcStat.isDirectory() && destStat.isDirectory()) {\n      throw new Error(`Cannot overwrite directory '${dest}' with non-directory '${src}'.`)\n    }\n  }\n\n  if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n\n  return { srcStat, destStat }\n}\n\nfunction checkPathsSync (src, dest, funcName, opts) {\n  const { srcStat, destStat } = getStatsSync(src, dest, opts)\n\n  if (destStat) {\n    if (areIdentical(srcStat, destStat)) {\n      const srcBaseName = path.basename(src)\n      const destBaseName = path.basename(dest)\n      if (funcName === 'move' &&\n        srcBaseName !== destBaseName &&\n        srcBaseName.toLowerCase() === destBaseName.toLowerCase()) {\n        return { srcStat, destStat, isChangingCase: true }\n      }\n      throw new Error('Source and destination must not be the same.')\n    }\n    if (srcStat.isDirectory() && !destStat.isDirectory()) {\n      throw new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`)\n    }\n    if (!srcStat.isDirectory() && destStat.isDirectory()) {\n      throw new Error(`Cannot overwrite directory '${dest}' with non-directory '${src}'.`)\n    }\n  }\n\n  if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n  return { srcStat, destStat }\n}\n\n// recursively check if dest parent is a subdirectory of src.\n// It works for all file types including symlinks since it\n// checks the src and dest inodes. It starts from the deepest\n// parent and stops once it reaches the src parent or the root path.\nasync function checkParentPaths (src, srcStat, dest, funcName) {\n  const srcParent = path.resolve(path.dirname(src))\n  const destParent = path.resolve(path.dirname(dest))\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return\n\n  let destStat\n  try {\n    destStat = await fs.stat(destParent, { bigint: true })\n  } catch (err) {\n    if (err.code === 'ENOENT') return\n    throw err\n  }\n\n  if (areIdentical(srcStat, destStat)) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n\n  return checkParentPaths(src, srcStat, destParent, funcName)\n}\n\nfunction checkParentPathsSync (src, srcStat, dest, funcName) {\n  const srcParent = path.resolve(path.dirname(src))\n  const destParent = path.resolve(path.dirname(dest))\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return\n  let destStat\n  try {\n    destStat = fs.statSync(destParent, { bigint: true })\n  } catch (err) {\n    if (err.code === 'ENOENT') return\n    throw err\n  }\n  if (areIdentical(srcStat, destStat)) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n  return checkParentPathsSync(src, srcStat, destParent, funcName)\n}\n\nfunction areIdentical (srcStat, destStat) {\n  return destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev\n}\n\n// return true if dest is a subdir of src, otherwise false.\n// It only checks the path strings.\nfunction isSrcSubdir (src, dest) {\n  const srcArr = path.resolve(src).split(path.sep).filter(i => i)\n  const destArr = path.resolve(dest).split(path.sep).filter(i => i)\n  return srcArr.every((cur, i) => destArr[i] === cur)\n}\n\nfunction errMsg (src, dest, funcName) {\n  return `Cannot ${funcName} '${src}' to a subdirectory of itself, '${dest}'.`\n}\n\nmodule.exports = {\n  // checkPaths\n  checkPaths: u(checkPaths),\n  checkPathsSync,\n  // checkParent\n  checkParentPaths: u(checkParentPaths),\n  checkParentPathsSync,\n  // Misc\n  isSrcSubdir,\n  areIdentical\n}\n","'use strict'\n\nconst fs = require('../fs')\nconst u = require('universalify').fromPromise\n\nasync function utimesMillis (path, atime, mtime) {\n  // if (!HAS_MILLIS_RES) return fs.utimes(path, atime, mtime, callback)\n  const fd = await fs.open(path, 'r+')\n\n  let closeErr = null\n\n  try {\n    await fs.futimes(fd, atime, mtime)\n  } finally {\n    try {\n      await fs.close(fd)\n    } catch (e) {\n      closeErr = e\n    }\n  }\n\n  if (closeErr) {\n    throw closeErr\n  }\n}\n\nfunction utimesMillisSync (path, atime, mtime) {\n  const fd = fs.openSync(path, 'r+')\n  fs.futimesSync(fd, atime, mtime)\n  return fs.closeSync(fd)\n}\n\nmodule.exports = {\n  utimesMillis: u(utimesMillis),\n  utimesMillisSync\n}\n","'use strict'\n\nmodule.exports = clone\n\nvar getPrototypeOf = Object.getPrototypeOf || function (obj) {\n  return obj.__proto__\n}\n\nfunction clone (obj) {\n  if (obj === null || typeof obj !== 'object')\n    return obj\n\n  if (obj instanceof Object)\n    var copy = { __proto__: getPrototypeOf(obj) }\n  else\n    var copy = Object.create(null)\n\n  Object.getOwnPropertyNames(obj).forEach(function (key) {\n    Object.defineProperty(copy, key, Object.getOwnPropertyDescriptor(obj, key))\n  })\n\n  return copy\n}\n","var fs = require('fs')\nvar polyfills = require('./polyfills.js')\nvar legacy = require('./legacy-streams.js')\nvar clone = require('./clone.js')\n\nvar util = require('util')\n\n/* istanbul ignore next - node 0.x polyfill */\nvar gracefulQueue\nvar previousSymbol\n\n/* istanbul ignore else - node 0.x polyfill */\nif (typeof Symbol === 'function' && typeof Symbol.for === 'function') {\n  gracefulQueue = Symbol.for('graceful-fs.queue')\n  // This is used in testing by future versions\n  previousSymbol = Symbol.for('graceful-fs.previous')\n} else {\n  gracefulQueue = '___graceful-fs.queue'\n  previousSymbol = '___graceful-fs.previous'\n}\n\nfunction noop () {}\n\nfunction publishQueue(context, queue) {\n  Object.defineProperty(context, gracefulQueue, {\n    get: function() {\n      return queue\n    }\n  })\n}\n\nvar debug = noop\nif (util.debuglog)\n  debug = util.debuglog('gfs4')\nelse if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || ''))\n  debug = function() {\n    var m = util.format.apply(util, arguments)\n    m = 'GFS4: ' + m.split(/\\n/).join('\\nGFS4: ')\n    console.error(m)\n  }\n\n// Once time initialization\nif (!fs[gracefulQueue]) {\n  // This queue can be shared by multiple loaded instances\n  var queue = global[gracefulQueue] || []\n  publishQueue(fs, queue)\n\n  // Patch fs.close/closeSync to shared queue version, because we need\n  // to retry() whenever a close happens *anywhere* in the program.\n  // This is essential when multiple graceful-fs instances are\n  // in play at the same time.\n  fs.close = (function (fs$close) {\n    function close (fd, cb) {\n      return fs$close.call(fs, fd, function (err) {\n        // This function uses the graceful-fs shared queue\n        if (!err) {\n          resetQueue()\n        }\n\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n      })\n    }\n\n    Object.defineProperty(close, previousSymbol, {\n      value: fs$close\n    })\n    return close\n  })(fs.close)\n\n  fs.closeSync = (function (fs$closeSync) {\n    function closeSync (fd) {\n      // This function uses the graceful-fs shared queue\n      fs$closeSync.apply(fs, arguments)\n      resetQueue()\n    }\n\n    Object.defineProperty(closeSync, previousSymbol, {\n      value: fs$closeSync\n    })\n    return closeSync\n  })(fs.closeSync)\n\n  if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) {\n    process.on('exit', function() {\n      debug(fs[gracefulQueue])\n      require('assert').equal(fs[gracefulQueue].length, 0)\n    })\n  }\n}\n\nif (!global[gracefulQueue]) {\n  publishQueue(global, fs[gracefulQueue]);\n}\n\nmodule.exports = patch(clone(fs))\nif (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {\n    module.exports = patch(fs)\n    fs.__patched = true;\n}\n\nfunction patch (fs) {\n  // Everything that references the open() function needs to be in here\n  polyfills(fs)\n  fs.gracefulify = patch\n\n  fs.createReadStream = createReadStream\n  fs.createWriteStream = createWriteStream\n  var fs$readFile = fs.readFile\n  fs.readFile = readFile\n  function readFile (path, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$readFile(path, options, cb)\n\n    function go$readFile (path, options, cb, startTime) {\n      return fs$readFile(path, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$readFile, [path, options, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$writeFile = fs.writeFile\n  fs.writeFile = writeFile\n  function writeFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$writeFile(path, data, options, cb)\n\n    function go$writeFile (path, data, options, cb, startTime) {\n      return fs$writeFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$writeFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$appendFile = fs.appendFile\n  if (fs$appendFile)\n    fs.appendFile = appendFile\n  function appendFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$appendFile(path, data, options, cb)\n\n    function go$appendFile (path, data, options, cb, startTime) {\n      return fs$appendFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$appendFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$copyFile = fs.copyFile\n  if (fs$copyFile)\n    fs.copyFile = copyFile\n  function copyFile (src, dest, flags, cb) {\n    if (typeof flags === 'function') {\n      cb = flags\n      flags = 0\n    }\n    return go$copyFile(src, dest, flags, cb)\n\n    function go$copyFile (src, dest, flags, cb, startTime) {\n      return fs$copyFile(src, dest, flags, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$copyFile, [src, dest, flags, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$readdir = fs.readdir\n  fs.readdir = readdir\n  var noReaddirOptionVersions = /^v[0-5]\\./\n  function readdir (path, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    var go$readdir = noReaddirOptionVersions.test(process.version)\n      ? function go$readdir (path, options, cb, startTime) {\n        return fs$readdir(path, fs$readdirCallback(\n          path, options, cb, startTime\n        ))\n      }\n      : function go$readdir (path, options, cb, startTime) {\n        return fs$readdir(path, options, fs$readdirCallback(\n          path, options, cb, startTime\n        ))\n      }\n\n    return go$readdir(path, options, cb)\n\n    function fs$readdirCallback (path, options, cb, startTime) {\n      return function (err, files) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([\n            go$readdir,\n            [path, options, cb],\n            err,\n            startTime || Date.now(),\n            Date.now()\n          ])\n        else {\n          if (files && files.sort)\n            files.sort()\n\n          if (typeof cb === 'function')\n            cb.call(this, err, files)\n        }\n      }\n    }\n  }\n\n  if (process.version.substr(0, 4) === 'v0.8') {\n    var legStreams = legacy(fs)\n    ReadStream = legStreams.ReadStream\n    WriteStream = legStreams.WriteStream\n  }\n\n  var fs$ReadStream = fs.ReadStream\n  if (fs$ReadStream) {\n    ReadStream.prototype = Object.create(fs$ReadStream.prototype)\n    ReadStream.prototype.open = ReadStream$open\n  }\n\n  var fs$WriteStream = fs.WriteStream\n  if (fs$WriteStream) {\n    WriteStream.prototype = Object.create(fs$WriteStream.prototype)\n    WriteStream.prototype.open = WriteStream$open\n  }\n\n  Object.defineProperty(fs, 'ReadStream', {\n    get: function () {\n      return ReadStream\n    },\n    set: function (val) {\n      ReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  Object.defineProperty(fs, 'WriteStream', {\n    get: function () {\n      return WriteStream\n    },\n    set: function (val) {\n      WriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  // legacy names\n  var FileReadStream = ReadStream\n  Object.defineProperty(fs, 'FileReadStream', {\n    get: function () {\n      return FileReadStream\n    },\n    set: function (val) {\n      FileReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  var FileWriteStream = WriteStream\n  Object.defineProperty(fs, 'FileWriteStream', {\n    get: function () {\n      return FileWriteStream\n    },\n    set: function (val) {\n      FileWriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  function ReadStream (path, options) {\n    if (this instanceof ReadStream)\n      return fs$ReadStream.apply(this, arguments), this\n    else\n      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)\n  }\n\n  function ReadStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        if (that.autoClose)\n          that.destroy()\n\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n        that.read()\n      }\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (this instanceof WriteStream)\n      return fs$WriteStream.apply(this, arguments), this\n    else\n      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)\n  }\n\n  function WriteStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        that.destroy()\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n      }\n    })\n  }\n\n  function createReadStream (path, options) {\n    return new fs.ReadStream(path, options)\n  }\n\n  function createWriteStream (path, options) {\n    return new fs.WriteStream(path, options)\n  }\n\n  var fs$open = fs.open\n  fs.open = open\n  function open (path, flags, mode, cb) {\n    if (typeof mode === 'function')\n      cb = mode, mode = null\n\n    return go$open(path, flags, mode, cb)\n\n    function go$open (path, flags, mode, cb, startTime) {\n      return fs$open(path, flags, mode, function (err, fd) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$open, [path, flags, mode, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  return fs\n}\n\nfunction enqueue (elem) {\n  debug('ENQUEUE', elem[0].name, elem[1])\n  fs[gracefulQueue].push(elem)\n  retry()\n}\n\n// keep track of the timeout between retry() calls\nvar retryTimer\n\n// reset the startTime and lastTime to now\n// this resets the start of the 60 second overall timeout as well as the\n// delay between attempts so that we'll retry these jobs sooner\nfunction resetQueue () {\n  var now = Date.now()\n  for (var i = 0; i < fs[gracefulQueue].length; ++i) {\n    // entries that are only a length of 2 are from an older version, don't\n    // bother modifying those since they'll be retried anyway.\n    if (fs[gracefulQueue][i].length > 2) {\n      fs[gracefulQueue][i][3] = now // startTime\n      fs[gracefulQueue][i][4] = now // lastTime\n    }\n  }\n  // call retry to make sure we're actively processing the queue\n  retry()\n}\n\nfunction retry () {\n  // clear the timer and remove it to help prevent unintended concurrency\n  clearTimeout(retryTimer)\n  retryTimer = undefined\n\n  if (fs[gracefulQueue].length === 0)\n    return\n\n  var elem = fs[gracefulQueue].shift()\n  var fn = elem[0]\n  var args = elem[1]\n  // these items may be unset if they were added by an older graceful-fs\n  var err = elem[2]\n  var startTime = elem[3]\n  var lastTime = elem[4]\n\n  // if we don't have a startTime we have no way of knowing if we've waited\n  // long enough, so go ahead and retry this item now\n  if (startTime === undefined) {\n    debug('RETRY', fn.name, args)\n    fn.apply(null, args)\n  } else if (Date.now() - startTime >= 60000) {\n    // it's been more than 60 seconds total, bail now\n    debug('TIMEOUT', fn.name, args)\n    var cb = args.pop()\n    if (typeof cb === 'function')\n      cb.call(null, err)\n  } else {\n    // the amount of time between the last attempt and right now\n    var sinceAttempt = Date.now() - lastTime\n    // the amount of time between when we first tried, and when we last tried\n    // rounded up to at least 1\n    var sinceStart = Math.max(lastTime - startTime, 1)\n    // backoff. wait longer than the total time we've been retrying, but only\n    // up to a maximum of 100ms\n    var desiredDelay = Math.min(sinceStart * 1.2, 100)\n    // it's been long enough since the last retry, do it again\n    if (sinceAttempt >= desiredDelay) {\n      debug('RETRY', fn.name, args)\n      fn.apply(null, args.concat([startTime]))\n    } else {\n      // if we can't do this job yet, push it to the end of the queue\n      // and let the next iteration check again\n      fs[gracefulQueue].push(elem)\n    }\n  }\n\n  // schedule our next run if one isn't already scheduled\n  if (retryTimer === undefined) {\n    retryTimer = setTimeout(retry, 0)\n  }\n}\n","var Stream = require('stream').Stream\n\nmodule.exports = legacy\n\nfunction legacy (fs) {\n  return {\n    ReadStream: ReadStream,\n    WriteStream: WriteStream\n  }\n\n  function ReadStream (path, options) {\n    if (!(this instanceof ReadStream)) return new ReadStream(path, options);\n\n    Stream.call(this);\n\n    var self = this;\n\n    this.path = path;\n    this.fd = null;\n    this.readable = true;\n    this.paused = false;\n\n    this.flags = 'r';\n    this.mode = 438; /*=0666*/\n    this.bufferSize = 64 * 1024;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.encoding) this.setEncoding(this.encoding);\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.end === undefined) {\n        this.end = Infinity;\n      } else if ('number' !== typeof this.end) {\n        throw TypeError('end must be a Number');\n      }\n\n      if (this.start > this.end) {\n        throw new Error('start must be <= end');\n      }\n\n      this.pos = this.start;\n    }\n\n    if (this.fd !== null) {\n      process.nextTick(function() {\n        self._read();\n      });\n      return;\n    }\n\n    fs.open(this.path, this.flags, this.mode, function (err, fd) {\n      if (err) {\n        self.emit('error', err);\n        self.readable = false;\n        return;\n      }\n\n      self.fd = fd;\n      self.emit('open', fd);\n      self._read();\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (!(this instanceof WriteStream)) return new WriteStream(path, options);\n\n    Stream.call(this);\n\n    this.path = path;\n    this.fd = null;\n    this.writable = true;\n\n    this.flags = 'w';\n    this.encoding = 'binary';\n    this.mode = 438; /*=0666*/\n    this.bytesWritten = 0;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.start < 0) {\n        throw new Error('start must be >= zero');\n      }\n\n      this.pos = this.start;\n    }\n\n    this.busy = false;\n    this._queue = [];\n\n    if (this.fd === null) {\n      this._open = fs.open;\n      this._queue.push([this._open, this.path, this.flags, this.mode, undefined]);\n      this.flush();\n    }\n  }\n}\n","var constants = require('constants')\n\nvar origCwd = process.cwd\nvar cwd = null\n\nvar platform = process.env.GRACEFUL_FS_PLATFORM || process.platform\n\nprocess.cwd = function() {\n  if (!cwd)\n    cwd = origCwd.call(process)\n  return cwd\n}\ntry {\n  process.cwd()\n} catch (er) {}\n\n// This check is needed until node.js 12 is required\nif (typeof process.chdir === 'function') {\n  var chdir = process.chdir\n  process.chdir = function (d) {\n    cwd = null\n    chdir.call(process, d)\n  }\n  if (Object.setPrototypeOf) Object.setPrototypeOf(process.chdir, chdir)\n}\n\nmodule.exports = patch\n\nfunction patch (fs) {\n  // (re-)implement some things that are known busted or missing.\n\n  // lchmod, broken prior to 0.6.2\n  // back-port the fix here.\n  if (constants.hasOwnProperty('O_SYMLINK') &&\n      process.version.match(/^v0\\.6\\.[0-2]|^v0\\.5\\./)) {\n    patchLchmod(fs)\n  }\n\n  // lutimes implementation, or no-op\n  if (!fs.lutimes) {\n    patchLutimes(fs)\n  }\n\n  // https://github.com/isaacs/node-graceful-fs/issues/4\n  // Chown should not fail on einval or eperm if non-root.\n  // It should not fail on enosys ever, as this just indicates\n  // that a fs doesn't support the intended operation.\n\n  fs.chown = chownFix(fs.chown)\n  fs.fchown = chownFix(fs.fchown)\n  fs.lchown = chownFix(fs.lchown)\n\n  fs.chmod = chmodFix(fs.chmod)\n  fs.fchmod = chmodFix(fs.fchmod)\n  fs.lchmod = chmodFix(fs.lchmod)\n\n  fs.chownSync = chownFixSync(fs.chownSync)\n  fs.fchownSync = chownFixSync(fs.fchownSync)\n  fs.lchownSync = chownFixSync(fs.lchownSync)\n\n  fs.chmodSync = chmodFixSync(fs.chmodSync)\n  fs.fchmodSync = chmodFixSync(fs.fchmodSync)\n  fs.lchmodSync = chmodFixSync(fs.lchmodSync)\n\n  fs.stat = statFix(fs.stat)\n  fs.fstat = statFix(fs.fstat)\n  fs.lstat = statFix(fs.lstat)\n\n  fs.statSync = statFixSync(fs.statSync)\n  fs.fstatSync = statFixSync(fs.fstatSync)\n  fs.lstatSync = statFixSync(fs.lstatSync)\n\n  // if lchmod/lchown do not exist, then make them no-ops\n  if (fs.chmod && !fs.lchmod) {\n    fs.lchmod = function (path, mode, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchmodSync = function () {}\n  }\n  if (fs.chown && !fs.lchown) {\n    fs.lchown = function (path, uid, gid, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchownSync = function () {}\n  }\n\n  // on Windows, A/V software can lock the directory, causing this\n  // to fail with an EACCES or EPERM if the directory contains newly\n  // created files.  Try again on failure, for up to 60 seconds.\n\n  // Set the timeout this long because some Windows Anti-Virus, such as Parity\n  // bit9, may lock files for up to a minute, causing npm package install\n  // failures. Also, take care to yield the scheduler. Windows scheduling gives\n  // CPU to a busy looping process, which can cause the program causing the lock\n  // contention to be starved of CPU by node, so the contention doesn't resolve.\n  if (platform === \"win32\") {\n    fs.rename = typeof fs.rename !== 'function' ? fs.rename\n    : (function (fs$rename) {\n      function rename (from, to, cb) {\n        var start = Date.now()\n        var backoff = 0;\n        fs$rename(from, to, function CB (er) {\n          if (er\n              && (er.code === \"EACCES\" || er.code === \"EPERM\" || er.code === \"EBUSY\")\n              && Date.now() - start < 60000) {\n            setTimeout(function() {\n              fs.stat(to, function (stater, st) {\n                if (stater && stater.code === \"ENOENT\")\n                  fs$rename(from, to, CB);\n                else\n                  cb(er)\n              })\n            }, backoff)\n            if (backoff < 100)\n              backoff += 10;\n            return;\n          }\n          if (cb) cb(er)\n        })\n      }\n      if (Object.setPrototypeOf) Object.setPrototypeOf(rename, fs$rename)\n      return rename\n    })(fs.rename)\n  }\n\n  // if read() returns EAGAIN, then just try it again.\n  fs.read = typeof fs.read !== 'function' ? fs.read\n  : (function (fs$read) {\n    function read (fd, buffer, offset, length, position, callback_) {\n      var callback\n      if (callback_ && typeof callback_ === 'function') {\n        var eagCounter = 0\n        callback = function (er, _, __) {\n          if (er && er.code === 'EAGAIN' && eagCounter < 10) {\n            eagCounter ++\n            return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n          }\n          callback_.apply(this, arguments)\n        }\n      }\n      return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n    }\n\n    // This ensures `util.promisify` works as it does for native `fs.read`.\n    if (Object.setPrototypeOf) Object.setPrototypeOf(read, fs$read)\n    return read\n  })(fs.read)\n\n  fs.readSync = typeof fs.readSync !== 'function' ? fs.readSync\n  : (function (fs$readSync) { return function (fd, buffer, offset, length, position) {\n    var eagCounter = 0\n    while (true) {\n      try {\n        return fs$readSync.call(fs, fd, buffer, offset, length, position)\n      } catch (er) {\n        if (er.code === 'EAGAIN' && eagCounter < 10) {\n          eagCounter ++\n          continue\n        }\n        throw er\n      }\n    }\n  }})(fs.readSync)\n\n  function patchLchmod (fs) {\n    fs.lchmod = function (path, mode, callback) {\n      fs.open( path\n             , constants.O_WRONLY | constants.O_SYMLINK\n             , mode\n             , function (err, fd) {\n        if (err) {\n          if (callback) callback(err)\n          return\n        }\n        // prefer to return the chmod error, if one occurs,\n        // but still try to close, and report closing errors if they occur.\n        fs.fchmod(fd, mode, function (err) {\n          fs.close(fd, function(err2) {\n            if (callback) callback(err || err2)\n          })\n        })\n      })\n    }\n\n    fs.lchmodSync = function (path, mode) {\n      var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)\n\n      // prefer to return the chmod error, if one occurs,\n      // but still try to close, and report closing errors if they occur.\n      var threw = true\n      var ret\n      try {\n        ret = fs.fchmodSync(fd, mode)\n        threw = false\n      } finally {\n        if (threw) {\n          try {\n            fs.closeSync(fd)\n          } catch (er) {}\n        } else {\n          fs.closeSync(fd)\n        }\n      }\n      return ret\n    }\n  }\n\n  function patchLutimes (fs) {\n    if (constants.hasOwnProperty(\"O_SYMLINK\") && fs.futimes) {\n      fs.lutimes = function (path, at, mt, cb) {\n        fs.open(path, constants.O_SYMLINK, function (er, fd) {\n          if (er) {\n            if (cb) cb(er)\n            return\n          }\n          fs.futimes(fd, at, mt, function (er) {\n            fs.close(fd, function (er2) {\n              if (cb) cb(er || er2)\n            })\n          })\n        })\n      }\n\n      fs.lutimesSync = function (path, at, mt) {\n        var fd = fs.openSync(path, constants.O_SYMLINK)\n        var ret\n        var threw = true\n        try {\n          ret = fs.futimesSync(fd, at, mt)\n          threw = false\n        } finally {\n          if (threw) {\n            try {\n              fs.closeSync(fd)\n            } catch (er) {}\n          } else {\n            fs.closeSync(fd)\n          }\n        }\n        return ret\n      }\n\n    } else if (fs.futimes) {\n      fs.lutimes = function (_a, _b, _c, cb) { if (cb) process.nextTick(cb) }\n      fs.lutimesSync = function () {}\n    }\n  }\n\n  function chmodFix (orig) {\n    if (!orig) return orig\n    return function (target, mode, cb) {\n      return orig.call(fs, target, mode, function (er) {\n        if (chownErOk(er)) er = null\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function chmodFixSync (orig) {\n    if (!orig) return orig\n    return function (target, mode) {\n      try {\n        return orig.call(fs, target, mode)\n      } catch (er) {\n        if (!chownErOk(er)) throw er\n      }\n    }\n  }\n\n\n  function chownFix (orig) {\n    if (!orig) return orig\n    return function (target, uid, gid, cb) {\n      return orig.call(fs, target, uid, gid, function (er) {\n        if (chownErOk(er)) er = null\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function chownFixSync (orig) {\n    if (!orig) return orig\n    return function (target, uid, gid) {\n      try {\n        return orig.call(fs, target, uid, gid)\n      } catch (er) {\n        if (!chownErOk(er)) throw er\n      }\n    }\n  }\n\n  function statFix (orig) {\n    if (!orig) return orig\n    // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n    return function (target, options, cb) {\n      if (typeof options === 'function') {\n        cb = options\n        options = null\n      }\n      function callback (er, stats) {\n        if (stats) {\n          if (stats.uid < 0) stats.uid += 0x100000000\n          if (stats.gid < 0) stats.gid += 0x100000000\n        }\n        if (cb) cb.apply(this, arguments)\n      }\n      return options ? orig.call(fs, target, options, callback)\n        : orig.call(fs, target, callback)\n    }\n  }\n\n  function statFixSync (orig) {\n    if (!orig) return orig\n    // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n    return function (target, options) {\n      var stats = options ? orig.call(fs, target, options)\n        : orig.call(fs, target)\n      if (stats) {\n        if (stats.uid < 0) stats.uid += 0x100000000\n        if (stats.gid < 0) stats.gid += 0x100000000\n      }\n      return stats;\n    }\n  }\n\n  // ENOSYS means that the fs doesn't support the op. Just ignore\n  // that, because it doesn't matter.\n  //\n  // if there's no getuid, or if getuid() is something other\n  // than 0, and the error is EINVAL or EPERM, then just ignore\n  // it.\n  //\n  // This specific case is a silent failure in cp, install, tar,\n  // and most other unix tools that manage permissions.\n  //\n  // When running as root, or if other types of errors are\n  // encountered, then it's strict.\n  function chownErOk (er) {\n    if (!er)\n      return true\n\n    if (er.code === \"ENOSYS\")\n      return true\n\n    var nonroot = !process.getuid || process.getuid() !== 0\n    if (nonroot) {\n      if (er.code === \"EINVAL\" || er.code === \"EPERM\")\n        return true\n    }\n\n    return false\n  }\n}\n","let _fs\ntry {\n  _fs = require('graceful-fs')\n} catch (_) {\n  _fs = require('fs')\n}\nconst universalify = require('universalify')\nconst { stringify, stripBom } = require('./utils')\n\nasync function _readFile (file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  let data = await universalify.fromCallback(fs.readFile)(file, options)\n\n  data = stripBom(data)\n\n  let obj\n  try {\n    obj = JSON.parse(data, options ? options.reviver : null)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`\n      throw err\n    } else {\n      return null\n    }\n  }\n\n  return obj\n}\n\nconst readFile = universalify.fromPromise(_readFile)\n\nfunction readFileSync (file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  try {\n    let content = fs.readFileSync(file, options)\n    content = stripBom(content)\n    return JSON.parse(content, options.reviver)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`\n      throw err\n    } else {\n      return null\n    }\n  }\n}\n\nasync function _writeFile (file, obj, options = {}) {\n  const fs = options.fs || _fs\n\n  const str = stringify(obj, options)\n\n  await universalify.fromCallback(fs.writeFile)(file, str, options)\n}\n\nconst writeFile = universalify.fromPromise(_writeFile)\n\nfunction writeFileSync (file, obj, options = {}) {\n  const fs = options.fs || _fs\n\n  const str = stringify(obj, options)\n  // not sure if fs.writeFileSync returns anything, but just in case\n  return fs.writeFileSync(file, str, options)\n}\n\nconst jsonfile = {\n  readFile,\n  readFileSync,\n  writeFile,\n  writeFileSync\n}\n\nmodule.exports = jsonfile\n","function stringify (obj, { EOL = '\\n', finalEOL = true, replacer = null, spaces } = {}) {\n  const EOF = finalEOL ? EOL : ''\n  const str = JSON.stringify(obj, replacer, spaces)\n\n  return str.replace(/\\n/g, EOL) + EOF\n}\n\nfunction stripBom (content) {\n  // we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified\n  if (Buffer.isBuffer(content)) content = content.toString('utf8')\n  return content.replace(/^\\uFEFF/, '')\n}\n\nmodule.exports = { stringify, stripBom }\n","import * as fs from 'fs-extra';\nimport * as path from 'path';\nimport * as glob from 'glob';\nimport * as ofs from \"fs\";\n\nclass DependencyGraph {\n  private graph: Map<string, Set<string>> = new Map();\n\n  constructor(\n    private rootPath: string,\n    private ignoreArr: string[],\n  ) {}\n\n  private findNearestNodeModules(filePath: string, rootDir: string): string {\n    while (true) {\n      const nodeModulesPath = path.join(filePath, 'node_modules');\n      if (ofs.existsSync(nodeModulesPath)) {\n        return nodeModulesPath;\n      }\n      if (filePath === rootDir) {\n        return '';\n      }\n      filePath = path.dirname(filePath);\n    }\n  }\n\n  private findTsconfig(rootDir: string): string {\n    try {\n      const tsconfig = glob.sync('**/tsconfig.json', {\n        cwd: rootDir,\n        ignore: this.ignoreArr,\n      });\n      if (tsconfig?.length === 0) {\n        return '';\n      }\n      return path.join(rootDir, tsconfig[0]);\n    } catch (err) {\n      console.log(`findTsconfig err: ${err}`);\n      return '';\n    }\n  }\n\n  private isLocalFile(filePath: string): boolean {\n    try {\n      return !(filePath.startsWith('http') || filePath.startsWith('data:image'));\n    } catch (err) {\n      return false;\n    }\n  }\n\n  async build() {\n    try {\n      console.log(this.rootPath, 'rootPath');\n      const { jsonrepair } = await import('jsonrepair');\n      const tsconfigPath = this.findTsconfig(this.rootPath);\n      let tsBaseUrl = '';\n      let alias: any = null;\n      if (tsconfigPath) {\n        const tsconfigStr: any = fs.readFileSync(tsconfigPath, {\n          encoding: 'utf-8',\n        });\n        const tsconfigObj = JSON.parse(jsonrepair(tsconfigStr));\n        tsBaseUrl = tsconfigObj?.compilerOptions?.baseUrl || '';\n        const paths = tsconfigObj?.compilerOptions?.paths || [];\n        console.log('tsconfigObj', tsconfigObj, typeof tsconfigObj);\n        alias = paths ?Object.keys(paths).reduce((acc: any, i: any) => {\n          const key = i.slice(-1) === '*' ? i.slice(0, -1) : i;\n          const value = paths[i][0].slice(-1) === '*' ? paths[i][0].slice(0, -1) : paths[i];\n          acc[key] = value;\n          return acc;\n        }, {})\n        : null;\n        const excludeFolder = tsconfigObj?.exclude?.map((i: any) => `${i}${i.slice(-1) === '/' ? '' : '/'}**`);\n        this.ignoreArr = [\n          ...this.ignoreArr,\n          ...tsconfigObj?.exclude,\n          ...excludeFolder,\n        ];\n      }\n      console.log('tsBaseUrl', tsBaseUrl, 'alias', alias);\n      const files = glob.sync('**/*.{js,ts,jsx,tsx,css,scss,sass,less,styl}', {\n        cwd: this.rootPath,\n        ignore: this.ignoreArr,\n      });\n\n      for (const file of files) {\n        const filePath = path.join(this.rootPath, file);\n        const nodeModulesPath = this.findNearestNodeModules(filePath, this.rootPath);\n        const content = await fs.readFile(filePath, 'utf-8');\n        const dependencies = this.extractDependencies(content);\n  \n        dependencies.forEach((dependency) => {\n          let handledDependency = dependency.path;\n          if (dependency.type === 'html,css') {\n            handledDependency = path.join(path.dirname(filePath), dependency.path);\n          } else if (alias && Object.keys(alias).some((i: any) => dependency.path.startsWith(i))) {\n            const aliasKey = Object.keys(alias).find((i: any) => dependency.path.startsWith(i));\n            let aliasPath = '';\n            if (aliasKey !== undefined) {\n              aliasPath = alias[aliasKey];\n            }\n            handledDependency = path.join(this.rootPath, tsBaseUrl, aliasPath, dependency.path.replace(aliasKey || '', ''));\n          } else if (!(dependency.path.startsWith('.') || dependency.path.startsWith('..'))) {\n            handledDependency = `${nodeModulesPath ? nodeModulesPath : '/node_modules'}/${dependency.path}`;\n          } else {\n            handledDependency = path.join(path.dirname(filePath), dependency.path);\n          }\n          this.addEdge(filePath, handledDependency);\n        });\n      }\n      // this.graph.forEach((value: any, key: string) => {\n      //   console.log(`key: ${key}, value: ${JSON.stringify(Array.from(value))}`)\n      // });\n    } catch (err: any) {\n      console.log('dependency graph build error', err);\n    }\n  }\n\n  private extractDependencies(content: string): { path: string; type: string; }[] {\n    try {\n      const dependencyPattern = /(?:import|require)\\s+(?:.*from\\s+)?(['](.+?)[']|[\"](.+?)[\"])/g;\n      const htmlcssPattern = /(?:src=(?:(?:['](.+?)['])|(?:[\"](.+?)[\"])))|(?:url\\(['\"]?(.+?)['\"]?\\))/g;\n      const dependencies: { path: string; type: string; }[] = [];\n      let matchDep: RegExpExecArray | null;\n      let matchHtml: RegExpExecArray | null;\n\n      while ((matchDep = dependencyPattern.exec(content)) !== null) {\n        dependencies.push({\n          path: matchDep[2] || matchDep[3],\n          type: 'import,require',\n        });\n      }\n      while (\n        (matchHtml = htmlcssPattern.exec(content)) !== null\n          && (\n            this.isLocalFile(matchHtml[1])\n            || this.isLocalFile(matchHtml[2])\n            || this.isLocalFile(matchHtml[3])\n          )\n    ) {\n        dependencies.push({\n          path: matchHtml[1] || matchHtml[2] || matchHtml[3],\n          type: 'html,css',\n        });\n      }\n      return dependencies;\n    } catch (err: any) {\n      \n      console.log('dependency graph extractDependencies error', err);\n      return [];\n    }\n  }\n\n  private addEdge(from: string, to: string) {\n    if (!this.graph.has(from)) {\n      this.graph.set(from, new Set());\n    }\n    this.graph.get(from)!.add(to);\n  }\n\n  getDependencies(file: string): Set<string> | undefined {\n    return this.graph.get(file);\n  }\n  getImageMap() {\n    const obj: any = {};\n    this.graph.forEach((value: any, key: string) => {\n      const arr = Array.from(value);\n      arr.forEach((i: any) => {\n        if (/^(.*[\\/\\\\])?(.*\\.(png|jpg|jpeg|gif|bmp|svg))$/i.test(i)) {\n          obj[i]\n            ? obj[i].push(key)\n            : obj[i] = [key];\n        }\n      });\n    });\n    return obj;\n  }\n}\n\nexport default DependencyGraph;","import * as vscode from 'vscode';\nimport * as glob from 'glob';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport DependencyGraph from './dependency-graph';\n\nlet language: string = 'en';\n\nexport function activate(context: vscode.ExtensionContext) {\n  const config = vscode.workspace.getConfiguration('scan2findimgs');\n  language = config.get('language') || 'en';\n\n  let disposable = vscode.commands.registerCommand('extension.scan2findimgs', async () => {\n    const resourceRoot = vscode.Uri.joinPath(context.extensionUri, 'dist');\n    const config = vscode.workspace.getConfiguration('scan2findimgs');\n    const ignoreArr: string[] = config.get('ignore') || ['node_modules/**'];\n    const formatStr = config.get('format') || 'png,jpg,jpeg,gif,bmp,svg';\n    const rootPath = vscode.workspace.workspaceFolders;\n    if (!rootPath) {\n      vscode.window.showErrorMessage(language = 'zh' ? '没有打开文件夹' : 'No folder opened.');\n      return;\n    }\n\n    const firstWorkspaceFolderPath = rootPath[0].uri.toString().replace(/^file:\\/\\//, '');\n\n    const graph = new DependencyGraph(firstWorkspaceFolderPath, ignoreArr);\n    await graph.build();\n    const imgObj = graph.getImageMap();\n    const files = glob.sync(`**/*.{${formatStr}}`, {\n      cwd: firstWorkspaceFolderPath,\n      ignore: ignoreArr,\n    });\n\n    const sizeFiles: any = await Promise.all(files.map(file => {\n      return new Promise(async (resolve, reject) => {\n        const i = path.join(firstWorkspaceFolderPath, file);\n        const size = await getFilesize(i);\n\n        resolve({\n          relativeFile: file,\n          absoluteFile: i,\n          ...size,\n        });\n      });\n    }));\n\n    const imageGraph = sizeFiles.map((file: any) => {\n      return {\n        imageName: file.absoluteFile,\n        originalImageName: file.relativeFile,\n        dep: imgObj[file.absoluteFile],\n        size: file.size,\n        originalSize: file.originalSize,\n      };\n    });\n\n    showResults(context, imageGraph, resourceRoot, rootPath[0].uri.fsPath);\n  });\n\n  context.subscriptions.push(disposable);\n}\n\nasync function getFilesize(source: string) {\n  try {\n    const fsStat = fs.statSync(source);\n    const { filesize } = await import('filesize');\n    return {\n      size: filesize(fsStat.size, { standard: 'jedec' }),\n      originalSize: fsStat.size,\n    };\n  } catch (err) {\n    console.error(`Failed to get filesize: ${source}`, err);\n    vscode.window.showErrorMessage(language === 'zh' ? `获取图片大小失败: ${source}` : `Failed to get filesize: ${source}`);\n    return {\n      size: '',\n      originalSize: '',\n    };\n  }\n}\n\nfunction showResults(context: any, images: any[], resourceRoot: any, firstWorkspaceFolderPath: any) {\n  const panel = vscode.window.createWebviewPanel(\n    'scan2findimgs',\n    'scan2findimgs',\n    vscode.ViewColumn.One,\n    {\n      enableScripts: true,\n    }\n  );\n\n  const handledImages = images.map((i) => {\n    const imagePath = path.join(firstWorkspaceFolderPath, i.originalImageName);\n    const imageUri = vscode.Uri.file(imagePath);\n    const webviewImageUri = panel.webview.asWebviewUri(imageUri).toString();\n    return {\n      ...i,\n      webviewImageUri,\n    }\n  });\n  console.log(handledImages, 'handledImages看看');\n  const themeColors = vscode.workspace.getConfiguration('workbench.colorCustomizations');\n  const backgroundColor = themeColors.get('editor.background');\n  const textColor = themeColors.get('editor.foreground');\n\n  const webviewResourceRoot = panel.webview.asWebviewUri(resourceRoot);\n  let html = fs.readFileSync(path.resolve(__dirname, './index.html'), {\n    encoding: 'utf-8',\n  });\n  html = html.replace(/\\/VSCODE_WEBVIEW_BASE/g, webviewResourceRoot.toString());\n\n  panel.webview.html = html;\n\n  panel.webview.onDidReceiveMessage(\n    message => {\n      console.log(message, 'message');\n      try {\n        switch (message.command) {\n          case 'openFile':\n            openFile(JSON.parse(message.data));\n            break;\n          case 'init':\n            panel.webview.postMessage({\n              command: 'init',\n              data: {\n                backgroundColor,\n                textColor,\n                images: handledImages,\n                firstWorkspaceFolderPath,\n              }\n            });\n        }\n      } catch(err) {\n        console.log(err, 'onDidReceiveMessage err');\n      }\n      \n    },\n    undefined,\n    context.subscriptions\n  );\n}\n\nasync function openFile(filePath: string) {\n  try {\n      const fileUri = vscode.Uri.file(filePath);\n      await vscode.commands.executeCommand('vscode.open', fileUri);\n  } catch (error: any) {\n      vscode.window.showErrorMessage(`Error opening file: ${error.message}`);\n  }\n}\n\nexport function deactivate() { }","'use strict'\n\nexports.fromCallback = function (fn) {\n  return Object.defineProperty(function (...args) {\n    if (typeof args[args.length - 1] === 'function') fn.apply(this, args)\n    else {\n      return new Promise((resolve, reject) => {\n        args.push((err, res) => (err != null) ? reject(err) : resolve(res))\n        fn.apply(this, args)\n      })\n    }\n  }, 'name', { value: fn.name })\n}\n\nexports.fromPromise = function (fn) {\n  return Object.defineProperty(function (...args) {\n    const cb = args[args.length - 1]\n    if (typeof cb !== 'function') return fn.apply(this, args)\n    else {\n      args.pop()\n      fn.apply(this, args).then(r => cb(null, r), cb)\n    }\n  }, 'name', { value: fn.name })\n}\n","module.exports = require(\"vscode\");","module.exports = require(\"assert\");","module.exports = require(\"constants\");","module.exports = require(\"fs\");","module.exports = require(\"node:events\");","module.exports = require(\"node:fs\");","module.exports = require(\"node:fs/promises\");","module.exports = require(\"node:path\");","module.exports = require(\"node:stream\");","module.exports = require(\"node:string_decoder\");","module.exports = require(\"node:url\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"util\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Glob = void 0;\nconst minimatch_1 = require(\"minimatch\");\nconst node_url_1 = require(\"node:url\");\nconst path_scurry_1 = require(\"path-scurry\");\nconst pattern_js_1 = require(\"./pattern.js\");\nconst walker_js_1 = require(\"./walker.js\");\n// if no process global, just call it linux.\n// so we default to case-sensitive, / separators\nconst defaultPlatform = (typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string') ?\n    process.platform\n    : 'linux';\n/**\n * An object that can perform glob pattern traversals.\n */\nclass Glob {\n    absolute;\n    cwd;\n    root;\n    dot;\n    dotRelative;\n    follow;\n    ignore;\n    magicalBraces;\n    mark;\n    matchBase;\n    maxDepth;\n    nobrace;\n    nocase;\n    nodir;\n    noext;\n    noglobstar;\n    pattern;\n    platform;\n    realpath;\n    scurry;\n    stat;\n    signal;\n    windowsPathsNoEscape;\n    withFileTypes;\n    includeChildMatches;\n    /**\n     * The options provided to the constructor.\n     */\n    opts;\n    /**\n     * An array of parsed immutable {@link Pattern} objects.\n     */\n    patterns;\n    /**\n     * All options are stored as properties on the `Glob` object.\n     *\n     * See {@link GlobOptions} for full options descriptions.\n     *\n     * Note that a previous `Glob` object can be passed as the\n     * `GlobOptions` to another `Glob` instantiation to re-use settings\n     * and caches with a new pattern.\n     *\n     * Traversal functions can be called multiple times to run the walk\n     * again.\n     */\n    constructor(pattern, opts) {\n        /* c8 ignore start */\n        if (!opts)\n            throw new TypeError('glob options required');\n        /* c8 ignore stop */\n        this.withFileTypes = !!opts.withFileTypes;\n        this.signal = opts.signal;\n        this.follow = !!opts.follow;\n        this.dot = !!opts.dot;\n        this.dotRelative = !!opts.dotRelative;\n        this.nodir = !!opts.nodir;\n        this.mark = !!opts.mark;\n        if (!opts.cwd) {\n            this.cwd = '';\n        }\n        else if (opts.cwd instanceof URL || opts.cwd.startsWith('file://')) {\n            opts.cwd = (0, node_url_1.fileURLToPath)(opts.cwd);\n        }\n        this.cwd = opts.cwd || '';\n        this.root = opts.root;\n        this.magicalBraces = !!opts.magicalBraces;\n        this.nobrace = !!opts.nobrace;\n        this.noext = !!opts.noext;\n        this.realpath = !!opts.realpath;\n        this.absolute = opts.absolute;\n        this.includeChildMatches = opts.includeChildMatches !== false;\n        this.noglobstar = !!opts.noglobstar;\n        this.matchBase = !!opts.matchBase;\n        this.maxDepth =\n            typeof opts.maxDepth === 'number' ? opts.maxDepth : Infinity;\n        this.stat = !!opts.stat;\n        this.ignore = opts.ignore;\n        if (this.withFileTypes && this.absolute !== undefined) {\n            throw new Error('cannot set absolute and withFileTypes:true');\n        }\n        if (typeof pattern === 'string') {\n            pattern = [pattern];\n        }\n        this.windowsPathsNoEscape =\n            !!opts.windowsPathsNoEscape ||\n                opts.allowWindowsEscape ===\n                    false;\n        if (this.windowsPathsNoEscape) {\n            pattern = pattern.map(p => p.replace(/\\\\/g, '/'));\n        }\n        if (this.matchBase) {\n            if (opts.noglobstar) {\n                throw new TypeError('base matching requires globstar');\n            }\n            pattern = pattern.map(p => (p.includes('/') ? p : `./**/${p}`));\n        }\n        this.pattern = pattern;\n        this.platform = opts.platform || defaultPlatform;\n        this.opts = { ...opts, platform: this.platform };\n        if (opts.scurry) {\n            this.scurry = opts.scurry;\n            if (opts.nocase !== undefined &&\n                opts.nocase !== opts.scurry.nocase) {\n                throw new Error('nocase option contradicts provided scurry option');\n            }\n        }\n        else {\n            const Scurry = opts.platform === 'win32' ? path_scurry_1.PathScurryWin32\n                : opts.platform === 'darwin' ? path_scurry_1.PathScurryDarwin\n                    : opts.platform ? path_scurry_1.PathScurryPosix\n                        : path_scurry_1.PathScurry;\n            this.scurry = new Scurry(this.cwd, {\n                nocase: opts.nocase,\n                fs: opts.fs,\n            });\n        }\n        this.nocase = this.scurry.nocase;\n        // If you do nocase:true on a case-sensitive file system, then\n        // we need to use regexps instead of strings for non-magic\n        // path portions, because statting `aBc` won't return results\n        // for the file `AbC` for example.\n        const nocaseMagicOnly = this.platform === 'darwin' || this.platform === 'win32';\n        const mmo = {\n            // default nocase based on platform\n            ...opts,\n            dot: this.dot,\n            matchBase: this.matchBase,\n            nobrace: this.nobrace,\n            nocase: this.nocase,\n            nocaseMagicOnly,\n            nocomment: true,\n            noext: this.noext,\n            nonegate: true,\n            optimizationLevel: 2,\n            platform: this.platform,\n            windowsPathsNoEscape: this.windowsPathsNoEscape,\n            debug: !!this.opts.debug,\n        };\n        const mms = this.pattern.map(p => new minimatch_1.Minimatch(p, mmo));\n        const [matchSet, globParts] = mms.reduce((set, m) => {\n            set[0].push(...m.set);\n            set[1].push(...m.globParts);\n            return set;\n        }, [[], []]);\n        this.patterns = matchSet.map((set, i) => {\n            const g = globParts[i];\n            /* c8 ignore start */\n            if (!g)\n                throw new Error('invalid pattern object');\n            /* c8 ignore stop */\n            return new pattern_js_1.Pattern(set, g, 0, this.platform);\n        });\n    }\n    async walk() {\n        // Walkers always return array of Path objects, so we just have to\n        // coerce them into the right shape.  It will have already called\n        // realpath() if the option was set to do so, so we know that's cached.\n        // start out knowing the cwd, at least\n        return [\n            ...(await new walker_js_1.GlobWalker(this.patterns, this.scurry.cwd, {\n                ...this.opts,\n                maxDepth: this.maxDepth !== Infinity ?\n                    this.maxDepth + this.scurry.cwd.depth()\n                    : Infinity,\n                platform: this.platform,\n                nocase: this.nocase,\n                includeChildMatches: this.includeChildMatches,\n            }).walk()),\n        ];\n    }\n    walkSync() {\n        return [\n            ...new walker_js_1.GlobWalker(this.patterns, this.scurry.cwd, {\n                ...this.opts,\n                maxDepth: this.maxDepth !== Infinity ?\n                    this.maxDepth + this.scurry.cwd.depth()\n                    : Infinity,\n                platform: this.platform,\n                nocase: this.nocase,\n                includeChildMatches: this.includeChildMatches,\n            }).walkSync(),\n        ];\n    }\n    stream() {\n        return new walker_js_1.GlobStream(this.patterns, this.scurry.cwd, {\n            ...this.opts,\n            maxDepth: this.maxDepth !== Infinity ?\n                this.maxDepth + this.scurry.cwd.depth()\n                : Infinity,\n            platform: this.platform,\n            nocase: this.nocase,\n            includeChildMatches: this.includeChildMatches,\n        }).stream();\n    }\n    streamSync() {\n        return new walker_js_1.GlobStream(this.patterns, this.scurry.cwd, {\n            ...this.opts,\n            maxDepth: this.maxDepth !== Infinity ?\n                this.maxDepth + this.scurry.cwd.depth()\n                : Infinity,\n            platform: this.platform,\n            nocase: this.nocase,\n            includeChildMatches: this.includeChildMatches,\n        }).streamSync();\n    }\n    /**\n     * Default sync iteration function. Returns a Generator that\n     * iterates over the results.\n     */\n    iterateSync() {\n        return this.streamSync()[Symbol.iterator]();\n    }\n    [Symbol.iterator]() {\n        return this.iterateSync();\n    }\n    /**\n     * Default async iteration function. Returns an AsyncGenerator that\n     * iterates over the results.\n     */\n    iterate() {\n        return this.stream()[Symbol.asyncIterator]();\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterate();\n    }\n}\nexports.Glob = Glob;\n//# sourceMappingURL=glob.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasMagic = void 0;\nconst minimatch_1 = require(\"minimatch\");\n/**\n * Return true if the patterns provided contain any magic glob characters,\n * given the options provided.\n *\n * Brace expansion is not considered \"magic\" unless the `magicalBraces` option\n * is set, as brace expansion just turns one string into an array of strings.\n * So a pattern like `'x{a,b}y'` would return `false`, because `'xay'` and\n * `'xby'` both do not contain any magic glob characters, and it's treated the\n * same as if you had called it on `['xay', 'xby']`. When `magicalBraces:true`\n * is in the options, brace expansion _is_ treated as a pattern having magic.\n */\nconst hasMagic = (pattern, options = {}) => {\n    if (!Array.isArray(pattern)) {\n        pattern = [pattern];\n    }\n    for (const p of pattern) {\n        if (new minimatch_1.Minimatch(p, options).hasMagic())\n            return true;\n    }\n    return false;\n};\nexports.hasMagic = hasMagic;\n//# sourceMappingURL=has-magic.js.map","\"use strict\";\n// give it a pattern, and it'll be able to tell you if\n// a given path should be ignored.\n// Ignoring a path ignores its children if the pattern ends in /**\n// Ignores are always parsed in dot:true mode\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Ignore = void 0;\nconst minimatch_1 = require(\"minimatch\");\nconst pattern_js_1 = require(\"./pattern.js\");\nconst defaultPlatform = (typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string') ?\n    process.platform\n    : 'linux';\n/**\n * Class used to process ignored patterns\n */\nclass Ignore {\n    relative;\n    relativeChildren;\n    absolute;\n    absoluteChildren;\n    platform;\n    mmopts;\n    constructor(ignored, { nobrace, nocase, noext, noglobstar, platform = defaultPlatform, }) {\n        this.relative = [];\n        this.absolute = [];\n        this.relativeChildren = [];\n        this.absoluteChildren = [];\n        this.platform = platform;\n        this.mmopts = {\n            dot: true,\n            nobrace,\n            nocase,\n            noext,\n            noglobstar,\n            optimizationLevel: 2,\n            platform,\n            nocomment: true,\n            nonegate: true,\n        };\n        for (const ign of ignored)\n            this.add(ign);\n    }\n    add(ign) {\n        // this is a little weird, but it gives us a clean set of optimized\n        // minimatch matchers, without getting tripped up if one of them\n        // ends in /** inside a brace section, and it's only inefficient at\n        // the start of the walk, not along it.\n        // It'd be nice if the Pattern class just had a .test() method, but\n        // handling globstars is a bit of a pita, and that code already lives\n        // in minimatch anyway.\n        // Another way would be if maybe Minimatch could take its set/globParts\n        // as an option, and then we could at least just use Pattern to test\n        // for absolute-ness.\n        // Yet another way, Minimatch could take an array of glob strings, and\n        // a cwd option, and do the right thing.\n        const mm = new minimatch_1.Minimatch(ign, this.mmopts);\n        for (let i = 0; i < mm.set.length; i++) {\n            const parsed = mm.set[i];\n            const globParts = mm.globParts[i];\n            /* c8 ignore start */\n            if (!parsed || !globParts) {\n                throw new Error('invalid pattern object');\n            }\n            // strip off leading ./ portions\n            // https://github.com/isaacs/node-glob/issues/570\n            while (parsed[0] === '.' && globParts[0] === '.') {\n                parsed.shift();\n                globParts.shift();\n            }\n            /* c8 ignore stop */\n            const p = new pattern_js_1.Pattern(parsed, globParts, 0, this.platform);\n            const m = new minimatch_1.Minimatch(p.globString(), this.mmopts);\n            const children = globParts[globParts.length - 1] === '**';\n            const absolute = p.isAbsolute();\n            if (absolute)\n                this.absolute.push(m);\n            else\n                this.relative.push(m);\n            if (children) {\n                if (absolute)\n                    this.absoluteChildren.push(m);\n                else\n                    this.relativeChildren.push(m);\n            }\n        }\n    }\n    ignored(p) {\n        const fullpath = p.fullpath();\n        const fullpaths = `${fullpath}/`;\n        const relative = p.relative() || '.';\n        const relatives = `${relative}/`;\n        for (const m of this.relative) {\n            if (m.match(relative) || m.match(relatives))\n                return true;\n        }\n        for (const m of this.absolute) {\n            if (m.match(fullpath) || m.match(fullpaths))\n                return true;\n        }\n        return false;\n    }\n    childrenIgnored(p) {\n        const fullpath = p.fullpath() + '/';\n        const relative = (p.relative() || '.') + '/';\n        for (const m of this.relativeChildren) {\n            if (m.match(relative))\n                return true;\n        }\n        for (const m of this.absoluteChildren) {\n            if (m.match(fullpath))\n                return true;\n        }\n        return false;\n    }\n}\nexports.Ignore = Ignore;\n//# sourceMappingURL=ignore.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.glob = exports.sync = exports.iterate = exports.iterateSync = exports.stream = exports.streamSync = exports.Ignore = exports.hasMagic = exports.Glob = exports.unescape = exports.escape = void 0;\nexports.globStreamSync = globStreamSync;\nexports.globStream = globStream;\nexports.globSync = globSync;\nexports.globIterateSync = globIterateSync;\nexports.globIterate = globIterate;\nconst minimatch_1 = require(\"minimatch\");\nconst glob_js_1 = require(\"./glob.js\");\nconst has_magic_js_1 = require(\"./has-magic.js\");\nvar minimatch_2 = require(\"minimatch\");\nObject.defineProperty(exports, \"escape\", { enumerable: true, get: function () { return minimatch_2.escape; } });\nObject.defineProperty(exports, \"unescape\", { enumerable: true, get: function () { return minimatch_2.unescape; } });\nvar glob_js_2 = require(\"./glob.js\");\nObject.defineProperty(exports, \"Glob\", { enumerable: true, get: function () { return glob_js_2.Glob; } });\nvar has_magic_js_2 = require(\"./has-magic.js\");\nObject.defineProperty(exports, \"hasMagic\", { enumerable: true, get: function () { return has_magic_js_2.hasMagic; } });\nvar ignore_js_1 = require(\"./ignore.js\");\nObject.defineProperty(exports, \"Ignore\", { enumerable: true, get: function () { return ignore_js_1.Ignore; } });\nfunction globStreamSync(pattern, options = {}) {\n    return new glob_js_1.Glob(pattern, options).streamSync();\n}\nfunction globStream(pattern, options = {}) {\n    return new glob_js_1.Glob(pattern, options).stream();\n}\nfunction globSync(pattern, options = {}) {\n    return new glob_js_1.Glob(pattern, options).walkSync();\n}\nasync function glob_(pattern, options = {}) {\n    return new glob_js_1.Glob(pattern, options).walk();\n}\nfunction globIterateSync(pattern, options = {}) {\n    return new glob_js_1.Glob(pattern, options).iterateSync();\n}\nfunction globIterate(pattern, options = {}) {\n    return new glob_js_1.Glob(pattern, options).iterate();\n}\n// aliases: glob.sync.stream() glob.stream.sync() glob.sync() etc\nexports.streamSync = globStreamSync;\nexports.stream = Object.assign(globStream, { sync: globStreamSync });\nexports.iterateSync = globIterateSync;\nexports.iterate = Object.assign(globIterate, {\n    sync: globIterateSync,\n});\nexports.sync = Object.assign(globSync, {\n    stream: globStreamSync,\n    iterate: globIterateSync,\n});\nexports.glob = Object.assign(glob_, {\n    glob: glob_,\n    globSync,\n    sync: exports.sync,\n    globStream,\n    stream: exports.stream,\n    globStreamSync,\n    streamSync: exports.streamSync,\n    globIterate,\n    iterate: exports.iterate,\n    globIterateSync,\n    iterateSync: exports.iterateSync,\n    Glob: glob_js_1.Glob,\n    hasMagic: has_magic_js_1.hasMagic,\n    escape: minimatch_1.escape,\n    unescape: minimatch_1.unescape,\n});\nexports.glob.glob = exports.glob;\n//# sourceMappingURL=index.js.map","\"use strict\";\n// this is just a very light wrapper around 2 arrays with an offset index\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Pattern = void 0;\nconst minimatch_1 = require(\"minimatch\");\nconst isPatternList = (pl) => pl.length >= 1;\nconst isGlobList = (gl) => gl.length >= 1;\n/**\n * An immutable-ish view on an array of glob parts and their parsed\n * results\n */\nclass Pattern {\n    #patternList;\n    #globList;\n    #index;\n    length;\n    #platform;\n    #rest;\n    #globString;\n    #isDrive;\n    #isUNC;\n    #isAbsolute;\n    #followGlobstar = true;\n    constructor(patternList, globList, index, platform) {\n        if (!isPatternList(patternList)) {\n            throw new TypeError('empty pattern list');\n        }\n        if (!isGlobList(globList)) {\n            throw new TypeError('empty glob list');\n        }\n        if (globList.length !== patternList.length) {\n            throw new TypeError('mismatched pattern list and glob list lengths');\n        }\n        this.length = patternList.length;\n        if (index < 0 || index >= this.length) {\n            throw new TypeError('index out of range');\n        }\n        this.#patternList = patternList;\n        this.#globList = globList;\n        this.#index = index;\n        this.#platform = platform;\n        // normalize root entries of absolute patterns on initial creation.\n        if (this.#index === 0) {\n            // c: => ['c:/']\n            // C:/ => ['C:/']\n            // C:/x => ['C:/', 'x']\n            // //host/share => ['//host/share/']\n            // //host/share/ => ['//host/share/']\n            // //host/share/x => ['//host/share/', 'x']\n            // /etc => ['/', 'etc']\n            // / => ['/']\n            if (this.isUNC()) {\n                // '' / '' / 'host' / 'share'\n                const [p0, p1, p2, p3, ...prest] = this.#patternList;\n                const [g0, g1, g2, g3, ...grest] = this.#globList;\n                if (prest[0] === '') {\n                    // ends in /\n                    prest.shift();\n                    grest.shift();\n                }\n                const p = [p0, p1, p2, p3, ''].join('/');\n                const g = [g0, g1, g2, g3, ''].join('/');\n                this.#patternList = [p, ...prest];\n                this.#globList = [g, ...grest];\n                this.length = this.#patternList.length;\n            }\n            else if (this.isDrive() || this.isAbsolute()) {\n                const [p1, ...prest] = this.#patternList;\n                const [g1, ...grest] = this.#globList;\n                if (prest[0] === '') {\n                    // ends in /\n                    prest.shift();\n                    grest.shift();\n                }\n                const p = p1 + '/';\n                const g = g1 + '/';\n                this.#patternList = [p, ...prest];\n                this.#globList = [g, ...grest];\n                this.length = this.#patternList.length;\n            }\n        }\n    }\n    /**\n     * The first entry in the parsed list of patterns\n     */\n    pattern() {\n        return this.#patternList[this.#index];\n    }\n    /**\n     * true of if pattern() returns a string\n     */\n    isString() {\n        return typeof this.#patternList[this.#index] === 'string';\n    }\n    /**\n     * true of if pattern() returns GLOBSTAR\n     */\n    isGlobstar() {\n        return this.#patternList[this.#index] === minimatch_1.GLOBSTAR;\n    }\n    /**\n     * true if pattern() returns a regexp\n     */\n    isRegExp() {\n        return this.#patternList[this.#index] instanceof RegExp;\n    }\n    /**\n     * The /-joined set of glob parts that make up this pattern\n     */\n    globString() {\n        return (this.#globString =\n            this.#globString ||\n                (this.#index === 0 ?\n                    this.isAbsolute() ?\n                        this.#globList[0] + this.#globList.slice(1).join('/')\n                        : this.#globList.join('/')\n                    : this.#globList.slice(this.#index).join('/')));\n    }\n    /**\n     * true if there are more pattern parts after this one\n     */\n    hasMore() {\n        return this.length > this.#index + 1;\n    }\n    /**\n     * The rest of the pattern after this part, or null if this is the end\n     */\n    rest() {\n        if (this.#rest !== undefined)\n            return this.#rest;\n        if (!this.hasMore())\n            return (this.#rest = null);\n        this.#rest = new Pattern(this.#patternList, this.#globList, this.#index + 1, this.#platform);\n        this.#rest.#isAbsolute = this.#isAbsolute;\n        this.#rest.#isUNC = this.#isUNC;\n        this.#rest.#isDrive = this.#isDrive;\n        return this.#rest;\n    }\n    /**\n     * true if the pattern represents a //unc/path/ on windows\n     */\n    isUNC() {\n        const pl = this.#patternList;\n        return this.#isUNC !== undefined ?\n            this.#isUNC\n            : (this.#isUNC =\n                this.#platform === 'win32' &&\n                    this.#index === 0 &&\n                    pl[0] === '' &&\n                    pl[1] === '' &&\n                    typeof pl[2] === 'string' &&\n                    !!pl[2] &&\n                    typeof pl[3] === 'string' &&\n                    !!pl[3]);\n    }\n    // pattern like C:/...\n    // split = ['C:', ...]\n    // XXX: would be nice to handle patterns like `c:*` to test the cwd\n    // in c: for *, but I don't know of a way to even figure out what that\n    // cwd is without actually chdir'ing into it?\n    /**\n     * True if the pattern starts with a drive letter on Windows\n     */\n    isDrive() {\n        const pl = this.#patternList;\n        return this.#isDrive !== undefined ?\n            this.#isDrive\n            : (this.#isDrive =\n                this.#platform === 'win32' &&\n                    this.#index === 0 &&\n                    this.length > 1 &&\n                    typeof pl[0] === 'string' &&\n                    /^[a-z]:$/i.test(pl[0]));\n    }\n    // pattern = '/' or '/...' or '/x/...'\n    // split = ['', ''] or ['', ...] or ['', 'x', ...]\n    // Drive and UNC both considered absolute on windows\n    /**\n     * True if the pattern is rooted on an absolute path\n     */\n    isAbsolute() {\n        const pl = this.#patternList;\n        return this.#isAbsolute !== undefined ?\n            this.#isAbsolute\n            : (this.#isAbsolute =\n                (pl[0] === '' && pl.length > 1) ||\n                    this.isDrive() ||\n                    this.isUNC());\n    }\n    /**\n     * consume the root of the pattern, and return it\n     */\n    root() {\n        const p = this.#patternList[0];\n        return (typeof p === 'string' && this.isAbsolute() && this.#index === 0) ?\n            p\n            : '';\n    }\n    /**\n     * Check to see if the current globstar pattern is allowed to follow\n     * a symbolic link.\n     */\n    checkFollowGlobstar() {\n        return !(this.#index === 0 ||\n            !this.isGlobstar() ||\n            !this.#followGlobstar);\n    }\n    /**\n     * Mark that the current globstar pattern is following a symbolic link\n     */\n    markFollowGlobstar() {\n        if (this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar)\n            return false;\n        this.#followGlobstar = false;\n        return true;\n    }\n}\nexports.Pattern = Pattern;\n//# sourceMappingURL=pattern.js.map","\"use strict\";\n// synchronous utility for filtering entries and calculating subwalks\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Processor = exports.SubWalks = exports.MatchRecord = exports.HasWalkedCache = void 0;\nconst minimatch_1 = require(\"minimatch\");\n/**\n * A cache of which patterns have been processed for a given Path\n */\nclass HasWalkedCache {\n    store;\n    constructor(store = new Map()) {\n        this.store = store;\n    }\n    copy() {\n        return new HasWalkedCache(new Map(this.store));\n    }\n    hasWalked(target, pattern) {\n        return this.store.get(target.fullpath())?.has(pattern.globString());\n    }\n    storeWalked(target, pattern) {\n        const fullpath = target.fullpath();\n        const cached = this.store.get(fullpath);\n        if (cached)\n            cached.add(pattern.globString());\n        else\n            this.store.set(fullpath, new Set([pattern.globString()]));\n    }\n}\nexports.HasWalkedCache = HasWalkedCache;\n/**\n * A record of which paths have been matched in a given walk step,\n * and whether they only are considered a match if they are a directory,\n * and whether their absolute or relative path should be returned.\n */\nclass MatchRecord {\n    store = new Map();\n    add(target, absolute, ifDir) {\n        const n = (absolute ? 2 : 0) | (ifDir ? 1 : 0);\n        const current = this.store.get(target);\n        this.store.set(target, current === undefined ? n : n & current);\n    }\n    // match, absolute, ifdir\n    entries() {\n        return [...this.store.entries()].map(([path, n]) => [\n            path,\n            !!(n & 2),\n            !!(n & 1),\n        ]);\n    }\n}\nexports.MatchRecord = MatchRecord;\n/**\n * A collection of patterns that must be processed in a subsequent step\n * for a given path.\n */\nclass SubWalks {\n    store = new Map();\n    add(target, pattern) {\n        if (!target.canReaddir()) {\n            return;\n        }\n        const subs = this.store.get(target);\n        if (subs) {\n            if (!subs.find(p => p.globString() === pattern.globString())) {\n                subs.push(pattern);\n            }\n        }\n        else\n            this.store.set(target, [pattern]);\n    }\n    get(target) {\n        const subs = this.store.get(target);\n        /* c8 ignore start */\n        if (!subs) {\n            throw new Error('attempting to walk unknown path');\n        }\n        /* c8 ignore stop */\n        return subs;\n    }\n    entries() {\n        return this.keys().map(k => [k, this.store.get(k)]);\n    }\n    keys() {\n        return [...this.store.keys()].filter(t => t.canReaddir());\n    }\n}\nexports.SubWalks = SubWalks;\n/**\n * The class that processes patterns for a given path.\n *\n * Handles child entry filtering, and determining whether a path's\n * directory contents must be read.\n */\nclass Processor {\n    hasWalkedCache;\n    matches = new MatchRecord();\n    subwalks = new SubWalks();\n    patterns;\n    follow;\n    dot;\n    opts;\n    constructor(opts, hasWalkedCache) {\n        this.opts = opts;\n        this.follow = !!opts.follow;\n        this.dot = !!opts.dot;\n        this.hasWalkedCache =\n            hasWalkedCache ? hasWalkedCache.copy() : new HasWalkedCache();\n    }\n    processPatterns(target, patterns) {\n        this.patterns = patterns;\n        const processingSet = patterns.map(p => [target, p]);\n        // map of paths to the magic-starting subwalks they need to walk\n        // first item in patterns is the filter\n        for (let [t, pattern] of processingSet) {\n            this.hasWalkedCache.storeWalked(t, pattern);\n            const root = pattern.root();\n            const absolute = pattern.isAbsolute() && this.opts.absolute !== false;\n            // start absolute patterns at root\n            if (root) {\n                t = t.resolve(root === '/' && this.opts.root !== undefined ?\n                    this.opts.root\n                    : root);\n                const rest = pattern.rest();\n                if (!rest) {\n                    this.matches.add(t, true, false);\n                    continue;\n                }\n                else {\n                    pattern = rest;\n                }\n            }\n            if (t.isENOENT())\n                continue;\n            let p;\n            let rest;\n            let changed = false;\n            while (typeof (p = pattern.pattern()) === 'string' &&\n                (rest = pattern.rest())) {\n                const c = t.resolve(p);\n                t = c;\n                pattern = rest;\n                changed = true;\n            }\n            p = pattern.pattern();\n            rest = pattern.rest();\n            if (changed) {\n                if (this.hasWalkedCache.hasWalked(t, pattern))\n                    continue;\n                this.hasWalkedCache.storeWalked(t, pattern);\n            }\n            // now we have either a final string for a known entry,\n            // more strings for an unknown entry,\n            // or a pattern starting with magic, mounted on t.\n            if (typeof p === 'string') {\n                // must not be final entry, otherwise we would have\n                // concatenated it earlier.\n                const ifDir = p === '..' || p === '' || p === '.';\n                this.matches.add(t.resolve(p), absolute, ifDir);\n                continue;\n            }\n            else if (p === minimatch_1.GLOBSTAR) {\n                // if no rest, match and subwalk pattern\n                // if rest, process rest and subwalk pattern\n                // if it's a symlink, but we didn't get here by way of a\n                // globstar match (meaning it's the first time THIS globstar\n                // has traversed a symlink), then we follow it. Otherwise, stop.\n                if (!t.isSymbolicLink() ||\n                    this.follow ||\n                    pattern.checkFollowGlobstar()) {\n                    this.subwalks.add(t, pattern);\n                }\n                const rp = rest?.pattern();\n                const rrest = rest?.rest();\n                if (!rest || ((rp === '' || rp === '.') && !rrest)) {\n                    // only HAS to be a dir if it ends in **/ or **/.\n                    // but ending in ** will match files as well.\n                    this.matches.add(t, absolute, rp === '' || rp === '.');\n                }\n                else {\n                    if (rp === '..') {\n                        // this would mean you're matching **/.. at the fs root,\n                        // and no thanks, I'm not gonna test that specific case.\n                        /* c8 ignore start */\n                        const tp = t.parent || t;\n                        /* c8 ignore stop */\n                        if (!rrest)\n                            this.matches.add(tp, absolute, true);\n                        else if (!this.hasWalkedCache.hasWalked(tp, rrest)) {\n                            this.subwalks.add(tp, rrest);\n                        }\n                    }\n                }\n            }\n            else if (p instanceof RegExp) {\n                this.subwalks.add(t, pattern);\n            }\n        }\n        return this;\n    }\n    subwalkTargets() {\n        return this.subwalks.keys();\n    }\n    child() {\n        return new Processor(this.opts, this.hasWalkedCache);\n    }\n    // return a new Processor containing the subwalks for each\n    // child entry, and a set of matches, and\n    // a hasWalkedCache that's a copy of this one\n    // then we're going to call\n    filterEntries(parent, entries) {\n        const patterns = this.subwalks.get(parent);\n        // put matches and entry walks into the results processor\n        const results = this.child();\n        for (const e of entries) {\n            for (const pattern of patterns) {\n                const absolute = pattern.isAbsolute();\n                const p = pattern.pattern();\n                const rest = pattern.rest();\n                if (p === minimatch_1.GLOBSTAR) {\n                    results.testGlobstar(e, pattern, rest, absolute);\n                }\n                else if (p instanceof RegExp) {\n                    results.testRegExp(e, p, rest, absolute);\n                }\n                else {\n                    results.testString(e, p, rest, absolute);\n                }\n            }\n        }\n        return results;\n    }\n    testGlobstar(e, pattern, rest, absolute) {\n        if (this.dot || !e.name.startsWith('.')) {\n            if (!pattern.hasMore()) {\n                this.matches.add(e, absolute, false);\n            }\n            if (e.canReaddir()) {\n                // if we're in follow mode or it's not a symlink, just keep\n                // testing the same pattern. If there's more after the globstar,\n                // then this symlink consumes the globstar. If not, then we can\n                // follow at most ONE symlink along the way, so we mark it, which\n                // also checks to ensure that it wasn't already marked.\n                if (this.follow || !e.isSymbolicLink()) {\n                    this.subwalks.add(e, pattern);\n                }\n                else if (e.isSymbolicLink()) {\n                    if (rest && pattern.checkFollowGlobstar()) {\n                        this.subwalks.add(e, rest);\n                    }\n                    else if (pattern.markFollowGlobstar()) {\n                        this.subwalks.add(e, pattern);\n                    }\n                }\n            }\n        }\n        // if the NEXT thing matches this entry, then also add\n        // the rest.\n        if (rest) {\n            const rp = rest.pattern();\n            if (typeof rp === 'string' &&\n                // dots and empty were handled already\n                rp !== '..' &&\n                rp !== '' &&\n                rp !== '.') {\n                this.testString(e, rp, rest.rest(), absolute);\n            }\n            else if (rp === '..') {\n                /* c8 ignore start */\n                const ep = e.parent || e;\n                /* c8 ignore stop */\n                this.subwalks.add(ep, rest);\n            }\n            else if (rp instanceof RegExp) {\n                this.testRegExp(e, rp, rest.rest(), absolute);\n            }\n        }\n    }\n    testRegExp(e, p, rest, absolute) {\n        if (!p.test(e.name))\n            return;\n        if (!rest) {\n            this.matches.add(e, absolute, false);\n        }\n        else {\n            this.subwalks.add(e, rest);\n        }\n    }\n    testString(e, p, rest, absolute) {\n        // should never happen?\n        if (!e.isNamed(p))\n            return;\n        if (!rest) {\n            this.matches.add(e, absolute, false);\n        }\n        else {\n            this.subwalks.add(e, rest);\n        }\n    }\n}\nexports.Processor = Processor;\n//# sourceMappingURL=processor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GlobStream = exports.GlobWalker = exports.GlobUtil = void 0;\n/**\n * Single-use utility classes to provide functionality to the {@link Glob}\n * methods.\n *\n * @module\n */\nconst minipass_1 = require(\"minipass\");\nconst ignore_js_1 = require(\"./ignore.js\");\nconst processor_js_1 = require(\"./processor.js\");\nconst makeIgnore = (ignore, opts) => typeof ignore === 'string' ? new ignore_js_1.Ignore([ignore], opts)\n    : Array.isArray(ignore) ? new ignore_js_1.Ignore(ignore, opts)\n        : ignore;\n/**\n * basic walking utilities that all the glob walker types use\n */\nclass GlobUtil {\n    path;\n    patterns;\n    opts;\n    seen = new Set();\n    paused = false;\n    aborted = false;\n    #onResume = [];\n    #ignore;\n    #sep;\n    signal;\n    maxDepth;\n    includeChildMatches;\n    constructor(patterns, path, opts) {\n        this.patterns = patterns;\n        this.path = path;\n        this.opts = opts;\n        this.#sep = !opts.posix && opts.platform === 'win32' ? '\\\\' : '/';\n        this.includeChildMatches = opts.includeChildMatches !== false;\n        if (opts.ignore || !this.includeChildMatches) {\n            this.#ignore = makeIgnore(opts.ignore ?? [], opts);\n            if (!this.includeChildMatches &&\n                typeof this.#ignore.add !== 'function') {\n                const m = 'cannot ignore child matches, ignore lacks add() method.';\n                throw new Error(m);\n            }\n        }\n        // ignore, always set with maxDepth, but it's optional on the\n        // GlobOptions type\n        /* c8 ignore start */\n        this.maxDepth = opts.maxDepth || Infinity;\n        /* c8 ignore stop */\n        if (opts.signal) {\n            this.signal = opts.signal;\n            this.signal.addEventListener('abort', () => {\n                this.#onResume.length = 0;\n            });\n        }\n    }\n    #ignored(path) {\n        return this.seen.has(path) || !!this.#ignore?.ignored?.(path);\n    }\n    #childrenIgnored(path) {\n        return !!this.#ignore?.childrenIgnored?.(path);\n    }\n    // backpressure mechanism\n    pause() {\n        this.paused = true;\n    }\n    resume() {\n        /* c8 ignore start */\n        if (this.signal?.aborted)\n            return;\n        /* c8 ignore stop */\n        this.paused = false;\n        let fn = undefined;\n        while (!this.paused && (fn = this.#onResume.shift())) {\n            fn();\n        }\n    }\n    onResume(fn) {\n        if (this.signal?.aborted)\n            return;\n        /* c8 ignore start */\n        if (!this.paused) {\n            fn();\n        }\n        else {\n            /* c8 ignore stop */\n            this.#onResume.push(fn);\n        }\n    }\n    // do the requisite realpath/stat checking, and return the path\n    // to add or undefined to filter it out.\n    async matchCheck(e, ifDir) {\n        if (ifDir && this.opts.nodir)\n            return undefined;\n        let rpc;\n        if (this.opts.realpath) {\n            rpc = e.realpathCached() || (await e.realpath());\n            if (!rpc)\n                return undefined;\n            e = rpc;\n        }\n        const needStat = e.isUnknown() || this.opts.stat;\n        const s = needStat ? await e.lstat() : e;\n        if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n            const target = await s.realpath();\n            /* c8 ignore start */\n            if (target && (target.isUnknown() || this.opts.stat)) {\n                await target.lstat();\n            }\n            /* c8 ignore stop */\n        }\n        return this.matchCheckTest(s, ifDir);\n    }\n    matchCheckTest(e, ifDir) {\n        return (e &&\n            (this.maxDepth === Infinity || e.depth() <= this.maxDepth) &&\n            (!ifDir || e.canReaddir()) &&\n            (!this.opts.nodir || !e.isDirectory()) &&\n            (!this.opts.nodir ||\n                !this.opts.follow ||\n                !e.isSymbolicLink() ||\n                !e.realpathCached()?.isDirectory()) &&\n            !this.#ignored(e)) ?\n            e\n            : undefined;\n    }\n    matchCheckSync(e, ifDir) {\n        if (ifDir && this.opts.nodir)\n            return undefined;\n        let rpc;\n        if (this.opts.realpath) {\n            rpc = e.realpathCached() || e.realpathSync();\n            if (!rpc)\n                return undefined;\n            e = rpc;\n        }\n        const needStat = e.isUnknown() || this.opts.stat;\n        const s = needStat ? e.lstatSync() : e;\n        if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n            const target = s.realpathSync();\n            if (target && (target?.isUnknown() || this.opts.stat)) {\n                target.lstatSync();\n            }\n        }\n        return this.matchCheckTest(s, ifDir);\n    }\n    matchFinish(e, absolute) {\n        if (this.#ignored(e))\n            return;\n        // we know we have an ignore if this is false, but TS doesn't\n        if (!this.includeChildMatches && this.#ignore?.add) {\n            const ign = `${e.relativePosix()}/**`;\n            this.#ignore.add(ign);\n        }\n        const abs = this.opts.absolute === undefined ? absolute : this.opts.absolute;\n        this.seen.add(e);\n        const mark = this.opts.mark && e.isDirectory() ? this.#sep : '';\n        // ok, we have what we need!\n        if (this.opts.withFileTypes) {\n            this.matchEmit(e);\n        }\n        else if (abs) {\n            const abs = this.opts.posix ? e.fullpathPosix() : e.fullpath();\n            this.matchEmit(abs + mark);\n        }\n        else {\n            const rel = this.opts.posix ? e.relativePosix() : e.relative();\n            const pre = this.opts.dotRelative && !rel.startsWith('..' + this.#sep) ?\n                '.' + this.#sep\n                : '';\n            this.matchEmit(!rel ? '.' + mark : pre + rel + mark);\n        }\n    }\n    async match(e, absolute, ifDir) {\n        const p = await this.matchCheck(e, ifDir);\n        if (p)\n            this.matchFinish(p, absolute);\n    }\n    matchSync(e, absolute, ifDir) {\n        const p = this.matchCheckSync(e, ifDir);\n        if (p)\n            this.matchFinish(p, absolute);\n    }\n    walkCB(target, patterns, cb) {\n        /* c8 ignore start */\n        if (this.signal?.aborted)\n            cb();\n        /* c8 ignore stop */\n        this.walkCB2(target, patterns, new processor_js_1.Processor(this.opts), cb);\n    }\n    walkCB2(target, patterns, processor, cb) {\n        if (this.#childrenIgnored(target))\n            return cb();\n        if (this.signal?.aborted)\n            cb();\n        if (this.paused) {\n            this.onResume(() => this.walkCB2(target, patterns, processor, cb));\n            return;\n        }\n        processor.processPatterns(target, patterns);\n        // done processing.  all of the above is sync, can be abstracted out.\n        // subwalks is a map of paths to the entry filters they need\n        // matches is a map of paths to [absolute, ifDir] tuples.\n        let tasks = 1;\n        const next = () => {\n            if (--tasks === 0)\n                cb();\n        };\n        for (const [m, absolute, ifDir] of processor.matches.entries()) {\n            if (this.#ignored(m))\n                continue;\n            tasks++;\n            this.match(m, absolute, ifDir).then(() => next());\n        }\n        for (const t of processor.subwalkTargets()) {\n            if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n                continue;\n            }\n            tasks++;\n            const childrenCached = t.readdirCached();\n            if (t.calledReaddir())\n                this.walkCB3(t, childrenCached, processor, next);\n            else {\n                t.readdirCB((_, entries) => this.walkCB3(t, entries, processor, next), true);\n            }\n        }\n        next();\n    }\n    walkCB3(target, entries, processor, cb) {\n        processor = processor.filterEntries(target, entries);\n        let tasks = 1;\n        const next = () => {\n            if (--tasks === 0)\n                cb();\n        };\n        for (const [m, absolute, ifDir] of processor.matches.entries()) {\n            if (this.#ignored(m))\n                continue;\n            tasks++;\n            this.match(m, absolute, ifDir).then(() => next());\n        }\n        for (const [target, patterns] of processor.subwalks.entries()) {\n            tasks++;\n            this.walkCB2(target, patterns, processor.child(), next);\n        }\n        next();\n    }\n    walkCBSync(target, patterns, cb) {\n        /* c8 ignore start */\n        if (this.signal?.aborted)\n            cb();\n        /* c8 ignore stop */\n        this.walkCB2Sync(target, patterns, new processor_js_1.Processor(this.opts), cb);\n    }\n    walkCB2Sync(target, patterns, processor, cb) {\n        if (this.#childrenIgnored(target))\n            return cb();\n        if (this.signal?.aborted)\n            cb();\n        if (this.paused) {\n            this.onResume(() => this.walkCB2Sync(target, patterns, processor, cb));\n            return;\n        }\n        processor.processPatterns(target, patterns);\n        // done processing.  all of the above is sync, can be abstracted out.\n        // subwalks is a map of paths to the entry filters they need\n        // matches is a map of paths to [absolute, ifDir] tuples.\n        let tasks = 1;\n        const next = () => {\n            if (--tasks === 0)\n                cb();\n        };\n        for (const [m, absolute, ifDir] of processor.matches.entries()) {\n            if (this.#ignored(m))\n                continue;\n            this.matchSync(m, absolute, ifDir);\n        }\n        for (const t of processor.subwalkTargets()) {\n            if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n                continue;\n            }\n            tasks++;\n            const children = t.readdirSync();\n            this.walkCB3Sync(t, children, processor, next);\n        }\n        next();\n    }\n    walkCB3Sync(target, entries, processor, cb) {\n        processor = processor.filterEntries(target, entries);\n        let tasks = 1;\n        const next = () => {\n            if (--tasks === 0)\n                cb();\n        };\n        for (const [m, absolute, ifDir] of processor.matches.entries()) {\n            if (this.#ignored(m))\n                continue;\n            this.matchSync(m, absolute, ifDir);\n        }\n        for (const [target, patterns] of processor.subwalks.entries()) {\n            tasks++;\n            this.walkCB2Sync(target, patterns, processor.child(), next);\n        }\n        next();\n    }\n}\nexports.GlobUtil = GlobUtil;\nclass GlobWalker extends GlobUtil {\n    matches = new Set();\n    constructor(patterns, path, opts) {\n        super(patterns, path, opts);\n    }\n    matchEmit(e) {\n        this.matches.add(e);\n    }\n    async walk() {\n        if (this.signal?.aborted)\n            throw this.signal.reason;\n        if (this.path.isUnknown()) {\n            await this.path.lstat();\n        }\n        await new Promise((res, rej) => {\n            this.walkCB(this.path, this.patterns, () => {\n                if (this.signal?.aborted) {\n                    rej(this.signal.reason);\n                }\n                else {\n                    res(this.matches);\n                }\n            });\n        });\n        return this.matches;\n    }\n    walkSync() {\n        if (this.signal?.aborted)\n            throw this.signal.reason;\n        if (this.path.isUnknown()) {\n            this.path.lstatSync();\n        }\n        // nothing for the callback to do, because this never pauses\n        this.walkCBSync(this.path, this.patterns, () => {\n            if (this.signal?.aborted)\n                throw this.signal.reason;\n        });\n        return this.matches;\n    }\n}\nexports.GlobWalker = GlobWalker;\nclass GlobStream extends GlobUtil {\n    results;\n    constructor(patterns, path, opts) {\n        super(patterns, path, opts);\n        this.results = new minipass_1.Minipass({\n            signal: this.signal,\n            objectMode: true,\n        });\n        this.results.on('drain', () => this.resume());\n        this.results.on('resume', () => this.resume());\n    }\n    matchEmit(e) {\n        this.results.write(e);\n        if (!this.results.flowing)\n            this.pause();\n    }\n    stream() {\n        const target = this.path;\n        if (target.isUnknown()) {\n            target.lstat().then(() => {\n                this.walkCB(target, this.patterns, () => this.results.end());\n            });\n        }\n        else {\n            this.walkCB(target, this.patterns, () => this.results.end());\n        }\n        return this.results;\n    }\n    streamSync() {\n        if (this.path.isUnknown()) {\n            this.path.lstatSync();\n        }\n        this.walkCBSync(this.path, this.patterns, () => this.results.end());\n        return this.results;\n    }\n}\nexports.GlobStream = GlobStream;\n//# sourceMappingURL=walker.js.map","\"use strict\";\n/**\n * @module LRUCache\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LRUCache = void 0;\nconst perf = typeof performance === 'object' &&\n    performance &&\n    typeof performance.now === 'function'\n    ? performance\n    : Date;\nconst warned = new Set();\n/* c8 ignore start */\nconst PROCESS = (typeof process === 'object' && !!process ? process : {});\n/* c8 ignore start */\nconst emitWarning = (msg, type, code, fn) => {\n    typeof PROCESS.emitWarning === 'function'\n        ? PROCESS.emitWarning(msg, type, code, fn)\n        : console.error(`[${code}] ${type}: ${msg}`);\n};\nlet AC = globalThis.AbortController;\nlet AS = globalThis.AbortSignal;\n/* c8 ignore start */\nif (typeof AC === 'undefined') {\n    //@ts-ignore\n    AS = class AbortSignal {\n        onabort;\n        _onabort = [];\n        reason;\n        aborted = false;\n        addEventListener(_, fn) {\n            this._onabort.push(fn);\n        }\n    };\n    //@ts-ignore\n    AC = class AbortController {\n        constructor() {\n            warnACPolyfill();\n        }\n        signal = new AS();\n        abort(reason) {\n            if (this.signal.aborted)\n                return;\n            //@ts-ignore\n            this.signal.reason = reason;\n            //@ts-ignore\n            this.signal.aborted = true;\n            //@ts-ignore\n            for (const fn of this.signal._onabort) {\n                fn(reason);\n            }\n            this.signal.onabort?.(reason);\n        }\n    };\n    let printACPolyfillWarning = PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== '1';\n    const warnACPolyfill = () => {\n        if (!printACPolyfillWarning)\n            return;\n        printACPolyfillWarning = false;\n        emitWarning('AbortController is not defined. If using lru-cache in ' +\n            'node 14, load an AbortController polyfill from the ' +\n            '`node-abort-controller` package. A minimal polyfill is ' +\n            'provided for use by LRUCache.fetch(), but it should not be ' +\n            'relied upon in other contexts (eg, passing it to other APIs that ' +\n            'use AbortController/AbortSignal might have undesirable effects). ' +\n            'You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.', 'NO_ABORT_CONTROLLER', 'ENOTSUP', warnACPolyfill);\n    };\n}\n/* c8 ignore stop */\nconst shouldWarn = (code) => !warned.has(code);\nconst TYPE = Symbol('type');\nconst isPosInt = (n) => n && n === Math.floor(n) && n > 0 && isFinite(n);\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max) => !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n        ? Uint8Array\n        : max <= Math.pow(2, 16)\n            ? Uint16Array\n            : max <= Math.pow(2, 32)\n                ? Uint32Array\n                : max <= Number.MAX_SAFE_INTEGER\n                    ? ZeroArray\n                    : null;\n/* c8 ignore stop */\nclass ZeroArray extends Array {\n    constructor(size) {\n        super(size);\n        this.fill(0);\n    }\n}\nclass Stack {\n    heap;\n    length;\n    // private constructor\n    static #constructing = false;\n    static create(max) {\n        const HeapCls = getUintArray(max);\n        if (!HeapCls)\n            return [];\n        Stack.#constructing = true;\n        const s = new Stack(max, HeapCls);\n        Stack.#constructing = false;\n        return s;\n    }\n    constructor(max, HeapCls) {\n        /* c8 ignore start */\n        if (!Stack.#constructing) {\n            throw new TypeError('instantiate Stack using Stack.create(n)');\n        }\n        /* c8 ignore stop */\n        this.heap = new HeapCls(max);\n        this.length = 0;\n    }\n    push(n) {\n        this.heap[this.length++] = n;\n    }\n    pop() {\n        return this.heap[--this.length];\n    }\n}\n/**\n * Default export, the thing you're using this module to get.\n *\n * The `K` and `V` types define the key and value types, respectively. The\n * optional `FC` type defines the type of the `context` object passed to\n * `cache.fetch()` and `cache.memo()`.\n *\n * Keys and values **must not** be `null` or `undefined`.\n *\n * All properties from the options object (with the exception of `max`,\n * `maxSize`, `fetchMethod`, `memoMethod`, `dispose` and `disposeAfter`) are\n * added as normal public members. (The listed options are read-only getters.)\n *\n * Changing any of these will alter the defaults for subsequent method calls.\n */\nclass LRUCache {\n    // options that cannot be changed without disaster\n    #max;\n    #maxSize;\n    #dispose;\n    #disposeAfter;\n    #fetchMethod;\n    #memoMethod;\n    /**\n     * {@link LRUCache.OptionsBase.ttl}\n     */\n    ttl;\n    /**\n     * {@link LRUCache.OptionsBase.ttlResolution}\n     */\n    ttlResolution;\n    /**\n     * {@link LRUCache.OptionsBase.ttlAutopurge}\n     */\n    ttlAutopurge;\n    /**\n     * {@link LRUCache.OptionsBase.updateAgeOnGet}\n     */\n    updateAgeOnGet;\n    /**\n     * {@link LRUCache.OptionsBase.updateAgeOnHas}\n     */\n    updateAgeOnHas;\n    /**\n     * {@link LRUCache.OptionsBase.allowStale}\n     */\n    allowStale;\n    /**\n     * {@link LRUCache.OptionsBase.noDisposeOnSet}\n     */\n    noDisposeOnSet;\n    /**\n     * {@link LRUCache.OptionsBase.noUpdateTTL}\n     */\n    noUpdateTTL;\n    /**\n     * {@link LRUCache.OptionsBase.maxEntrySize}\n     */\n    maxEntrySize;\n    /**\n     * {@link LRUCache.OptionsBase.sizeCalculation}\n     */\n    sizeCalculation;\n    /**\n     * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n     */\n    noDeleteOnFetchRejection;\n    /**\n     * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n     */\n    noDeleteOnStaleGet;\n    /**\n     * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n     */\n    allowStaleOnFetchAbort;\n    /**\n     * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n     */\n    allowStaleOnFetchRejection;\n    /**\n     * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n     */\n    ignoreFetchAbort;\n    // computed properties\n    #size;\n    #calculatedSize;\n    #keyMap;\n    #keyList;\n    #valList;\n    #next;\n    #prev;\n    #head;\n    #tail;\n    #free;\n    #disposed;\n    #sizes;\n    #starts;\n    #ttls;\n    #hasDispose;\n    #hasFetchMethod;\n    #hasDisposeAfter;\n    /**\n     * Do not call this method unless you need to inspect the\n     * inner workings of the cache.  If anything returned by this\n     * object is modified in any way, strange breakage may occur.\n     *\n     * These fields are private for a reason!\n     *\n     * @internal\n     */\n    static unsafeExposeInternals(c) {\n        return {\n            // properties\n            starts: c.#starts,\n            ttls: c.#ttls,\n            sizes: c.#sizes,\n            keyMap: c.#keyMap,\n            keyList: c.#keyList,\n            valList: c.#valList,\n            next: c.#next,\n            prev: c.#prev,\n            get head() {\n                return c.#head;\n            },\n            get tail() {\n                return c.#tail;\n            },\n            free: c.#free,\n            // methods\n            isBackgroundFetch: (p) => c.#isBackgroundFetch(p),\n            backgroundFetch: (k, index, options, context) => c.#backgroundFetch(k, index, options, context),\n            moveToTail: (index) => c.#moveToTail(index),\n            indexes: (options) => c.#indexes(options),\n            rindexes: (options) => c.#rindexes(options),\n            isStale: (index) => c.#isStale(index),\n        };\n    }\n    // Protected read-only members\n    /**\n     * {@link LRUCache.OptionsBase.max} (read-only)\n     */\n    get max() {\n        return this.#max;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.maxSize} (read-only)\n     */\n    get maxSize() {\n        return this.#maxSize;\n    }\n    /**\n     * The total computed size of items in the cache (read-only)\n     */\n    get calculatedSize() {\n        return this.#calculatedSize;\n    }\n    /**\n     * The number of items stored in the cache (read-only)\n     */\n    get size() {\n        return this.#size;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n     */\n    get fetchMethod() {\n        return this.#fetchMethod;\n    }\n    get memoMethod() {\n        return this.#memoMethod;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.dispose} (read-only)\n     */\n    get dispose() {\n        return this.#dispose;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n     */\n    get disposeAfter() {\n        return this.#disposeAfter;\n    }\n    constructor(options) {\n        const { max = 0, ttl, ttlResolution = 1, ttlAutopurge, updateAgeOnGet, updateAgeOnHas, allowStale, dispose, disposeAfter, noDisposeOnSet, noUpdateTTL, maxSize = 0, maxEntrySize = 0, sizeCalculation, fetchMethod, memoMethod, noDeleteOnFetchRejection, noDeleteOnStaleGet, allowStaleOnFetchRejection, allowStaleOnFetchAbort, ignoreFetchAbort, } = options;\n        if (max !== 0 && !isPosInt(max)) {\n            throw new TypeError('max option must be a nonnegative integer');\n        }\n        const UintArray = max ? getUintArray(max) : Array;\n        if (!UintArray) {\n            throw new Error('invalid max value: ' + max);\n        }\n        this.#max = max;\n        this.#maxSize = maxSize;\n        this.maxEntrySize = maxEntrySize || this.#maxSize;\n        this.sizeCalculation = sizeCalculation;\n        if (this.sizeCalculation) {\n            if (!this.#maxSize && !this.maxEntrySize) {\n                throw new TypeError('cannot set sizeCalculation without setting maxSize or maxEntrySize');\n            }\n            if (typeof this.sizeCalculation !== 'function') {\n                throw new TypeError('sizeCalculation set to non-function');\n            }\n        }\n        if (memoMethod !== undefined &&\n            typeof memoMethod !== 'function') {\n            throw new TypeError('memoMethod must be a function if defined');\n        }\n        this.#memoMethod = memoMethod;\n        if (fetchMethod !== undefined &&\n            typeof fetchMethod !== 'function') {\n            throw new TypeError('fetchMethod must be a function if specified');\n        }\n        this.#fetchMethod = fetchMethod;\n        this.#hasFetchMethod = !!fetchMethod;\n        this.#keyMap = new Map();\n        this.#keyList = new Array(max).fill(undefined);\n        this.#valList = new Array(max).fill(undefined);\n        this.#next = new UintArray(max);\n        this.#prev = new UintArray(max);\n        this.#head = 0;\n        this.#tail = 0;\n        this.#free = Stack.create(max);\n        this.#size = 0;\n        this.#calculatedSize = 0;\n        if (typeof dispose === 'function') {\n            this.#dispose = dispose;\n        }\n        if (typeof disposeAfter === 'function') {\n            this.#disposeAfter = disposeAfter;\n            this.#disposed = [];\n        }\n        else {\n            this.#disposeAfter = undefined;\n            this.#disposed = undefined;\n        }\n        this.#hasDispose = !!this.#dispose;\n        this.#hasDisposeAfter = !!this.#disposeAfter;\n        this.noDisposeOnSet = !!noDisposeOnSet;\n        this.noUpdateTTL = !!noUpdateTTL;\n        this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection;\n        this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection;\n        this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort;\n        this.ignoreFetchAbort = !!ignoreFetchAbort;\n        // NB: maxEntrySize is set to maxSize if it's set\n        if (this.maxEntrySize !== 0) {\n            if (this.#maxSize !== 0) {\n                if (!isPosInt(this.#maxSize)) {\n                    throw new TypeError('maxSize must be a positive integer if specified');\n                }\n            }\n            if (!isPosInt(this.maxEntrySize)) {\n                throw new TypeError('maxEntrySize must be a positive integer if specified');\n            }\n            this.#initializeSizeTracking();\n        }\n        this.allowStale = !!allowStale;\n        this.noDeleteOnStaleGet = !!noDeleteOnStaleGet;\n        this.updateAgeOnGet = !!updateAgeOnGet;\n        this.updateAgeOnHas = !!updateAgeOnHas;\n        this.ttlResolution =\n            isPosInt(ttlResolution) || ttlResolution === 0\n                ? ttlResolution\n                : 1;\n        this.ttlAutopurge = !!ttlAutopurge;\n        this.ttl = ttl || 0;\n        if (this.ttl) {\n            if (!isPosInt(this.ttl)) {\n                throw new TypeError('ttl must be a positive integer if specified');\n            }\n            this.#initializeTTLTracking();\n        }\n        // do not allow completely unbounded caches\n        if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n            throw new TypeError('At least one of max, maxSize, or ttl is required');\n        }\n        if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n            const code = 'LRU_CACHE_UNBOUNDED';\n            if (shouldWarn(code)) {\n                warned.add(code);\n                const msg = 'TTL caching without ttlAutopurge, max, or maxSize can ' +\n                    'result in unbounded memory consumption.';\n                emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache);\n            }\n        }\n    }\n    /**\n     * Return the number of ms left in the item's TTL. If item is not in cache,\n     * returns `0`. Returns `Infinity` if item is in cache without a defined TTL.\n     */\n    getRemainingTTL(key) {\n        return this.#keyMap.has(key) ? Infinity : 0;\n    }\n    #initializeTTLTracking() {\n        const ttls = new ZeroArray(this.#max);\n        const starts = new ZeroArray(this.#max);\n        this.#ttls = ttls;\n        this.#starts = starts;\n        this.#setItemTTL = (index, ttl, start = perf.now()) => {\n            starts[index] = ttl !== 0 ? start : 0;\n            ttls[index] = ttl;\n            if (ttl !== 0 && this.ttlAutopurge) {\n                const t = setTimeout(() => {\n                    if (this.#isStale(index)) {\n                        this.#delete(this.#keyList[index], 'expire');\n                    }\n                }, ttl + 1);\n                // unref() not supported on all platforms\n                /* c8 ignore start */\n                if (t.unref) {\n                    t.unref();\n                }\n                /* c8 ignore stop */\n            }\n        };\n        this.#updateItemAge = index => {\n            starts[index] = ttls[index] !== 0 ? perf.now() : 0;\n        };\n        this.#statusTTL = (status, index) => {\n            if (ttls[index]) {\n                const ttl = ttls[index];\n                const start = starts[index];\n                /* c8 ignore next */\n                if (!ttl || !start)\n                    return;\n                status.ttl = ttl;\n                status.start = start;\n                status.now = cachedNow || getNow();\n                const age = status.now - start;\n                status.remainingTTL = ttl - age;\n            }\n        };\n        // debounce calls to perf.now() to 1s so we're not hitting\n        // that costly call repeatedly.\n        let cachedNow = 0;\n        const getNow = () => {\n            const n = perf.now();\n            if (this.ttlResolution > 0) {\n                cachedNow = n;\n                const t = setTimeout(() => (cachedNow = 0), this.ttlResolution);\n                // not available on all platforms\n                /* c8 ignore start */\n                if (t.unref) {\n                    t.unref();\n                }\n                /* c8 ignore stop */\n            }\n            return n;\n        };\n        this.getRemainingTTL = key => {\n            const index = this.#keyMap.get(key);\n            if (index === undefined) {\n                return 0;\n            }\n            const ttl = ttls[index];\n            const start = starts[index];\n            if (!ttl || !start) {\n                return Infinity;\n            }\n            const age = (cachedNow || getNow()) - start;\n            return ttl - age;\n        };\n        this.#isStale = index => {\n            const s = starts[index];\n            const t = ttls[index];\n            return !!t && !!s && (cachedNow || getNow()) - s > t;\n        };\n    }\n    // conditionally set private methods related to TTL\n    #updateItemAge = () => { };\n    #statusTTL = () => { };\n    #setItemTTL = () => { };\n    /* c8 ignore stop */\n    #isStale = () => false;\n    #initializeSizeTracking() {\n        const sizes = new ZeroArray(this.#max);\n        this.#calculatedSize = 0;\n        this.#sizes = sizes;\n        this.#removeItemSize = index => {\n            this.#calculatedSize -= sizes[index];\n            sizes[index] = 0;\n        };\n        this.#requireSize = (k, v, size, sizeCalculation) => {\n            // provisionally accept background fetches.\n            // actual value size will be checked when they return.\n            if (this.#isBackgroundFetch(v)) {\n                return 0;\n            }\n            if (!isPosInt(size)) {\n                if (sizeCalculation) {\n                    if (typeof sizeCalculation !== 'function') {\n                        throw new TypeError('sizeCalculation must be a function');\n                    }\n                    size = sizeCalculation(v, k);\n                    if (!isPosInt(size)) {\n                        throw new TypeError('sizeCalculation return invalid (expect positive integer)');\n                    }\n                }\n                else {\n                    throw new TypeError('invalid size value (must be positive integer). ' +\n                        'When maxSize or maxEntrySize is used, sizeCalculation ' +\n                        'or size must be set.');\n                }\n            }\n            return size;\n        };\n        this.#addItemSize = (index, size, status) => {\n            sizes[index] = size;\n            if (this.#maxSize) {\n                const maxSize = this.#maxSize - sizes[index];\n                while (this.#calculatedSize > maxSize) {\n                    this.#evict(true);\n                }\n            }\n            this.#calculatedSize += sizes[index];\n            if (status) {\n                status.entrySize = size;\n                status.totalCalculatedSize = this.#calculatedSize;\n            }\n        };\n    }\n    #removeItemSize = _i => { };\n    #addItemSize = (_i, _s, _st) => { };\n    #requireSize = (_k, _v, size, sizeCalculation) => {\n        if (size || sizeCalculation) {\n            throw new TypeError('cannot set size without setting maxSize or maxEntrySize on cache');\n        }\n        return 0;\n    };\n    *#indexes({ allowStale = this.allowStale } = {}) {\n        if (this.#size) {\n            for (let i = this.#tail; true;) {\n                if (!this.#isValidIndex(i)) {\n                    break;\n                }\n                if (allowStale || !this.#isStale(i)) {\n                    yield i;\n                }\n                if (i === this.#head) {\n                    break;\n                }\n                else {\n                    i = this.#prev[i];\n                }\n            }\n        }\n    }\n    *#rindexes({ allowStale = this.allowStale } = {}) {\n        if (this.#size) {\n            for (let i = this.#head; true;) {\n                if (!this.#isValidIndex(i)) {\n                    break;\n                }\n                if (allowStale || !this.#isStale(i)) {\n                    yield i;\n                }\n                if (i === this.#tail) {\n                    break;\n                }\n                else {\n                    i = this.#next[i];\n                }\n            }\n        }\n    }\n    #isValidIndex(index) {\n        return (index !== undefined &&\n            this.#keyMap.get(this.#keyList[index]) === index);\n    }\n    /**\n     * Return a generator yielding `[key, value]` pairs,\n     * in order from most recently used to least recently used.\n     */\n    *entries() {\n        for (const i of this.#indexes()) {\n            if (this.#valList[i] !== undefined &&\n                this.#keyList[i] !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield [this.#keyList[i], this.#valList[i]];\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.entries}\n     *\n     * Return a generator yielding `[key, value]` pairs,\n     * in order from least recently used to most recently used.\n     */\n    *rentries() {\n        for (const i of this.#rindexes()) {\n            if (this.#valList[i] !== undefined &&\n                this.#keyList[i] !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield [this.#keyList[i], this.#valList[i]];\n            }\n        }\n    }\n    /**\n     * Return a generator yielding the keys in the cache,\n     * in order from most recently used to least recently used.\n     */\n    *keys() {\n        for (const i of this.#indexes()) {\n            const k = this.#keyList[i];\n            if (k !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield k;\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.keys}\n     *\n     * Return a generator yielding the keys in the cache,\n     * in order from least recently used to most recently used.\n     */\n    *rkeys() {\n        for (const i of this.#rindexes()) {\n            const k = this.#keyList[i];\n            if (k !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield k;\n            }\n        }\n    }\n    /**\n     * Return a generator yielding the values in the cache,\n     * in order from most recently used to least recently used.\n     */\n    *values() {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            if (v !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield this.#valList[i];\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.values}\n     *\n     * Return a generator yielding the values in the cache,\n     * in order from least recently used to most recently used.\n     */\n    *rvalues() {\n        for (const i of this.#rindexes()) {\n            const v = this.#valList[i];\n            if (v !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield this.#valList[i];\n            }\n        }\n    }\n    /**\n     * Iterating over the cache itself yields the same results as\n     * {@link LRUCache.entries}\n     */\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    /**\n     * A String value that is used in the creation of the default string\n     * description of an object. Called by the built-in method\n     * `Object.prototype.toString`.\n     */\n    [Symbol.toStringTag] = 'LRUCache';\n    /**\n     * Find a value for which the supplied fn method returns a truthy value,\n     * similar to `Array.find()`. fn is called as `fn(value, key, cache)`.\n     */\n    find(fn, getOptions = {}) {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            if (fn(value, this.#keyList[i], this)) {\n                return this.get(this.#keyList[i], getOptions);\n            }\n        }\n    }\n    /**\n     * Call the supplied function on each item in the cache, in order from most\n     * recently used to least recently used.\n     *\n     * `fn` is called as `fn(value, key, cache)`.\n     *\n     * If `thisp` is provided, function will be called in the `this`-context of\n     * the provided object, or the cache if no `thisp` object is provided.\n     *\n     * Does not update age or recenty of use, or iterate over stale values.\n     */\n    forEach(fn, thisp = this) {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            fn.call(thisp, value, this.#keyList[i], this);\n        }\n    }\n    /**\n     * The same as {@link LRUCache.forEach} but items are iterated over in\n     * reverse order.  (ie, less recently used items are iterated over first.)\n     */\n    rforEach(fn, thisp = this) {\n        for (const i of this.#rindexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            fn.call(thisp, value, this.#keyList[i], this);\n        }\n    }\n    /**\n     * Delete any stale entries. Returns true if anything was removed,\n     * false otherwise.\n     */\n    purgeStale() {\n        let deleted = false;\n        for (const i of this.#rindexes({ allowStale: true })) {\n            if (this.#isStale(i)) {\n                this.#delete(this.#keyList[i], 'expire');\n                deleted = true;\n            }\n        }\n        return deleted;\n    }\n    /**\n     * Get the extended info about a given entry, to get its value, size, and\n     * TTL info simultaneously. Returns `undefined` if the key is not present.\n     *\n     * Unlike {@link LRUCache#dump}, which is designed to be portable and survive\n     * serialization, the `start` value is always the current timestamp, and the\n     * `ttl` is a calculated remaining time to live (negative if expired).\n     *\n     * Always returns stale values, if their info is found in the cache, so be\n     * sure to check for expirations (ie, a negative {@link LRUCache.Entry#ttl})\n     * if relevant.\n     */\n    info(key) {\n        const i = this.#keyMap.get(key);\n        if (i === undefined)\n            return undefined;\n        const v = this.#valList[i];\n        const value = this.#isBackgroundFetch(v)\n            ? v.__staleWhileFetching\n            : v;\n        if (value === undefined)\n            return undefined;\n        const entry = { value };\n        if (this.#ttls && this.#starts) {\n            const ttl = this.#ttls[i];\n            const start = this.#starts[i];\n            if (ttl && start) {\n                const remain = ttl - (perf.now() - start);\n                entry.ttl = remain;\n                entry.start = Date.now();\n            }\n        }\n        if (this.#sizes) {\n            entry.size = this.#sizes[i];\n        }\n        return entry;\n    }\n    /**\n     * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n     * passed to {@link LRLUCache#load}.\n     *\n     * The `start` fields are calculated relative to a portable `Date.now()`\n     * timestamp, even if `performance.now()` is available.\n     *\n     * Stale entries are always included in the `dump`, even if\n     * {@link LRUCache.OptionsBase.allowStale} is false.\n     *\n     * Note: this returns an actual array, not a generator, so it can be more\n     * easily passed around.\n     */\n    dump() {\n        const arr = [];\n        for (const i of this.#indexes({ allowStale: true })) {\n            const key = this.#keyList[i];\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined || key === undefined)\n                continue;\n            const entry = { value };\n            if (this.#ttls && this.#starts) {\n                entry.ttl = this.#ttls[i];\n                // always dump the start relative to a portable timestamp\n                // it's ok for this to be a bit slow, it's a rare operation.\n                const age = perf.now() - this.#starts[i];\n                entry.start = Math.floor(Date.now() - age);\n            }\n            if (this.#sizes) {\n                entry.size = this.#sizes[i];\n            }\n            arr.unshift([key, entry]);\n        }\n        return arr;\n    }\n    /**\n     * Reset the cache and load in the items in entries in the order listed.\n     *\n     * The shape of the resulting cache may be different if the same options are\n     * not used in both caches.\n     *\n     * The `start` fields are assumed to be calculated relative to a portable\n     * `Date.now()` timestamp, even if `performance.now()` is available.\n     */\n    load(arr) {\n        this.clear();\n        for (const [key, entry] of arr) {\n            if (entry.start) {\n                // entry.start is a portable timestamp, but we may be using\n                // node's performance.now(), so calculate the offset, so that\n                // we get the intended remaining TTL, no matter how long it's\n                // been on ice.\n                //\n                // it's ok for this to be a bit slow, it's a rare operation.\n                const age = Date.now() - entry.start;\n                entry.start = perf.now() - age;\n            }\n            this.set(key, entry.value, entry);\n        }\n    }\n    /**\n     * Add a value to the cache.\n     *\n     * Note: if `undefined` is specified as a value, this is an alias for\n     * {@link LRUCache#delete}\n     *\n     * Fields on the {@link LRUCache.SetOptions} options param will override\n     * their corresponding values in the constructor options for the scope\n     * of this single `set()` operation.\n     *\n     * If `start` is provided, then that will set the effective start\n     * time for the TTL calculation. Note that this must be a previous\n     * value of `performance.now()` if supported, or a previous value of\n     * `Date.now()` if not.\n     *\n     * Options object may also include `size`, which will prevent\n     * calling the `sizeCalculation` function and just use the specified\n     * number if it is a positive integer, and `noDisposeOnSet` which\n     * will prevent calling a `dispose` function in the case of\n     * overwrites.\n     *\n     * If the `size` (or return value of `sizeCalculation`) for a given\n     * entry is greater than `maxEntrySize`, then the item will not be\n     * added to the cache.\n     *\n     * Will update the recency of the entry.\n     *\n     * If the value is `undefined`, then this is an alias for\n     * `cache.delete(key)`. `undefined` is never stored in the cache.\n     */\n    set(k, v, setOptions = {}) {\n        if (v === undefined) {\n            this.delete(k);\n            return this;\n        }\n        const { ttl = this.ttl, start, noDisposeOnSet = this.noDisposeOnSet, sizeCalculation = this.sizeCalculation, status, } = setOptions;\n        let { noUpdateTTL = this.noUpdateTTL } = setOptions;\n        const size = this.#requireSize(k, v, setOptions.size || 0, sizeCalculation);\n        // if the item doesn't fit, don't do anything\n        // NB: maxEntrySize set to maxSize by default\n        if (this.maxEntrySize && size > this.maxEntrySize) {\n            if (status) {\n                status.set = 'miss';\n                status.maxEntrySizeExceeded = true;\n            }\n            // have to delete, in case something is there already.\n            this.#delete(k, 'set');\n            return this;\n        }\n        let index = this.#size === 0 ? undefined : this.#keyMap.get(k);\n        if (index === undefined) {\n            // addition\n            index = (this.#size === 0\n                ? this.#tail\n                : this.#free.length !== 0\n                    ? this.#free.pop()\n                    : this.#size === this.#max\n                        ? this.#evict(false)\n                        : this.#size);\n            this.#keyList[index] = k;\n            this.#valList[index] = v;\n            this.#keyMap.set(k, index);\n            this.#next[this.#tail] = index;\n            this.#prev[index] = this.#tail;\n            this.#tail = index;\n            this.#size++;\n            this.#addItemSize(index, size, status);\n            if (status)\n                status.set = 'add';\n            noUpdateTTL = false;\n        }\n        else {\n            // update\n            this.#moveToTail(index);\n            const oldVal = this.#valList[index];\n            if (v !== oldVal) {\n                if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n                    oldVal.__abortController.abort(new Error('replaced'));\n                    const { __staleWhileFetching: s } = oldVal;\n                    if (s !== undefined && !noDisposeOnSet) {\n                        if (this.#hasDispose) {\n                            this.#dispose?.(s, k, 'set');\n                        }\n                        if (this.#hasDisposeAfter) {\n                            this.#disposed?.push([s, k, 'set']);\n                        }\n                    }\n                }\n                else if (!noDisposeOnSet) {\n                    if (this.#hasDispose) {\n                        this.#dispose?.(oldVal, k, 'set');\n                    }\n                    if (this.#hasDisposeAfter) {\n                        this.#disposed?.push([oldVal, k, 'set']);\n                    }\n                }\n                this.#removeItemSize(index);\n                this.#addItemSize(index, size, status);\n                this.#valList[index] = v;\n                if (status) {\n                    status.set = 'replace';\n                    const oldValue = oldVal && this.#isBackgroundFetch(oldVal)\n                        ? oldVal.__staleWhileFetching\n                        : oldVal;\n                    if (oldValue !== undefined)\n                        status.oldValue = oldValue;\n                }\n            }\n            else if (status) {\n                status.set = 'update';\n            }\n        }\n        if (ttl !== 0 && !this.#ttls) {\n            this.#initializeTTLTracking();\n        }\n        if (this.#ttls) {\n            if (!noUpdateTTL) {\n                this.#setItemTTL(index, ttl, start);\n            }\n            if (status)\n                this.#statusTTL(status, index);\n        }\n        if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n        return this;\n    }\n    /**\n     * Evict the least recently used item, returning its value or\n     * `undefined` if cache is empty.\n     */\n    pop() {\n        try {\n            while (this.#size) {\n                const val = this.#valList[this.#head];\n                this.#evict(true);\n                if (this.#isBackgroundFetch(val)) {\n                    if (val.__staleWhileFetching) {\n                        return val.__staleWhileFetching;\n                    }\n                }\n                else if (val !== undefined) {\n                    return val;\n                }\n            }\n        }\n        finally {\n            if (this.#hasDisposeAfter && this.#disposed) {\n                const dt = this.#disposed;\n                let task;\n                while ((task = dt?.shift())) {\n                    this.#disposeAfter?.(...task);\n                }\n            }\n        }\n    }\n    #evict(free) {\n        const head = this.#head;\n        const k = this.#keyList[head];\n        const v = this.#valList[head];\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('evicted'));\n        }\n        else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n                this.#dispose?.(v, k, 'evict');\n            }\n            if (this.#hasDisposeAfter) {\n                this.#disposed?.push([v, k, 'evict']);\n            }\n        }\n        this.#removeItemSize(head);\n        // if we aren't about to use the index, then null these out\n        if (free) {\n            this.#keyList[head] = undefined;\n            this.#valList[head] = undefined;\n            this.#free.push(head);\n        }\n        if (this.#size === 1) {\n            this.#head = this.#tail = 0;\n            this.#free.length = 0;\n        }\n        else {\n            this.#head = this.#next[head];\n        }\n        this.#keyMap.delete(k);\n        this.#size--;\n        return head;\n    }\n    /**\n     * Check if a key is in the cache, without updating the recency of use.\n     * Will return false if the item is stale, even though it is technically\n     * in the cache.\n     *\n     * Check if a key is in the cache, without updating the recency of\n     * use. Age is updated if {@link LRUCache.OptionsBase.updateAgeOnHas} is set\n     * to `true` in either the options or the constructor.\n     *\n     * Will return `false` if the item is stale, even though it is technically in\n     * the cache. The difference can be determined (if it matters) by using a\n     * `status` argument, and inspecting the `has` field.\n     *\n     * Will not update item age unless\n     * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n     */\n    has(k, hasOptions = {}) {\n        const { updateAgeOnHas = this.updateAgeOnHas, status } = hasOptions;\n        const index = this.#keyMap.get(k);\n        if (index !== undefined) {\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v) &&\n                v.__staleWhileFetching === undefined) {\n                return false;\n            }\n            if (!this.#isStale(index)) {\n                if (updateAgeOnHas) {\n                    this.#updateItemAge(index);\n                }\n                if (status) {\n                    status.has = 'hit';\n                    this.#statusTTL(status, index);\n                }\n                return true;\n            }\n            else if (status) {\n                status.has = 'stale';\n                this.#statusTTL(status, index);\n            }\n        }\n        else if (status) {\n            status.has = 'miss';\n        }\n        return false;\n    }\n    /**\n     * Like {@link LRUCache#get} but doesn't update recency or delete stale\n     * items.\n     *\n     * Returns `undefined` if the item is stale, unless\n     * {@link LRUCache.OptionsBase.allowStale} is set.\n     */\n    peek(k, peekOptions = {}) {\n        const { allowStale = this.allowStale } = peekOptions;\n        const index = this.#keyMap.get(k);\n        if (index === undefined ||\n            (!allowStale && this.#isStale(index))) {\n            return;\n        }\n        const v = this.#valList[index];\n        // either stale and allowed, or forcing a refresh of non-stale value\n        return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n    }\n    #backgroundFetch(k, index, options, context) {\n        const v = index === undefined ? undefined : this.#valList[index];\n        if (this.#isBackgroundFetch(v)) {\n            return v;\n        }\n        const ac = new AC();\n        const { signal } = options;\n        // when/if our AC signals, then stop listening to theirs.\n        signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n            signal: ac.signal,\n        });\n        const fetchOpts = {\n            signal: ac.signal,\n            options,\n            context,\n        };\n        const cb = (v, updateCache = false) => {\n            const { aborted } = ac.signal;\n            const ignoreAbort = options.ignoreFetchAbort && v !== undefined;\n            if (options.status) {\n                if (aborted && !updateCache) {\n                    options.status.fetchAborted = true;\n                    options.status.fetchError = ac.signal.reason;\n                    if (ignoreAbort)\n                        options.status.fetchAbortIgnored = true;\n                }\n                else {\n                    options.status.fetchResolved = true;\n                }\n            }\n            if (aborted && !ignoreAbort && !updateCache) {\n                return fetchFail(ac.signal.reason);\n            }\n            // either we didn't abort, and are still here, or we did, and ignored\n            const bf = p;\n            if (this.#valList[index] === p) {\n                if (v === undefined) {\n                    if (bf.__staleWhileFetching) {\n                        this.#valList[index] = bf.__staleWhileFetching;\n                    }\n                    else {\n                        this.#delete(k, 'fetch');\n                    }\n                }\n                else {\n                    if (options.status)\n                        options.status.fetchUpdated = true;\n                    this.set(k, v, fetchOpts.options);\n                }\n            }\n            return v;\n        };\n        const eb = (er) => {\n            if (options.status) {\n                options.status.fetchRejected = true;\n                options.status.fetchError = er;\n            }\n            return fetchFail(er);\n        };\n        const fetchFail = (er) => {\n            const { aborted } = ac.signal;\n            const allowStaleAborted = aborted && options.allowStaleOnFetchAbort;\n            const allowStale = allowStaleAborted || options.allowStaleOnFetchRejection;\n            const noDelete = allowStale || options.noDeleteOnFetchRejection;\n            const bf = p;\n            if (this.#valList[index] === p) {\n                // if we allow stale on fetch rejections, then we need to ensure that\n                // the stale value is not removed from the cache when the fetch fails.\n                const del = !noDelete || bf.__staleWhileFetching === undefined;\n                if (del) {\n                    this.#delete(k, 'fetch');\n                }\n                else if (!allowStaleAborted) {\n                    // still replace the *promise* with the stale value,\n                    // since we are done with the promise at this point.\n                    // leave it untouched if we're still waiting for an\n                    // aborted background fetch that hasn't yet returned.\n                    this.#valList[index] = bf.__staleWhileFetching;\n                }\n            }\n            if (allowStale) {\n                if (options.status && bf.__staleWhileFetching !== undefined) {\n                    options.status.returnedStale = true;\n                }\n                return bf.__staleWhileFetching;\n            }\n            else if (bf.__returned === bf) {\n                throw er;\n            }\n        };\n        const pcall = (res, rej) => {\n            const fmp = this.#fetchMethod?.(k, v, fetchOpts);\n            if (fmp && fmp instanceof Promise) {\n                fmp.then(v => res(v === undefined ? undefined : v), rej);\n            }\n            // ignored, we go until we finish, regardless.\n            // defer check until we are actually aborting,\n            // so fetchMethod can override.\n            ac.signal.addEventListener('abort', () => {\n                if (!options.ignoreFetchAbort ||\n                    options.allowStaleOnFetchAbort) {\n                    res(undefined);\n                    // when it eventually resolves, update the cache.\n                    if (options.allowStaleOnFetchAbort) {\n                        res = v => cb(v, true);\n                    }\n                }\n            });\n        };\n        if (options.status)\n            options.status.fetchDispatched = true;\n        const p = new Promise(pcall).then(cb, eb);\n        const bf = Object.assign(p, {\n            __abortController: ac,\n            __staleWhileFetching: v,\n            __returned: undefined,\n        });\n        if (index === undefined) {\n            // internal, don't expose status.\n            this.set(k, bf, { ...fetchOpts.options, status: undefined });\n            index = this.#keyMap.get(k);\n        }\n        else {\n            this.#valList[index] = bf;\n        }\n        return bf;\n    }\n    #isBackgroundFetch(p) {\n        if (!this.#hasFetchMethod)\n            return false;\n        const b = p;\n        return (!!b &&\n            b instanceof Promise &&\n            b.hasOwnProperty('__staleWhileFetching') &&\n            b.__abortController instanceof AC);\n    }\n    async fetch(k, fetchOptions = {}) {\n        const { \n        // get options\n        allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, \n        // set options\n        ttl = this.ttl, noDisposeOnSet = this.noDisposeOnSet, size = 0, sizeCalculation = this.sizeCalculation, noUpdateTTL = this.noUpdateTTL, \n        // fetch exclusive options\n        noDeleteOnFetchRejection = this.noDeleteOnFetchRejection, allowStaleOnFetchRejection = this.allowStaleOnFetchRejection, ignoreFetchAbort = this.ignoreFetchAbort, allowStaleOnFetchAbort = this.allowStaleOnFetchAbort, context, forceRefresh = false, status, signal, } = fetchOptions;\n        if (!this.#hasFetchMethod) {\n            if (status)\n                status.fetch = 'get';\n            return this.get(k, {\n                allowStale,\n                updateAgeOnGet,\n                noDeleteOnStaleGet,\n                status,\n            });\n        }\n        const options = {\n            allowStale,\n            updateAgeOnGet,\n            noDeleteOnStaleGet,\n            ttl,\n            noDisposeOnSet,\n            size,\n            sizeCalculation,\n            noUpdateTTL,\n            noDeleteOnFetchRejection,\n            allowStaleOnFetchRejection,\n            allowStaleOnFetchAbort,\n            ignoreFetchAbort,\n            status,\n            signal,\n        };\n        let index = this.#keyMap.get(k);\n        if (index === undefined) {\n            if (status)\n                status.fetch = 'miss';\n            const p = this.#backgroundFetch(k, index, options, context);\n            return (p.__returned = p);\n        }\n        else {\n            // in cache, maybe already fetching\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v)) {\n                const stale = allowStale && v.__staleWhileFetching !== undefined;\n                if (status) {\n                    status.fetch = 'inflight';\n                    if (stale)\n                        status.returnedStale = true;\n                }\n                return stale ? v.__staleWhileFetching : (v.__returned = v);\n            }\n            // if we force a refresh, that means do NOT serve the cached value,\n            // unless we are already in the process of refreshing the cache.\n            const isStale = this.#isStale(index);\n            if (!forceRefresh && !isStale) {\n                if (status)\n                    status.fetch = 'hit';\n                this.#moveToTail(index);\n                if (updateAgeOnGet) {\n                    this.#updateItemAge(index);\n                }\n                if (status)\n                    this.#statusTTL(status, index);\n                return v;\n            }\n            // ok, it is stale or a forced refresh, and not already fetching.\n            // refresh the cache.\n            const p = this.#backgroundFetch(k, index, options, context);\n            const hasStale = p.__staleWhileFetching !== undefined;\n            const staleVal = hasStale && allowStale;\n            if (status) {\n                status.fetch = isStale ? 'stale' : 'refresh';\n                if (staleVal && isStale)\n                    status.returnedStale = true;\n            }\n            return staleVal ? p.__staleWhileFetching : (p.__returned = p);\n        }\n    }\n    async forceFetch(k, fetchOptions = {}) {\n        const v = await this.fetch(k, fetchOptions);\n        if (v === undefined)\n            throw new Error('fetch() returned undefined');\n        return v;\n    }\n    memo(k, memoOptions = {}) {\n        const memoMethod = this.#memoMethod;\n        if (!memoMethod) {\n            throw new Error('no memoMethod provided to constructor');\n        }\n        const { context, forceRefresh, ...options } = memoOptions;\n        const v = this.get(k, options);\n        if (!forceRefresh && v !== undefined)\n            return v;\n        const vv = memoMethod(k, v, {\n            options,\n            context,\n        });\n        this.set(k, vv, options);\n        return vv;\n    }\n    /**\n     * Return a value from the cache. Will update the recency of the cache\n     * entry found.\n     *\n     * If the key is not found, get() will return `undefined`.\n     */\n    get(k, getOptions = {}) {\n        const { allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, status, } = getOptions;\n        const index = this.#keyMap.get(k);\n        if (index !== undefined) {\n            const value = this.#valList[index];\n            const fetching = this.#isBackgroundFetch(value);\n            if (status)\n                this.#statusTTL(status, index);\n            if (this.#isStale(index)) {\n                if (status)\n                    status.get = 'stale';\n                // delete only if not an in-flight background fetch\n                if (!fetching) {\n                    if (!noDeleteOnStaleGet) {\n                        this.#delete(k, 'expire');\n                    }\n                    if (status && allowStale)\n                        status.returnedStale = true;\n                    return allowStale ? value : undefined;\n                }\n                else {\n                    if (status &&\n                        allowStale &&\n                        value.__staleWhileFetching !== undefined) {\n                        status.returnedStale = true;\n                    }\n                    return allowStale ? value.__staleWhileFetching : undefined;\n                }\n            }\n            else {\n                if (status)\n                    status.get = 'hit';\n                // if we're currently fetching it, we don't actually have it yet\n                // it's not stale, which means this isn't a staleWhileRefetching.\n                // If it's not stale, and fetching, AND has a __staleWhileFetching\n                // value, then that means the user fetched with {forceRefresh:true},\n                // so it's safe to return that value.\n                if (fetching) {\n                    return value.__staleWhileFetching;\n                }\n                this.#moveToTail(index);\n                if (updateAgeOnGet) {\n                    this.#updateItemAge(index);\n                }\n                return value;\n            }\n        }\n        else if (status) {\n            status.get = 'miss';\n        }\n    }\n    #connect(p, n) {\n        this.#prev[n] = p;\n        this.#next[p] = n;\n    }\n    #moveToTail(index) {\n        // if tail already, nothing to do\n        // if head, move head to next[index]\n        // else\n        //   move next[prev[index]] to next[index] (head has no prev)\n        //   move prev[next[index]] to prev[index]\n        // prev[index] = tail\n        // next[tail] = index\n        // tail = index\n        if (index !== this.#tail) {\n            if (index === this.#head) {\n                this.#head = this.#next[index];\n            }\n            else {\n                this.#connect(this.#prev[index], this.#next[index]);\n            }\n            this.#connect(this.#tail, index);\n            this.#tail = index;\n        }\n    }\n    /**\n     * Deletes a key out of the cache.\n     *\n     * Returns true if the key was deleted, false otherwise.\n     */\n    delete(k) {\n        return this.#delete(k, 'delete');\n    }\n    #delete(k, reason) {\n        let deleted = false;\n        if (this.#size !== 0) {\n            const index = this.#keyMap.get(k);\n            if (index !== undefined) {\n                deleted = true;\n                if (this.#size === 1) {\n                    this.#clear(reason);\n                }\n                else {\n                    this.#removeItemSize(index);\n                    const v = this.#valList[index];\n                    if (this.#isBackgroundFetch(v)) {\n                        v.__abortController.abort(new Error('deleted'));\n                    }\n                    else if (this.#hasDispose || this.#hasDisposeAfter) {\n                        if (this.#hasDispose) {\n                            this.#dispose?.(v, k, reason);\n                        }\n                        if (this.#hasDisposeAfter) {\n                            this.#disposed?.push([v, k, reason]);\n                        }\n                    }\n                    this.#keyMap.delete(k);\n                    this.#keyList[index] = undefined;\n                    this.#valList[index] = undefined;\n                    if (index === this.#tail) {\n                        this.#tail = this.#prev[index];\n                    }\n                    else if (index === this.#head) {\n                        this.#head = this.#next[index];\n                    }\n                    else {\n                        const pi = this.#prev[index];\n                        this.#next[pi] = this.#next[index];\n                        const ni = this.#next[index];\n                        this.#prev[ni] = this.#prev[index];\n                    }\n                    this.#size--;\n                    this.#free.push(index);\n                }\n            }\n        }\n        if (this.#hasDisposeAfter && this.#disposed?.length) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n        return deleted;\n    }\n    /**\n     * Clear the cache entirely, throwing away all values.\n     */\n    clear() {\n        return this.#clear('delete');\n    }\n    #clear(reason) {\n        for (const index of this.#rindexes({ allowStale: true })) {\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v)) {\n                v.__abortController.abort(new Error('deleted'));\n            }\n            else {\n                const k = this.#keyList[index];\n                if (this.#hasDispose) {\n                    this.#dispose?.(v, k, reason);\n                }\n                if (this.#hasDisposeAfter) {\n                    this.#disposed?.push([v, k, reason]);\n                }\n            }\n        }\n        this.#keyMap.clear();\n        this.#valList.fill(undefined);\n        this.#keyList.fill(undefined);\n        if (this.#ttls && this.#starts) {\n            this.#ttls.fill(0);\n            this.#starts.fill(0);\n        }\n        if (this.#sizes) {\n            this.#sizes.fill(0);\n        }\n        this.#head = 0;\n        this.#tail = 0;\n        this.#free.length = 0;\n        this.#calculatedSize = 0;\n        this.#size = 0;\n        if (this.#hasDisposeAfter && this.#disposed) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n    }\n}\nexports.LRUCache = LRUCache;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertValidPattern = void 0;\nconst MAX_PATTERN_LENGTH = 1024 * 64;\nconst assertValidPattern = (pattern) => {\n    if (typeof pattern !== 'string') {\n        throw new TypeError('invalid pattern');\n    }\n    if (pattern.length > MAX_PATTERN_LENGTH) {\n        throw new TypeError('pattern is too long');\n    }\n};\nexports.assertValidPattern = assertValidPattern;\n//# sourceMappingURL=assert-valid-pattern.js.map","\"use strict\";\n// parse a single path portion\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AST = void 0;\nconst brace_expressions_js_1 = require(\"./brace-expressions.js\");\nconst unescape_js_1 = require(\"./unescape.js\");\nconst types = new Set(['!', '?', '+', '*', '@']);\nconst isExtglobType = (c) => types.has(c);\n// Patterns that get prepended to bind to the start of either the\n// entire string, or just a single path portion, to prevent dots\n// and/or traversal patterns, when needed.\n// Exts don't need the ^ or / bit, because the root binds that already.\nconst startNoTraversal = '(?!(?:^|/)\\\\.\\\\.?(?:$|/))';\nconst startNoDot = '(?!\\\\.)';\n// characters that indicate a start of pattern needs the \"no dots\" bit,\n// because a dot *might* be matched. ( is not in the list, because in\n// the case of a child extglob, it will handle the prevention itself.\nconst addPatternStart = new Set(['[', '.']);\n// cases where traversal is A-OK, no dot prevention needed\nconst justDots = new Set(['..', '.']);\nconst reSpecials = new Set('().*{}+?[]^$\\\\!');\nconst regExpEscape = (s) => s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n// any single thing other than /\nconst qmark = '[^/]';\n// * => any number of characters\nconst star = qmark + '*?';\n// use + when we need to ensure that *something* matches, because the * is\n// the only thing in the path portion.\nconst starNoEmpty = qmark + '+?';\n// remove the \\ chars that we added if we end up doing a nonmagic compare\n// const deslash = (s: string) => s.replace(/\\\\(.)/g, '$1')\nclass AST {\n    type;\n    #root;\n    #hasMagic;\n    #uflag = false;\n    #parts = [];\n    #parent;\n    #parentIndex;\n    #negs;\n    #filledNegs = false;\n    #options;\n    #toString;\n    // set to true if it's an extglob with no children\n    // (which really means one child of '')\n    #emptyExt = false;\n    constructor(type, parent, options = {}) {\n        this.type = type;\n        // extglobs are inherently magical\n        if (type)\n            this.#hasMagic = true;\n        this.#parent = parent;\n        this.#root = this.#parent ? this.#parent.#root : this;\n        this.#options = this.#root === this ? options : this.#root.#options;\n        this.#negs = this.#root === this ? [] : this.#root.#negs;\n        if (type === '!' && !this.#root.#filledNegs)\n            this.#negs.push(this);\n        this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0;\n    }\n    get hasMagic() {\n        /* c8 ignore start */\n        if (this.#hasMagic !== undefined)\n            return this.#hasMagic;\n        /* c8 ignore stop */\n        for (const p of this.#parts) {\n            if (typeof p === 'string')\n                continue;\n            if (p.type || p.hasMagic)\n                return (this.#hasMagic = true);\n        }\n        // note: will be undefined until we generate the regexp src and find out\n        return this.#hasMagic;\n    }\n    // reconstructs the pattern\n    toString() {\n        if (this.#toString !== undefined)\n            return this.#toString;\n        if (!this.type) {\n            return (this.#toString = this.#parts.map(p => String(p)).join(''));\n        }\n        else {\n            return (this.#toString =\n                this.type + '(' + this.#parts.map(p => String(p)).join('|') + ')');\n        }\n    }\n    #fillNegs() {\n        /* c8 ignore start */\n        if (this !== this.#root)\n            throw new Error('should only call on root');\n        if (this.#filledNegs)\n            return this;\n        /* c8 ignore stop */\n        // call toString() once to fill this out\n        this.toString();\n        this.#filledNegs = true;\n        let n;\n        while ((n = this.#negs.pop())) {\n            if (n.type !== '!')\n                continue;\n            // walk up the tree, appending everthing that comes AFTER parentIndex\n            let p = n;\n            let pp = p.#parent;\n            while (pp) {\n                for (let i = p.#parentIndex + 1; !pp.type && i < pp.#parts.length; i++) {\n                    for (const part of n.#parts) {\n                        /* c8 ignore start */\n                        if (typeof part === 'string') {\n                            throw new Error('string part in extglob AST??');\n                        }\n                        /* c8 ignore stop */\n                        part.copyIn(pp.#parts[i]);\n                    }\n                }\n                p = pp;\n                pp = p.#parent;\n            }\n        }\n        return this;\n    }\n    push(...parts) {\n        for (const p of parts) {\n            if (p === '')\n                continue;\n            /* c8 ignore start */\n            if (typeof p !== 'string' && !(p instanceof AST && p.#parent === this)) {\n                throw new Error('invalid part: ' + p);\n            }\n            /* c8 ignore stop */\n            this.#parts.push(p);\n        }\n    }\n    toJSON() {\n        const ret = this.type === null\n            ? this.#parts.slice().map(p => (typeof p === 'string' ? p : p.toJSON()))\n            : [this.type, ...this.#parts.map(p => p.toJSON())];\n        if (this.isStart() && !this.type)\n            ret.unshift([]);\n        if (this.isEnd() &&\n            (this === this.#root ||\n                (this.#root.#filledNegs && this.#parent?.type === '!'))) {\n            ret.push({});\n        }\n        return ret;\n    }\n    isStart() {\n        if (this.#root === this)\n            return true;\n        // if (this.type) return !!this.#parent?.isStart()\n        if (!this.#parent?.isStart())\n            return false;\n        if (this.#parentIndex === 0)\n            return true;\n        // if everything AHEAD of this is a negation, then it's still the \"start\"\n        const p = this.#parent;\n        for (let i = 0; i < this.#parentIndex; i++) {\n            const pp = p.#parts[i];\n            if (!(pp instanceof AST && pp.type === '!')) {\n                return false;\n            }\n        }\n        return true;\n    }\n    isEnd() {\n        if (this.#root === this)\n            return true;\n        if (this.#parent?.type === '!')\n            return true;\n        if (!this.#parent?.isEnd())\n            return false;\n        if (!this.type)\n            return this.#parent?.isEnd();\n        // if not root, it'll always have a parent\n        /* c8 ignore start */\n        const pl = this.#parent ? this.#parent.#parts.length : 0;\n        /* c8 ignore stop */\n        return this.#parentIndex === pl - 1;\n    }\n    copyIn(part) {\n        if (typeof part === 'string')\n            this.push(part);\n        else\n            this.push(part.clone(this));\n    }\n    clone(parent) {\n        const c = new AST(this.type, parent);\n        for (const p of this.#parts) {\n            c.copyIn(p);\n        }\n        return c;\n    }\n    static #parseAST(str, ast, pos, opt) {\n        let escaping = false;\n        let inBrace = false;\n        let braceStart = -1;\n        let braceNeg = false;\n        if (ast.type === null) {\n            // outside of a extglob, append until we find a start\n            let i = pos;\n            let acc = '';\n            while (i < str.length) {\n                const c = str.charAt(i++);\n                // still accumulate escapes at this point, but we do ignore\n                // starts that are escaped\n                if (escaping || c === '\\\\') {\n                    escaping = !escaping;\n                    acc += c;\n                    continue;\n                }\n                if (inBrace) {\n                    if (i === braceStart + 1) {\n                        if (c === '^' || c === '!') {\n                            braceNeg = true;\n                        }\n                    }\n                    else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n                        inBrace = false;\n                    }\n                    acc += c;\n                    continue;\n                }\n                else if (c === '[') {\n                    inBrace = true;\n                    braceStart = i;\n                    braceNeg = false;\n                    acc += c;\n                    continue;\n                }\n                if (!opt.noext && isExtglobType(c) && str.charAt(i) === '(') {\n                    ast.push(acc);\n                    acc = '';\n                    const ext = new AST(c, ast);\n                    i = AST.#parseAST(str, ext, i, opt);\n                    ast.push(ext);\n                    continue;\n                }\n                acc += c;\n            }\n            ast.push(acc);\n            return i;\n        }\n        // some kind of extglob, pos is at the (\n        // find the next | or )\n        let i = pos + 1;\n        let part = new AST(null, ast);\n        const parts = [];\n        let acc = '';\n        while (i < str.length) {\n            const c = str.charAt(i++);\n            // still accumulate escapes at this point, but we do ignore\n            // starts that are escaped\n            if (escaping || c === '\\\\') {\n                escaping = !escaping;\n                acc += c;\n                continue;\n            }\n            if (inBrace) {\n                if (i === braceStart + 1) {\n                    if (c === '^' || c === '!') {\n                        braceNeg = true;\n                    }\n                }\n                else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n                    inBrace = false;\n                }\n                acc += c;\n                continue;\n            }\n            else if (c === '[') {\n                inBrace = true;\n                braceStart = i;\n                braceNeg = false;\n                acc += c;\n                continue;\n            }\n            if (isExtglobType(c) && str.charAt(i) === '(') {\n                part.push(acc);\n                acc = '';\n                const ext = new AST(c, part);\n                part.push(ext);\n                i = AST.#parseAST(str, ext, i, opt);\n                continue;\n            }\n            if (c === '|') {\n                part.push(acc);\n                acc = '';\n                parts.push(part);\n                part = new AST(null, ast);\n                continue;\n            }\n            if (c === ')') {\n                if (acc === '' && ast.#parts.length === 0) {\n                    ast.#emptyExt = true;\n                }\n                part.push(acc);\n                acc = '';\n                ast.push(...parts, part);\n                return i;\n            }\n            acc += c;\n        }\n        // unfinished extglob\n        // if we got here, it was a malformed extglob! not an extglob, but\n        // maybe something else in there.\n        ast.type = null;\n        ast.#hasMagic = undefined;\n        ast.#parts = [str.substring(pos - 1)];\n        return i;\n    }\n    static fromGlob(pattern, options = {}) {\n        const ast = new AST(null, undefined, options);\n        AST.#parseAST(pattern, ast, 0, options);\n        return ast;\n    }\n    // returns the regular expression if there's magic, or the unescaped\n    // string if not.\n    toMMPattern() {\n        // should only be called on root\n        /* c8 ignore start */\n        if (this !== this.#root)\n            return this.#root.toMMPattern();\n        /* c8 ignore stop */\n        const glob = this.toString();\n        const [re, body, hasMagic, uflag] = this.toRegExpSource();\n        // if we're in nocase mode, and not nocaseMagicOnly, then we do\n        // still need a regular expression if we have to case-insensitively\n        // match capital/lowercase characters.\n        const anyMagic = hasMagic ||\n            this.#hasMagic ||\n            (this.#options.nocase &&\n                !this.#options.nocaseMagicOnly &&\n                glob.toUpperCase() !== glob.toLowerCase());\n        if (!anyMagic) {\n            return body;\n        }\n        const flags = (this.#options.nocase ? 'i' : '') + (uflag ? 'u' : '');\n        return Object.assign(new RegExp(`^${re}$`, flags), {\n            _src: re,\n            _glob: glob,\n        });\n    }\n    get options() {\n        return this.#options;\n    }\n    // returns the string match, the regexp source, whether there's magic\n    // in the regexp (so a regular expression is required) and whether or\n    // not the uflag is needed for the regular expression (for posix classes)\n    // TODO: instead of injecting the start/end at this point, just return\n    // the BODY of the regexp, along with the start/end portions suitable\n    // for binding the start/end in either a joined full-path makeRe context\n    // (where we bind to (^|/), or a standalone matchPart context (where\n    // we bind to ^, and not /).  Otherwise slashes get duped!\n    //\n    // In part-matching mode, the start is:\n    // - if not isStart: nothing\n    // - if traversal possible, but not allowed: ^(?!\\.\\.?$)\n    // - if dots allowed or not possible: ^\n    // - if dots possible and not allowed: ^(?!\\.)\n    // end is:\n    // - if not isEnd(): nothing\n    // - else: $\n    //\n    // In full-path matching mode, we put the slash at the START of the\n    // pattern, so start is:\n    // - if first pattern: same as part-matching mode\n    // - if not isStart(): nothing\n    // - if traversal possible, but not allowed: /(?!\\.\\.?(?:$|/))\n    // - if dots allowed or not possible: /\n    // - if dots possible and not allowed: /(?!\\.)\n    // end is:\n    // - if last pattern, same as part-matching mode\n    // - else nothing\n    //\n    // Always put the (?:$|/) on negated tails, though, because that has to be\n    // there to bind the end of the negated pattern portion, and it's easier to\n    // just stick it in now rather than try to inject it later in the middle of\n    // the pattern.\n    //\n    // We can just always return the same end, and leave it up to the caller\n    // to know whether it's going to be used joined or in parts.\n    // And, if the start is adjusted slightly, can do the same there:\n    // - if not isStart: nothing\n    // - if traversal possible, but not allowed: (?:/|^)(?!\\.\\.?$)\n    // - if dots allowed or not possible: (?:/|^)\n    // - if dots possible and not allowed: (?:/|^)(?!\\.)\n    //\n    // But it's better to have a simpler binding without a conditional, for\n    // performance, so probably better to return both start options.\n    //\n    // Then the caller just ignores the end if it's not the first pattern,\n    // and the start always gets applied.\n    //\n    // But that's always going to be $ if it's the ending pattern, or nothing,\n    // so the caller can just attach $ at the end of the pattern when building.\n    //\n    // So the todo is:\n    // - better detect what kind of start is needed\n    // - return both flavors of starting pattern\n    // - attach $ at the end of the pattern when creating the actual RegExp\n    //\n    // Ah, but wait, no, that all only applies to the root when the first pattern\n    // is not an extglob. If the first pattern IS an extglob, then we need all\n    // that dot prevention biz to live in the extglob portions, because eg\n    // +(*|.x*) can match .xy but not .yx.\n    //\n    // So, return the two flavors if it's #root and the first child is not an\n    // AST, otherwise leave it to the child AST to handle it, and there,\n    // use the (?:^|/) style of start binding.\n    //\n    // Even simplified further:\n    // - Since the start for a join is eg /(?!\\.) and the start for a part\n    // is ^(?!\\.), we can just prepend (?!\\.) to the pattern (either root\n    // or start or whatever) and prepend ^ or / at the Regexp construction.\n    toRegExpSource(allowDot) {\n        const dot = allowDot ?? !!this.#options.dot;\n        if (this.#root === this)\n            this.#fillNegs();\n        if (!this.type) {\n            const noEmpty = this.isStart() && this.isEnd();\n            const src = this.#parts\n                .map(p => {\n                const [re, _, hasMagic, uflag] = typeof p === 'string'\n                    ? AST.#parseGlob(p, this.#hasMagic, noEmpty)\n                    : p.toRegExpSource(allowDot);\n                this.#hasMagic = this.#hasMagic || hasMagic;\n                this.#uflag = this.#uflag || uflag;\n                return re;\n            })\n                .join('');\n            let start = '';\n            if (this.isStart()) {\n                if (typeof this.#parts[0] === 'string') {\n                    // this is the string that will match the start of the pattern,\n                    // so we need to protect against dots and such.\n                    // '.' and '..' cannot match unless the pattern is that exactly,\n                    // even if it starts with . or dot:true is set.\n                    const dotTravAllowed = this.#parts.length === 1 && justDots.has(this.#parts[0]);\n                    if (!dotTravAllowed) {\n                        const aps = addPatternStart;\n                        // check if we have a possibility of matching . or ..,\n                        // and prevent that.\n                        const needNoTrav = \n                        // dots are allowed, and the pattern starts with [ or .\n                        (dot && aps.has(src.charAt(0))) ||\n                            // the pattern starts with \\., and then [ or .\n                            (src.startsWith('\\\\.') && aps.has(src.charAt(2))) ||\n                            // the pattern starts with \\.\\., and then [ or .\n                            (src.startsWith('\\\\.\\\\.') && aps.has(src.charAt(4)));\n                        // no need to prevent dots if it can't match a dot, or if a\n                        // sub-pattern will be preventing it anyway.\n                        const needNoDot = !dot && !allowDot && aps.has(src.charAt(0));\n                        start = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : '';\n                    }\n                }\n            }\n            // append the \"end of path portion\" pattern to negation tails\n            let end = '';\n            if (this.isEnd() &&\n                this.#root.#filledNegs &&\n                this.#parent?.type === '!') {\n                end = '(?:$|\\\\/)';\n            }\n            const final = start + src + end;\n            return [\n                final,\n                (0, unescape_js_1.unescape)(src),\n                (this.#hasMagic = !!this.#hasMagic),\n                this.#uflag,\n            ];\n        }\n        // We need to calculate the body *twice* if it's a repeat pattern\n        // at the start, once in nodot mode, then again in dot mode, so a\n        // pattern like *(?) can match 'x.y'\n        const repeated = this.type === '*' || this.type === '+';\n        // some kind of extglob\n        const start = this.type === '!' ? '(?:(?!(?:' : '(?:';\n        let body = this.#partsToRegExp(dot);\n        if (this.isStart() && this.isEnd() && !body && this.type !== '!') {\n            // invalid extglob, has to at least be *something* present, if it's\n            // the entire path portion.\n            const s = this.toString();\n            this.#parts = [s];\n            this.type = null;\n            this.#hasMagic = undefined;\n            return [s, (0, unescape_js_1.unescape)(this.toString()), false, false];\n        }\n        // XXX abstract out this map method\n        let bodyDotAllowed = !repeated || allowDot || dot || !startNoDot\n            ? ''\n            : this.#partsToRegExp(true);\n        if (bodyDotAllowed === body) {\n            bodyDotAllowed = '';\n        }\n        if (bodyDotAllowed) {\n            body = `(?:${body})(?:${bodyDotAllowed})*?`;\n        }\n        // an empty !() is exactly equivalent to a starNoEmpty\n        let final = '';\n        if (this.type === '!' && this.#emptyExt) {\n            final = (this.isStart() && !dot ? startNoDot : '') + starNoEmpty;\n        }\n        else {\n            const close = this.type === '!'\n                ? // !() must match something,but !(x) can match ''\n                    '))' +\n                        (this.isStart() && !dot && !allowDot ? startNoDot : '') +\n                        star +\n                        ')'\n                : this.type === '@'\n                    ? ')'\n                    : this.type === '?'\n                        ? ')?'\n                        : this.type === '+' && bodyDotAllowed\n                            ? ')'\n                            : this.type === '*' && bodyDotAllowed\n                                ? `)?`\n                                : `)${this.type}`;\n            final = start + body + close;\n        }\n        return [\n            final,\n            (0, unescape_js_1.unescape)(body),\n            (this.#hasMagic = !!this.#hasMagic),\n            this.#uflag,\n        ];\n    }\n    #partsToRegExp(dot) {\n        return this.#parts\n            .map(p => {\n            // extglob ASTs should only contain parent ASTs\n            /* c8 ignore start */\n            if (typeof p === 'string') {\n                throw new Error('string type in extglob ast??');\n            }\n            /* c8 ignore stop */\n            // can ignore hasMagic, because extglobs are already always magic\n            const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot);\n            this.#uflag = this.#uflag || uflag;\n            return re;\n        })\n            .filter(p => !(this.isStart() && this.isEnd()) || !!p)\n            .join('|');\n    }\n    static #parseGlob(glob, hasMagic, noEmpty = false) {\n        let escaping = false;\n        let re = '';\n        let uflag = false;\n        for (let i = 0; i < glob.length; i++) {\n            const c = glob.charAt(i);\n            if (escaping) {\n                escaping = false;\n                re += (reSpecials.has(c) ? '\\\\' : '') + c;\n                continue;\n            }\n            if (c === '\\\\') {\n                if (i === glob.length - 1) {\n                    re += '\\\\\\\\';\n                }\n                else {\n                    escaping = true;\n                }\n                continue;\n            }\n            if (c === '[') {\n                const [src, needUflag, consumed, magic] = (0, brace_expressions_js_1.parseClass)(glob, i);\n                if (consumed) {\n                    re += src;\n                    uflag = uflag || needUflag;\n                    i += consumed - 1;\n                    hasMagic = hasMagic || magic;\n                    continue;\n                }\n            }\n            if (c === '*') {\n                if (noEmpty && glob === '*')\n                    re += starNoEmpty;\n                else\n                    re += star;\n                hasMagic = true;\n                continue;\n            }\n            if (c === '?') {\n                re += qmark;\n                hasMagic = true;\n                continue;\n            }\n            re += regExpEscape(c);\n        }\n        return [re, (0, unescape_js_1.unescape)(glob), !!hasMagic, uflag];\n    }\n}\nexports.AST = AST;\n//# sourceMappingURL=ast.js.map","\"use strict\";\n// translate the various posix character classes into unicode properties\n// this works across all unicode locales\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseClass = void 0;\n// { <posix class>: [<translation>, /u flag required, negated]\nconst posixClasses = {\n    '[:alnum:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}', true],\n    '[:alpha:]': ['\\\\p{L}\\\\p{Nl}', true],\n    '[:ascii:]': ['\\\\x' + '00-\\\\x' + '7f', false],\n    '[:blank:]': ['\\\\p{Zs}\\\\t', true],\n    '[:cntrl:]': ['\\\\p{Cc}', true],\n    '[:digit:]': ['\\\\p{Nd}', true],\n    '[:graph:]': ['\\\\p{Z}\\\\p{C}', true, true],\n    '[:lower:]': ['\\\\p{Ll}', true],\n    '[:print:]': ['\\\\p{C}', true],\n    '[:punct:]': ['\\\\p{P}', true],\n    '[:space:]': ['\\\\p{Z}\\\\t\\\\r\\\\n\\\\v\\\\f', true],\n    '[:upper:]': ['\\\\p{Lu}', true],\n    '[:word:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}\\\\p{Pc}', true],\n    '[:xdigit:]': ['A-Fa-f0-9', false],\n};\n// only need to escape a few things inside of brace expressions\n// escapes: [ \\ ] -\nconst braceEscape = (s) => s.replace(/[[\\]\\\\-]/g, '\\\\$&');\n// escape all regexp magic characters\nconst regexpEscape = (s) => s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n// everything has already been escaped, we just have to join\nconst rangesToString = (ranges) => ranges.join('');\n// takes a glob string at a posix brace expression, and returns\n// an equivalent regular expression source, and boolean indicating\n// whether the /u flag needs to be applied, and the number of chars\n// consumed to parse the character class.\n// This also removes out of order ranges, and returns ($.) if the\n// entire class just no good.\nconst parseClass = (glob, position) => {\n    const pos = position;\n    /* c8 ignore start */\n    if (glob.charAt(pos) !== '[') {\n        throw new Error('not in a brace expression');\n    }\n    /* c8 ignore stop */\n    const ranges = [];\n    const negs = [];\n    let i = pos + 1;\n    let sawStart = false;\n    let uflag = false;\n    let escaping = false;\n    let negate = false;\n    let endPos = pos;\n    let rangeStart = '';\n    WHILE: while (i < glob.length) {\n        const c = glob.charAt(i);\n        if ((c === '!' || c === '^') && i === pos + 1) {\n            negate = true;\n            i++;\n            continue;\n        }\n        if (c === ']' && sawStart && !escaping) {\n            endPos = i + 1;\n            break;\n        }\n        sawStart = true;\n        if (c === '\\\\') {\n            if (!escaping) {\n                escaping = true;\n                i++;\n                continue;\n            }\n            // escaped \\ char, fall through and treat like normal char\n        }\n        if (c === '[' && !escaping) {\n            // either a posix class, a collation equivalent, or just a [\n            for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {\n                if (glob.startsWith(cls, i)) {\n                    // invalid, [a-[] is fine, but not [a-[:alpha]]\n                    if (rangeStart) {\n                        return ['$.', false, glob.length - pos, true];\n                    }\n                    i += cls.length;\n                    if (neg)\n                        negs.push(unip);\n                    else\n                        ranges.push(unip);\n                    uflag = uflag || u;\n                    continue WHILE;\n                }\n            }\n        }\n        // now it's just a normal character, effectively\n        escaping = false;\n        if (rangeStart) {\n            // throw this range away if it's not valid, but others\n            // can still match.\n            if (c > rangeStart) {\n                ranges.push(braceEscape(rangeStart) + '-' + braceEscape(c));\n            }\n            else if (c === rangeStart) {\n                ranges.push(braceEscape(c));\n            }\n            rangeStart = '';\n            i++;\n            continue;\n        }\n        // now might be the start of a range.\n        // can be either c-d or c-] or c<more...>] or c] at this point\n        if (glob.startsWith('-]', i + 1)) {\n            ranges.push(braceEscape(c + '-'));\n            i += 2;\n            continue;\n        }\n        if (glob.startsWith('-', i + 1)) {\n            rangeStart = c;\n            i += 2;\n            continue;\n        }\n        // not the start of a range, just a single character\n        ranges.push(braceEscape(c));\n        i++;\n    }\n    if (endPos < i) {\n        // didn't see the end of the class, not a valid class,\n        // but might still be valid as a literal match.\n        return ['', false, 0, false];\n    }\n    // if we got no ranges and no negates, then we have a range that\n    // cannot possibly match anything, and that poisons the whole glob\n    if (!ranges.length && !negs.length) {\n        return ['$.', false, glob.length - pos, true];\n    }\n    // if we got one positive range, and it's a single character, then that's\n    // not actually a magic pattern, it's just that one literal character.\n    // we should not treat that as \"magic\", we should just return the literal\n    // character. [_] is a perfectly valid way to escape glob magic chars.\n    if (negs.length === 0 &&\n        ranges.length === 1 &&\n        /^\\\\?.$/.test(ranges[0]) &&\n        !negate) {\n        const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0];\n        return [regexpEscape(r), false, endPos - pos, false];\n    }\n    const sranges = '[' + (negate ? '^' : '') + rangesToString(ranges) + ']';\n    const snegs = '[' + (negate ? '' : '^') + rangesToString(negs) + ']';\n    const comb = ranges.length && negs.length\n        ? '(' + sranges + '|' + snegs + ')'\n        : ranges.length\n            ? sranges\n            : snegs;\n    return [comb, uflag, endPos - pos, true];\n};\nexports.parseClass = parseClass;\n//# sourceMappingURL=brace-expressions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escape = void 0;\n/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */\nconst escape = (s, { windowsPathsNoEscape = false, } = {}) => {\n    // don't need to escape +@! because we escape the parens\n    // that make those magic, and escaping ! as [!] isn't valid,\n    // because [!]] is a valid glob class meaning not ']'.\n    return windowsPathsNoEscape\n        ? s.replace(/[?*()[\\]]/g, '[$&]')\n        : s.replace(/[?*()[\\]\\\\]/g, '\\\\$&');\n};\nexports.escape = escape;\n//# sourceMappingURL=escape.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unescape = exports.escape = exports.AST = exports.Minimatch = exports.match = exports.makeRe = exports.braceExpand = exports.defaults = exports.filter = exports.GLOBSTAR = exports.sep = exports.minimatch = void 0;\nconst brace_expansion_1 = __importDefault(require(\"brace-expansion\"));\nconst assert_valid_pattern_js_1 = require(\"./assert-valid-pattern.js\");\nconst ast_js_1 = require(\"./ast.js\");\nconst escape_js_1 = require(\"./escape.js\");\nconst unescape_js_1 = require(\"./unescape.js\");\nconst minimatch = (p, pattern, options = {}) => {\n    (0, assert_valid_pattern_js_1.assertValidPattern)(pattern);\n    // shortcut: comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === '#') {\n        return false;\n    }\n    return new Minimatch(pattern, options).match(p);\n};\nexports.minimatch = minimatch;\n// Optimized checking for the most common glob patterns.\nconst starDotExtRE = /^\\*+([^+@!?\\*\\[\\(]*)$/;\nconst starDotExtTest = (ext) => (f) => !f.startsWith('.') && f.endsWith(ext);\nconst starDotExtTestDot = (ext) => (f) => f.endsWith(ext);\nconst starDotExtTestNocase = (ext) => {\n    ext = ext.toLowerCase();\n    return (f) => !f.startsWith('.') && f.toLowerCase().endsWith(ext);\n};\nconst starDotExtTestNocaseDot = (ext) => {\n    ext = ext.toLowerCase();\n    return (f) => f.toLowerCase().endsWith(ext);\n};\nconst starDotStarRE = /^\\*+\\.\\*+$/;\nconst starDotStarTest = (f) => !f.startsWith('.') && f.includes('.');\nconst starDotStarTestDot = (f) => f !== '.' && f !== '..' && f.includes('.');\nconst dotStarRE = /^\\.\\*+$/;\nconst dotStarTest = (f) => f !== '.' && f !== '..' && f.startsWith('.');\nconst starRE = /^\\*+$/;\nconst starTest = (f) => f.length !== 0 && !f.startsWith('.');\nconst starTestDot = (f) => f.length !== 0 && f !== '.' && f !== '..';\nconst qmarksRE = /^\\?+([^+@!?\\*\\[\\(]*)?$/;\nconst qmarksTestNocase = ([$0, ext = '']) => {\n    const noext = qmarksTestNoExt([$0]);\n    if (!ext)\n        return noext;\n    ext = ext.toLowerCase();\n    return (f) => noext(f) && f.toLowerCase().endsWith(ext);\n};\nconst qmarksTestNocaseDot = ([$0, ext = '']) => {\n    const noext = qmarksTestNoExtDot([$0]);\n    if (!ext)\n        return noext;\n    ext = ext.toLowerCase();\n    return (f) => noext(f) && f.toLowerCase().endsWith(ext);\n};\nconst qmarksTestDot = ([$0, ext = '']) => {\n    const noext = qmarksTestNoExtDot([$0]);\n    return !ext ? noext : (f) => noext(f) && f.endsWith(ext);\n};\nconst qmarksTest = ([$0, ext = '']) => {\n    const noext = qmarksTestNoExt([$0]);\n    return !ext ? noext : (f) => noext(f) && f.endsWith(ext);\n};\nconst qmarksTestNoExt = ([$0]) => {\n    const len = $0.length;\n    return (f) => f.length === len && !f.startsWith('.');\n};\nconst qmarksTestNoExtDot = ([$0]) => {\n    const len = $0.length;\n    return (f) => f.length === len && f !== '.' && f !== '..';\n};\n/* c8 ignore start */\nconst defaultPlatform = (typeof process === 'object' && process\n    ? (typeof process.env === 'object' &&\n        process.env &&\n        process.env.__MINIMATCH_TESTING_PLATFORM__) ||\n        process.platform\n    : 'posix');\nconst path = {\n    win32: { sep: '\\\\' },\n    posix: { sep: '/' },\n};\n/* c8 ignore stop */\nexports.sep = defaultPlatform === 'win32' ? path.win32.sep : path.posix.sep;\nexports.minimatch.sep = exports.sep;\nexports.GLOBSTAR = Symbol('globstar **');\nexports.minimatch.GLOBSTAR = exports.GLOBSTAR;\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]';\n// * => any number of characters\nconst star = qmark + '*?';\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?';\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\/|^)\\\\.).)*?';\nconst filter = (pattern, options = {}) => (p) => (0, exports.minimatch)(p, pattern, options);\nexports.filter = filter;\nexports.minimatch.filter = exports.filter;\nconst ext = (a, b = {}) => Object.assign({}, a, b);\nconst defaults = (def) => {\n    if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n        return exports.minimatch;\n    }\n    const orig = exports.minimatch;\n    const m = (p, pattern, options = {}) => orig(p, pattern, ext(def, options));\n    return Object.assign(m, {\n        Minimatch: class Minimatch extends orig.Minimatch {\n            constructor(pattern, options = {}) {\n                super(pattern, ext(def, options));\n            }\n            static defaults(options) {\n                return orig.defaults(ext(def, options)).Minimatch;\n            }\n        },\n        AST: class AST extends orig.AST {\n            /* c8 ignore start */\n            constructor(type, parent, options = {}) {\n                super(type, parent, ext(def, options));\n            }\n            /* c8 ignore stop */\n            static fromGlob(pattern, options = {}) {\n                return orig.AST.fromGlob(pattern, ext(def, options));\n            }\n        },\n        unescape: (s, options = {}) => orig.unescape(s, ext(def, options)),\n        escape: (s, options = {}) => orig.escape(s, ext(def, options)),\n        filter: (pattern, options = {}) => orig.filter(pattern, ext(def, options)),\n        defaults: (options) => orig.defaults(ext(def, options)),\n        makeRe: (pattern, options = {}) => orig.makeRe(pattern, ext(def, options)),\n        braceExpand: (pattern, options = {}) => orig.braceExpand(pattern, ext(def, options)),\n        match: (list, pattern, options = {}) => orig.match(list, pattern, ext(def, options)),\n        sep: orig.sep,\n        GLOBSTAR: exports.GLOBSTAR,\n    });\n};\nexports.defaults = defaults;\nexports.minimatch.defaults = exports.defaults;\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nconst braceExpand = (pattern, options = {}) => {\n    (0, assert_valid_pattern_js_1.assertValidPattern)(pattern);\n    // Thanks to Yeting Li <https://github.com/yetingli> for\n    // improving this regexp to avoid a ReDOS vulnerability.\n    if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n        // shortcut. no need to expand.\n        return [pattern];\n    }\n    return (0, brace_expansion_1.default)(pattern);\n};\nexports.braceExpand = braceExpand;\nexports.minimatch.braceExpand = exports.braceExpand;\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nconst makeRe = (pattern, options = {}) => new Minimatch(pattern, options).makeRe();\nexports.makeRe = makeRe;\nexports.minimatch.makeRe = exports.makeRe;\nconst match = (list, pattern, options = {}) => {\n    const mm = new Minimatch(pattern, options);\n    list = list.filter(f => mm.match(f));\n    if (mm.options.nonull && !list.length) {\n        list.push(pattern);\n    }\n    return list;\n};\nexports.match = match;\nexports.minimatch.match = exports.match;\n// replace stuff like \\* with *\nconst globMagic = /[?*]|[+@!]\\(.*?\\)|\\[|\\]/;\nconst regExpEscape = (s) => s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\nclass Minimatch {\n    options;\n    set;\n    pattern;\n    windowsPathsNoEscape;\n    nonegate;\n    negate;\n    comment;\n    empty;\n    preserveMultipleSlashes;\n    partial;\n    globSet;\n    globParts;\n    nocase;\n    isWindows;\n    platform;\n    windowsNoMagicRoot;\n    regexp;\n    constructor(pattern, options = {}) {\n        (0, assert_valid_pattern_js_1.assertValidPattern)(pattern);\n        options = options || {};\n        this.options = options;\n        this.pattern = pattern;\n        this.platform = options.platform || defaultPlatform;\n        this.isWindows = this.platform === 'win32';\n        this.windowsPathsNoEscape =\n            !!options.windowsPathsNoEscape || options.allowWindowsEscape === false;\n        if (this.windowsPathsNoEscape) {\n            this.pattern = this.pattern.replace(/\\\\/g, '/');\n        }\n        this.preserveMultipleSlashes = !!options.preserveMultipleSlashes;\n        this.regexp = null;\n        this.negate = false;\n        this.nonegate = !!options.nonegate;\n        this.comment = false;\n        this.empty = false;\n        this.partial = !!options.partial;\n        this.nocase = !!this.options.nocase;\n        this.windowsNoMagicRoot =\n            options.windowsNoMagicRoot !== undefined\n                ? options.windowsNoMagicRoot\n                : !!(this.isWindows && this.nocase);\n        this.globSet = [];\n        this.globParts = [];\n        this.set = [];\n        // make the set of regexps etc.\n        this.make();\n    }\n    hasMagic() {\n        if (this.options.magicalBraces && this.set.length > 1) {\n            return true;\n        }\n        for (const pattern of this.set) {\n            for (const part of pattern) {\n                if (typeof part !== 'string')\n                    return true;\n            }\n        }\n        return false;\n    }\n    debug(..._) { }\n    make() {\n        const pattern = this.pattern;\n        const options = this.options;\n        // empty patterns and comments match nothing.\n        if (!options.nocomment && pattern.charAt(0) === '#') {\n            this.comment = true;\n            return;\n        }\n        if (!pattern) {\n            this.empty = true;\n            return;\n        }\n        // step 1: figure out negation, etc.\n        this.parseNegate();\n        // step 2: expand braces\n        this.globSet = [...new Set(this.braceExpand())];\n        if (options.debug) {\n            this.debug = (...args) => console.error(...args);\n        }\n        this.debug(this.pattern, this.globSet);\n        // step 3: now we have a set, so turn each one into a series of\n        // path-portion matching patterns.\n        // These will be regexps, except in the case of \"**\", which is\n        // set to the GLOBSTAR object for globstar behavior,\n        // and will not contain any / characters\n        //\n        // First, we preprocess to make the glob pattern sets a bit simpler\n        // and deduped.  There are some perf-killing patterns that can cause\n        // problems with a glob walk, but we can simplify them down a bit.\n        const rawGlobParts = this.globSet.map(s => this.slashSplit(s));\n        this.globParts = this.preprocess(rawGlobParts);\n        this.debug(this.pattern, this.globParts);\n        // glob --> regexps\n        let set = this.globParts.map((s, _, __) => {\n            if (this.isWindows && this.windowsNoMagicRoot) {\n                // check if it's a drive or unc path.\n                const isUNC = s[0] === '' &&\n                    s[1] === '' &&\n                    (s[2] === '?' || !globMagic.test(s[2])) &&\n                    !globMagic.test(s[3]);\n                const isDrive = /^[a-z]:/i.test(s[0]);\n                if (isUNC) {\n                    return [...s.slice(0, 4), ...s.slice(4).map(ss => this.parse(ss))];\n                }\n                else if (isDrive) {\n                    return [s[0], ...s.slice(1).map(ss => this.parse(ss))];\n                }\n            }\n            return s.map(ss => this.parse(ss));\n        });\n        this.debug(this.pattern, set);\n        // filter out everything that didn't compile properly.\n        this.set = set.filter(s => s.indexOf(false) === -1);\n        // do not treat the ? in UNC paths as magic\n        if (this.isWindows) {\n            for (let i = 0; i < this.set.length; i++) {\n                const p = this.set[i];\n                if (p[0] === '' &&\n                    p[1] === '' &&\n                    this.globParts[i][2] === '?' &&\n                    typeof p[3] === 'string' &&\n                    /^[a-z]:$/i.test(p[3])) {\n                    p[2] = '?';\n                }\n            }\n        }\n        this.debug(this.pattern, this.set);\n    }\n    // various transforms to equivalent pattern sets that are\n    // faster to process in a filesystem walk.  The goal is to\n    // eliminate what we can, and push all ** patterns as far\n    // to the right as possible, even if it increases the number\n    // of patterns that we have to process.\n    preprocess(globParts) {\n        // if we're not in globstar mode, then turn all ** into *\n        if (this.options.noglobstar) {\n            for (let i = 0; i < globParts.length; i++) {\n                for (let j = 0; j < globParts[i].length; j++) {\n                    if (globParts[i][j] === '**') {\n                        globParts[i][j] = '*';\n                    }\n                }\n            }\n        }\n        const { optimizationLevel = 1 } = this.options;\n        if (optimizationLevel >= 2) {\n            // aggressive optimization for the purpose of fs walking\n            globParts = this.firstPhasePreProcess(globParts);\n            globParts = this.secondPhasePreProcess(globParts);\n        }\n        else if (optimizationLevel >= 1) {\n            // just basic optimizations to remove some .. parts\n            globParts = this.levelOneOptimize(globParts);\n        }\n        else {\n            // just collapse multiple ** portions into one\n            globParts = this.adjascentGlobstarOptimize(globParts);\n        }\n        return globParts;\n    }\n    // just get rid of adjascent ** portions\n    adjascentGlobstarOptimize(globParts) {\n        return globParts.map(parts => {\n            let gs = -1;\n            while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n                let i = gs;\n                while (parts[i + 1] === '**') {\n                    i++;\n                }\n                if (i !== gs) {\n                    parts.splice(gs, i - gs);\n                }\n            }\n            return parts;\n        });\n    }\n    // get rid of adjascent ** and resolve .. portions\n    levelOneOptimize(globParts) {\n        return globParts.map(parts => {\n            parts = parts.reduce((set, part) => {\n                const prev = set[set.length - 1];\n                if (part === '**' && prev === '**') {\n                    return set;\n                }\n                if (part === '..') {\n                    if (prev && prev !== '..' && prev !== '.' && prev !== '**') {\n                        set.pop();\n                        return set;\n                    }\n                }\n                set.push(part);\n                return set;\n            }, []);\n            return parts.length === 0 ? [''] : parts;\n        });\n    }\n    levelTwoFileOptimize(parts) {\n        if (!Array.isArray(parts)) {\n            parts = this.slashSplit(parts);\n        }\n        let didSomething = false;\n        do {\n            didSomething = false;\n            // <pre>/<e>/<rest> -> <pre>/<rest>\n            if (!this.preserveMultipleSlashes) {\n                for (let i = 1; i < parts.length - 1; i++) {\n                    const p = parts[i];\n                    // don't squeeze out UNC patterns\n                    if (i === 1 && p === '' && parts[0] === '')\n                        continue;\n                    if (p === '.' || p === '') {\n                        didSomething = true;\n                        parts.splice(i, 1);\n                        i--;\n                    }\n                }\n                if (parts[0] === '.' &&\n                    parts.length === 2 &&\n                    (parts[1] === '.' || parts[1] === '')) {\n                    didSomething = true;\n                    parts.pop();\n                }\n            }\n            // <pre>/<p>/../<rest> -> <pre>/<rest>\n            let dd = 0;\n            while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n                const p = parts[dd - 1];\n                if (p && p !== '.' && p !== '..' && p !== '**') {\n                    didSomething = true;\n                    parts.splice(dd - 1, 2);\n                    dd -= 2;\n                }\n            }\n        } while (didSomething);\n        return parts.length === 0 ? [''] : parts;\n    }\n    // First phase: single-pattern processing\n    // <pre> is 1 or more portions\n    // <rest> is 1 or more portions\n    // <p> is any portion other than ., .., '', or **\n    // <e> is . or ''\n    //\n    // **/.. is *brutal* for filesystem walking performance, because\n    // it effectively resets the recursive walk each time it occurs,\n    // and ** cannot be reduced out by a .. pattern part like a regexp\n    // or most strings (other than .., ., and '') can be.\n    //\n    // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n    // <pre>/<e>/<rest> -> <pre>/<rest>\n    // <pre>/<p>/../<rest> -> <pre>/<rest>\n    // **/**/<rest> -> **/<rest>\n    //\n    // **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow\n    // this WOULD be allowed if ** did follow symlinks, or * didn't\n    firstPhasePreProcess(globParts) {\n        let didSomething = false;\n        do {\n            didSomething = false;\n            // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n            for (let parts of globParts) {\n                let gs = -1;\n                while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n                    let gss = gs;\n                    while (parts[gss + 1] === '**') {\n                        // <pre>/**/**/<rest> -> <pre>/**/<rest>\n                        gss++;\n                    }\n                    // eg, if gs is 2 and gss is 4, that means we have 3 **\n                    // parts, and can remove 2 of them.\n                    if (gss > gs) {\n                        parts.splice(gs + 1, gss - gs);\n                    }\n                    let next = parts[gs + 1];\n                    const p = parts[gs + 2];\n                    const p2 = parts[gs + 3];\n                    if (next !== '..')\n                        continue;\n                    if (!p ||\n                        p === '.' ||\n                        p === '..' ||\n                        !p2 ||\n                        p2 === '.' ||\n                        p2 === '..') {\n                        continue;\n                    }\n                    didSomething = true;\n                    // edit parts in place, and push the new one\n                    parts.splice(gs, 1);\n                    const other = parts.slice(0);\n                    other[gs] = '**';\n                    globParts.push(other);\n                    gs--;\n                }\n                // <pre>/<e>/<rest> -> <pre>/<rest>\n                if (!this.preserveMultipleSlashes) {\n                    for (let i = 1; i < parts.length - 1; i++) {\n                        const p = parts[i];\n                        // don't squeeze out UNC patterns\n                        if (i === 1 && p === '' && parts[0] === '')\n                            continue;\n                        if (p === '.' || p === '') {\n                            didSomething = true;\n                            parts.splice(i, 1);\n                            i--;\n                        }\n                    }\n                    if (parts[0] === '.' &&\n                        parts.length === 2 &&\n                        (parts[1] === '.' || parts[1] === '')) {\n                        didSomething = true;\n                        parts.pop();\n                    }\n                }\n                // <pre>/<p>/../<rest> -> <pre>/<rest>\n                let dd = 0;\n                while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n                    const p = parts[dd - 1];\n                    if (p && p !== '.' && p !== '..' && p !== '**') {\n                        didSomething = true;\n                        const needDot = dd === 1 && parts[dd + 1] === '**';\n                        const splin = needDot ? ['.'] : [];\n                        parts.splice(dd - 1, 2, ...splin);\n                        if (parts.length === 0)\n                            parts.push('');\n                        dd -= 2;\n                    }\n                }\n            }\n        } while (didSomething);\n        return globParts;\n    }\n    // second phase: multi-pattern dedupes\n    // {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>\n    // {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>\n    // {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>\n    //\n    // {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>\n    // ^-- not valid because ** doens't follow symlinks\n    secondPhasePreProcess(globParts) {\n        for (let i = 0; i < globParts.length - 1; i++) {\n            for (let j = i + 1; j < globParts.length; j++) {\n                const matched = this.partsMatch(globParts[i], globParts[j], !this.preserveMultipleSlashes);\n                if (matched) {\n                    globParts[i] = [];\n                    globParts[j] = matched;\n                    break;\n                }\n            }\n        }\n        return globParts.filter(gs => gs.length);\n    }\n    partsMatch(a, b, emptyGSMatch = false) {\n        let ai = 0;\n        let bi = 0;\n        let result = [];\n        let which = '';\n        while (ai < a.length && bi < b.length) {\n            if (a[ai] === b[bi]) {\n                result.push(which === 'b' ? b[bi] : a[ai]);\n                ai++;\n                bi++;\n            }\n            else if (emptyGSMatch && a[ai] === '**' && b[bi] === a[ai + 1]) {\n                result.push(a[ai]);\n                ai++;\n            }\n            else if (emptyGSMatch && b[bi] === '**' && a[ai] === b[bi + 1]) {\n                result.push(b[bi]);\n                bi++;\n            }\n            else if (a[ai] === '*' &&\n                b[bi] &&\n                (this.options.dot || !b[bi].startsWith('.')) &&\n                b[bi] !== '**') {\n                if (which === 'b')\n                    return false;\n                which = 'a';\n                result.push(a[ai]);\n                ai++;\n                bi++;\n            }\n            else if (b[bi] === '*' &&\n                a[ai] &&\n                (this.options.dot || !a[ai].startsWith('.')) &&\n                a[ai] !== '**') {\n                if (which === 'a')\n                    return false;\n                which = 'b';\n                result.push(b[bi]);\n                ai++;\n                bi++;\n            }\n            else {\n                return false;\n            }\n        }\n        // if we fall out of the loop, it means they two are identical\n        // as long as their lengths match\n        return a.length === b.length && result;\n    }\n    parseNegate() {\n        if (this.nonegate)\n            return;\n        const pattern = this.pattern;\n        let negate = false;\n        let negateOffset = 0;\n        for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\n            negate = !negate;\n            negateOffset++;\n        }\n        if (negateOffset)\n            this.pattern = pattern.slice(negateOffset);\n        this.negate = negate;\n    }\n    // set partial to true to test if, for example,\n    // \"/a/b\" matches the start of \"/*/b/*/d\"\n    // Partial means, if you run out of file before you run\n    // out of pattern, then that's fine, as long as all\n    // the parts match.\n    matchOne(file, pattern, partial = false) {\n        const options = this.options;\n        // UNC paths like //?/X:/... can match X:/... and vice versa\n        // Drive letters in absolute drive or unc paths are always compared\n        // case-insensitively.\n        if (this.isWindows) {\n            const fileDrive = typeof file[0] === 'string' && /^[a-z]:$/i.test(file[0]);\n            const fileUNC = !fileDrive &&\n                file[0] === '' &&\n                file[1] === '' &&\n                file[2] === '?' &&\n                /^[a-z]:$/i.test(file[3]);\n            const patternDrive = typeof pattern[0] === 'string' && /^[a-z]:$/i.test(pattern[0]);\n            const patternUNC = !patternDrive &&\n                pattern[0] === '' &&\n                pattern[1] === '' &&\n                pattern[2] === '?' &&\n                typeof pattern[3] === 'string' &&\n                /^[a-z]:$/i.test(pattern[3]);\n            const fdi = fileUNC ? 3 : fileDrive ? 0 : undefined;\n            const pdi = patternUNC ? 3 : patternDrive ? 0 : undefined;\n            if (typeof fdi === 'number' && typeof pdi === 'number') {\n                const [fd, pd] = [file[fdi], pattern[pdi]];\n                if (fd.toLowerCase() === pd.toLowerCase()) {\n                    pattern[pdi] = fd;\n                    if (pdi > fdi) {\n                        pattern = pattern.slice(pdi);\n                    }\n                    else if (fdi > pdi) {\n                        file = file.slice(fdi);\n                    }\n                }\n            }\n        }\n        // resolve and reduce . and .. portions in the file as well.\n        // dont' need to do the second phase, because it's only one string[]\n        const { optimizationLevel = 1 } = this.options;\n        if (optimizationLevel >= 2) {\n            file = this.levelTwoFileOptimize(file);\n        }\n        this.debug('matchOne', this, { file, pattern });\n        this.debug('matchOne', file.length, pattern.length);\n        for (var fi = 0, pi = 0, fl = file.length, pl = pattern.length; fi < fl && pi < pl; fi++, pi++) {\n            this.debug('matchOne loop');\n            var p = pattern[pi];\n            var f = file[fi];\n            this.debug(pattern, p, f);\n            // should be impossible.\n            // some invalid regexp stuff in the set.\n            /* c8 ignore start */\n            if (p === false) {\n                return false;\n            }\n            /* c8 ignore stop */\n            if (p === exports.GLOBSTAR) {\n                this.debug('GLOBSTAR', [pattern, p, f]);\n                // \"**\"\n                // a/**/b/**/c would match the following:\n                // a/b/x/y/z/c\n                // a/x/y/z/b/c\n                // a/b/x/b/x/c\n                // a/b/c\n                // To do this, take the rest of the pattern after\n                // the **, and see if it would match the file remainder.\n                // If so, return success.\n                // If not, the ** \"swallows\" a segment, and try again.\n                // This is recursively awful.\n                //\n                // a/**/b/**/c matching a/b/x/y/z/c\n                // - a matches a\n                // - doublestar\n                //   - matchOne(b/x/y/z/c, b/**/c)\n                //     - b matches b\n                //     - doublestar\n                //       - matchOne(x/y/z/c, c) -> no\n                //       - matchOne(y/z/c, c) -> no\n                //       - matchOne(z/c, c) -> no\n                //       - matchOne(c, c) yes, hit\n                var fr = fi;\n                var pr = pi + 1;\n                if (pr === pl) {\n                    this.debug('** at the end');\n                    // a ** at the end will just swallow the rest.\n                    // We have found a match.\n                    // however, it will not swallow /.x, unless\n                    // options.dot is set.\n                    // . and .. are *never* matched by **, for explosively\n                    // exponential reasons.\n                    for (; fi < fl; fi++) {\n                        if (file[fi] === '.' ||\n                            file[fi] === '..' ||\n                            (!options.dot && file[fi].charAt(0) === '.'))\n                            return false;\n                    }\n                    return true;\n                }\n                // ok, let's see if we can swallow whatever we can.\n                while (fr < fl) {\n                    var swallowee = file[fr];\n                    this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee);\n                    // XXX remove this slice.  Just pass the start index.\n                    if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n                        this.debug('globstar found match!', fr, fl, swallowee);\n                        // found a match.\n                        return true;\n                    }\n                    else {\n                        // can't swallow \".\" or \"..\" ever.\n                        // can only swallow \".foo\" when explicitly asked.\n                        if (swallowee === '.' ||\n                            swallowee === '..' ||\n                            (!options.dot && swallowee.charAt(0) === '.')) {\n                            this.debug('dot detected!', file, fr, pattern, pr);\n                            break;\n                        }\n                        // ** swallows a segment, and continue.\n                        this.debug('globstar swallow a segment, and continue');\n                        fr++;\n                    }\n                }\n                // no match was found.\n                // However, in partial mode, we can't say this is necessarily over.\n                /* c8 ignore start */\n                if (partial) {\n                    // ran out of file\n                    this.debug('\\n>>> no match, partial?', file, fr, pattern, pr);\n                    if (fr === fl) {\n                        return true;\n                    }\n                }\n                /* c8 ignore stop */\n                return false;\n            }\n            // something other than **\n            // non-magic patterns just have to match exactly\n            // patterns with magic have been turned into regexps.\n            let hit;\n            if (typeof p === 'string') {\n                hit = f === p;\n                this.debug('string match', p, f, hit);\n            }\n            else {\n                hit = p.test(f);\n                this.debug('pattern match', p, f, hit);\n            }\n            if (!hit)\n                return false;\n        }\n        // Note: ending in / means that we'll get a final \"\"\n        // at the end of the pattern.  This can only match a\n        // corresponding \"\" at the end of the file.\n        // If the file ends in /, then it can only match a\n        // a pattern that ends in /, unless the pattern just\n        // doesn't have any more for it. But, a/b/ should *not*\n        // match \"a/b/*\", even though \"\" matches against the\n        // [^/]*? pattern, except in partial mode, where it might\n        // simply not be reached yet.\n        // However, a/b/ should still satisfy a/*\n        // now either we fell off the end of the pattern, or we're done.\n        if (fi === fl && pi === pl) {\n            // ran out of pattern and filename at the same time.\n            // an exact hit!\n            return true;\n        }\n        else if (fi === fl) {\n            // ran out of file, but still had pattern left.\n            // this is ok if we're doing the match as part of\n            // a glob fs traversal.\n            return partial;\n        }\n        else if (pi === pl) {\n            // ran out of pattern, still have file left.\n            // this is only acceptable if we're on the very last\n            // empty segment of a file with a trailing slash.\n            // a/* should match a/b/\n            return fi === fl - 1 && file[fi] === '';\n            /* c8 ignore start */\n        }\n        else {\n            // should be unreachable.\n            throw new Error('wtf?');\n        }\n        /* c8 ignore stop */\n    }\n    braceExpand() {\n        return (0, exports.braceExpand)(this.pattern, this.options);\n    }\n    parse(pattern) {\n        (0, assert_valid_pattern_js_1.assertValidPattern)(pattern);\n        const options = this.options;\n        // shortcuts\n        if (pattern === '**')\n            return exports.GLOBSTAR;\n        if (pattern === '')\n            return '';\n        // far and away, the most common glob pattern parts are\n        // *, *.*, and *.<ext>  Add a fast check method for those.\n        let m;\n        let fastTest = null;\n        if ((m = pattern.match(starRE))) {\n            fastTest = options.dot ? starTestDot : starTest;\n        }\n        else if ((m = pattern.match(starDotExtRE))) {\n            fastTest = (options.nocase\n                ? options.dot\n                    ? starDotExtTestNocaseDot\n                    : starDotExtTestNocase\n                : options.dot\n                    ? starDotExtTestDot\n                    : starDotExtTest)(m[1]);\n        }\n        else if ((m = pattern.match(qmarksRE))) {\n            fastTest = (options.nocase\n                ? options.dot\n                    ? qmarksTestNocaseDot\n                    : qmarksTestNocase\n                : options.dot\n                    ? qmarksTestDot\n                    : qmarksTest)(m);\n        }\n        else if ((m = pattern.match(starDotStarRE))) {\n            fastTest = options.dot ? starDotStarTestDot : starDotStarTest;\n        }\n        else if ((m = pattern.match(dotStarRE))) {\n            fastTest = dotStarTest;\n        }\n        const re = ast_js_1.AST.fromGlob(pattern, this.options).toMMPattern();\n        if (fastTest && typeof re === 'object') {\n            // Avoids overriding in frozen environments\n            Reflect.defineProperty(re, 'test', { value: fastTest });\n        }\n        return re;\n    }\n    makeRe() {\n        if (this.regexp || this.regexp === false)\n            return this.regexp;\n        // at this point, this.set is a 2d array of partial\n        // pattern strings, or \"**\".\n        //\n        // It's better to use .match().  This function shouldn't\n        // be used, really, but it's pretty convenient sometimes,\n        // when you just want to work with a regex.\n        const set = this.set;\n        if (!set.length) {\n            this.regexp = false;\n            return this.regexp;\n        }\n        const options = this.options;\n        const twoStar = options.noglobstar\n            ? star\n            : options.dot\n                ? twoStarDot\n                : twoStarNoDot;\n        const flags = new Set(options.nocase ? ['i'] : []);\n        // regexpify non-globstar patterns\n        // if ** is only item, then we just do one twoStar\n        // if ** is first, and there are more, prepend (\\/|twoStar\\/)? to next\n        // if ** is last, append (\\/twoStar|) to previous\n        // if ** is in the middle, append (\\/|\\/twoStar\\/) to previous\n        // then filter out GLOBSTAR symbols\n        let re = set\n            .map(pattern => {\n            const pp = pattern.map(p => {\n                if (p instanceof RegExp) {\n                    for (const f of p.flags.split(''))\n                        flags.add(f);\n                }\n                return typeof p === 'string'\n                    ? regExpEscape(p)\n                    : p === exports.GLOBSTAR\n                        ? exports.GLOBSTAR\n                        : p._src;\n            });\n            pp.forEach((p, i) => {\n                const next = pp[i + 1];\n                const prev = pp[i - 1];\n                if (p !== exports.GLOBSTAR || prev === exports.GLOBSTAR) {\n                    return;\n                }\n                if (prev === undefined) {\n                    if (next !== undefined && next !== exports.GLOBSTAR) {\n                        pp[i + 1] = '(?:\\\\/|' + twoStar + '\\\\/)?' + next;\n                    }\n                    else {\n                        pp[i] = twoStar;\n                    }\n                }\n                else if (next === undefined) {\n                    pp[i - 1] = prev + '(?:\\\\/|' + twoStar + ')?';\n                }\n                else if (next !== exports.GLOBSTAR) {\n                    pp[i - 1] = prev + '(?:\\\\/|\\\\/' + twoStar + '\\\\/)' + next;\n                    pp[i + 1] = exports.GLOBSTAR;\n                }\n            });\n            return pp.filter(p => p !== exports.GLOBSTAR).join('/');\n        })\n            .join('|');\n        // need to wrap in parens if we had more than one thing with |,\n        // otherwise only the first will be anchored to ^ and the last to $\n        const [open, close] = set.length > 1 ? ['(?:', ')'] : ['', ''];\n        // must match entire pattern\n        // ending in a * or ** will make it less strict.\n        re = '^' + open + re + close + '$';\n        // can match anything, as long as it's not this.\n        if (this.negate)\n            re = '^(?!' + re + ').+$';\n        try {\n            this.regexp = new RegExp(re, [...flags].join(''));\n            /* c8 ignore start */\n        }\n        catch (ex) {\n            // should be impossible\n            this.regexp = false;\n        }\n        /* c8 ignore stop */\n        return this.regexp;\n    }\n    slashSplit(p) {\n        // if p starts with // on windows, we preserve that\n        // so that UNC paths aren't broken.  Otherwise, any number of\n        // / characters are coalesced into one, unless\n        // preserveMultipleSlashes is set to true.\n        if (this.preserveMultipleSlashes) {\n            return p.split('/');\n        }\n        else if (this.isWindows && /^\\/\\/[^\\/]+/.test(p)) {\n            // add an extra '' for the one we lose\n            return ['', ...p.split(/\\/+/)];\n        }\n        else {\n            return p.split(/\\/+/);\n        }\n    }\n    match(f, partial = this.partial) {\n        this.debug('match', f, this.pattern);\n        // short-circuit in the case of busted things.\n        // comments, etc.\n        if (this.comment) {\n            return false;\n        }\n        if (this.empty) {\n            return f === '';\n        }\n        if (f === '/' && partial) {\n            return true;\n        }\n        const options = this.options;\n        // windows: need to use /, not \\\n        if (this.isWindows) {\n            f = f.split('\\\\').join('/');\n        }\n        // treat the test path as a set of pathparts.\n        const ff = this.slashSplit(f);\n        this.debug(this.pattern, 'split', ff);\n        // just ONE of the pattern sets in this.set needs to match\n        // in order for it to be valid.  If negating, then just one\n        // match means that we have failed.\n        // Either way, return on the first hit.\n        const set = this.set;\n        this.debug(this.pattern, 'set', set);\n        // Find the basename of the path by looking for the last non-empty segment\n        let filename = ff[ff.length - 1];\n        if (!filename) {\n            for (let i = ff.length - 2; !filename && i >= 0; i--) {\n                filename = ff[i];\n            }\n        }\n        for (let i = 0; i < set.length; i++) {\n            const pattern = set[i];\n            let file = ff;\n            if (options.matchBase && pattern.length === 1) {\n                file = [filename];\n            }\n            const hit = this.matchOne(file, pattern, partial);\n            if (hit) {\n                if (options.flipNegate) {\n                    return true;\n                }\n                return !this.negate;\n            }\n        }\n        // didn't get any hits.  this is success if it's a negative\n        // pattern, failure otherwise.\n        if (options.flipNegate) {\n            return false;\n        }\n        return this.negate;\n    }\n    static defaults(def) {\n        return exports.minimatch.defaults(def).Minimatch;\n    }\n}\nexports.Minimatch = Minimatch;\n/* c8 ignore start */\nvar ast_js_2 = require(\"./ast.js\");\nObject.defineProperty(exports, \"AST\", { enumerable: true, get: function () { return ast_js_2.AST; } });\nvar escape_js_2 = require(\"./escape.js\");\nObject.defineProperty(exports, \"escape\", { enumerable: true, get: function () { return escape_js_2.escape; } });\nvar unescape_js_2 = require(\"./unescape.js\");\nObject.defineProperty(exports, \"unescape\", { enumerable: true, get: function () { return unescape_js_2.unescape; } });\n/* c8 ignore stop */\nexports.minimatch.AST = ast_js_1.AST;\nexports.minimatch.Minimatch = Minimatch;\nexports.minimatch.escape = escape_js_1.escape;\nexports.minimatch.unescape = unescape_js_1.unescape;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unescape = void 0;\n/**\n * Un-escape a string that has been escaped with {@link escape}.\n *\n * If the {@link windowsPathsNoEscape} option is used, then square-brace\n * escapes are removed, but not backslash escapes.  For example, it will turn\n * the string `'[*]'` into `*`, but it will not turn `'\\\\*'` into `'*'`,\n * becuase `\\` is a path separator in `windowsPathsNoEscape` mode.\n *\n * When `windowsPathsNoEscape` is not set, then both brace escapes and\n * backslash escapes are removed.\n *\n * Slashes (and backslashes in `windowsPathsNoEscape` mode) cannot be escaped\n * or unescaped.\n */\nconst unescape = (s, { windowsPathsNoEscape = false, } = {}) => {\n    return windowsPathsNoEscape\n        ? s.replace(/\\[([^\\/\\\\])\\]/g, '$1')\n        : s.replace(/((?!\\\\).|^)\\[([^\\/\\\\])\\]/g, '$1$2').replace(/\\\\([^\\/])/g, '$1');\n};\nexports.unescape = unescape;\n//# sourceMappingURL=unescape.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PathScurry = exports.Path = exports.PathScurryDarwin = exports.PathScurryPosix = exports.PathScurryWin32 = exports.PathScurryBase = exports.PathPosix = exports.PathWin32 = exports.PathBase = exports.ChildrenCache = exports.ResolveCache = void 0;\nconst lru_cache_1 = require(\"lru-cache\");\nconst node_path_1 = require(\"node:path\");\nconst node_url_1 = require(\"node:url\");\nconst fs_1 = require(\"fs\");\nconst actualFS = __importStar(require(\"node:fs\"));\nconst realpathSync = fs_1.realpathSync.native;\n// TODO: test perf of fs/promises realpath vs realpathCB,\n// since the promises one uses realpath.native\nconst promises_1 = require(\"node:fs/promises\");\nconst minipass_1 = require(\"minipass\");\nconst defaultFS = {\n    lstatSync: fs_1.lstatSync,\n    readdir: fs_1.readdir,\n    readdirSync: fs_1.readdirSync,\n    readlinkSync: fs_1.readlinkSync,\n    realpathSync,\n    promises: {\n        lstat: promises_1.lstat,\n        readdir: promises_1.readdir,\n        readlink: promises_1.readlink,\n        realpath: promises_1.realpath,\n    },\n};\n// if they just gave us require('fs') then use our default\nconst fsFromOption = (fsOption) => !fsOption || fsOption === defaultFS || fsOption === actualFS ?\n    defaultFS\n    : {\n        ...defaultFS,\n        ...fsOption,\n        promises: {\n            ...defaultFS.promises,\n            ...(fsOption.promises || {}),\n        },\n    };\n// turn something like //?/c:/ into c:\\\nconst uncDriveRegexp = /^\\\\\\\\\\?\\\\([a-z]:)\\\\?$/i;\nconst uncToDrive = (rootPath) => rootPath.replace(/\\//g, '\\\\').replace(uncDriveRegexp, '$1\\\\');\n// windows paths are separated by either / or \\\nconst eitherSep = /[\\\\\\/]/;\nconst UNKNOWN = 0; // may not even exist, for all we know\nconst IFIFO = 0b0001;\nconst IFCHR = 0b0010;\nconst IFDIR = 0b0100;\nconst IFBLK = 0b0110;\nconst IFREG = 0b1000;\nconst IFLNK = 0b1010;\nconst IFSOCK = 0b1100;\nconst IFMT = 0b1111;\n// mask to unset low 4 bits\nconst IFMT_UNKNOWN = ~IFMT;\n// set after successfully calling readdir() and getting entries.\nconst READDIR_CALLED = 0b0000_0001_0000;\n// set after a successful lstat()\nconst LSTAT_CALLED = 0b0000_0010_0000;\n// set if an entry (or one of its parents) is definitely not a dir\nconst ENOTDIR = 0b0000_0100_0000;\n// set if an entry (or one of its parents) does not exist\n// (can also be set on lstat errors like EACCES or ENAMETOOLONG)\nconst ENOENT = 0b0000_1000_0000;\n// cannot have child entries -- also verify &IFMT is either IFDIR or IFLNK\n// set if we fail to readlink\nconst ENOREADLINK = 0b0001_0000_0000;\n// set if we know realpath() will fail\nconst ENOREALPATH = 0b0010_0000_0000;\nconst ENOCHILD = ENOTDIR | ENOENT | ENOREALPATH;\nconst TYPEMASK = 0b0011_1111_1111;\nconst entToType = (s) => s.isFile() ? IFREG\n    : s.isDirectory() ? IFDIR\n        : s.isSymbolicLink() ? IFLNK\n            : s.isCharacterDevice() ? IFCHR\n                : s.isBlockDevice() ? IFBLK\n                    : s.isSocket() ? IFSOCK\n                        : s.isFIFO() ? IFIFO\n                            : UNKNOWN;\n// normalize unicode path names\nconst normalizeCache = new Map();\nconst normalize = (s) => {\n    const c = normalizeCache.get(s);\n    if (c)\n        return c;\n    const n = s.normalize('NFKD');\n    normalizeCache.set(s, n);\n    return n;\n};\nconst normalizeNocaseCache = new Map();\nconst normalizeNocase = (s) => {\n    const c = normalizeNocaseCache.get(s);\n    if (c)\n        return c;\n    const n = normalize(s.toLowerCase());\n    normalizeNocaseCache.set(s, n);\n    return n;\n};\n/**\n * An LRUCache for storing resolved path strings or Path objects.\n * @internal\n */\nclass ResolveCache extends lru_cache_1.LRUCache {\n    constructor() {\n        super({ max: 256 });\n    }\n}\nexports.ResolveCache = ResolveCache;\n// In order to prevent blowing out the js heap by allocating hundreds of\n// thousands of Path entries when walking extremely large trees, the \"children\"\n// in this tree are represented by storing an array of Path entries in an\n// LRUCache, indexed by the parent.  At any time, Path.children() may return an\n// empty array, indicating that it doesn't know about any of its children, and\n// thus has to rebuild that cache.  This is fine, it just means that we don't\n// benefit as much from having the cached entries, but huge directory walks\n// don't blow out the stack, and smaller ones are still as fast as possible.\n//\n//It does impose some complexity when building up the readdir data, because we\n//need to pass a reference to the children array that we started with.\n/**\n * an LRUCache for storing child entries.\n * @internal\n */\nclass ChildrenCache extends lru_cache_1.LRUCache {\n    constructor(maxSize = 16 * 1024) {\n        super({\n            maxSize,\n            // parent + children\n            sizeCalculation: a => a.length + 1,\n        });\n    }\n}\nexports.ChildrenCache = ChildrenCache;\nconst setAsCwd = Symbol('PathScurry setAsCwd');\n/**\n * Path objects are sort of like a super-powered\n * {@link https://nodejs.org/docs/latest/api/fs.html#class-fsdirent fs.Dirent}\n *\n * Each one represents a single filesystem entry on disk, which may or may not\n * exist. It includes methods for reading various types of information via\n * lstat, readlink, and readdir, and caches all information to the greatest\n * degree possible.\n *\n * Note that fs operations that would normally throw will instead return an\n * \"empty\" value. This is in order to prevent excessive overhead from error\n * stack traces.\n */\nclass PathBase {\n    /**\n     * the basename of this path\n     *\n     * **Important**: *always* test the path name against any test string\n     * usingthe {@link isNamed} method, and not by directly comparing this\n     * string. Otherwise, unicode path strings that the system sees as identical\n     * will not be properly treated as the same path, leading to incorrect\n     * behavior and possible security issues.\n     */\n    name;\n    /**\n     * the Path entry corresponding to the path root.\n     *\n     * @internal\n     */\n    root;\n    /**\n     * All roots found within the current PathScurry family\n     *\n     * @internal\n     */\n    roots;\n    /**\n     * a reference to the parent path, or undefined in the case of root entries\n     *\n     * @internal\n     */\n    parent;\n    /**\n     * boolean indicating whether paths are compared case-insensitively\n     * @internal\n     */\n    nocase;\n    /**\n     * boolean indicating that this path is the current working directory\n     * of the PathScurry collection that contains it.\n     */\n    isCWD = false;\n    // potential default fs override\n    #fs;\n    // Stats fields\n    #dev;\n    get dev() {\n        return this.#dev;\n    }\n    #mode;\n    get mode() {\n        return this.#mode;\n    }\n    #nlink;\n    get nlink() {\n        return this.#nlink;\n    }\n    #uid;\n    get uid() {\n        return this.#uid;\n    }\n    #gid;\n    get gid() {\n        return this.#gid;\n    }\n    #rdev;\n    get rdev() {\n        return this.#rdev;\n    }\n    #blksize;\n    get blksize() {\n        return this.#blksize;\n    }\n    #ino;\n    get ino() {\n        return this.#ino;\n    }\n    #size;\n    get size() {\n        return this.#size;\n    }\n    #blocks;\n    get blocks() {\n        return this.#blocks;\n    }\n    #atimeMs;\n    get atimeMs() {\n        return this.#atimeMs;\n    }\n    #mtimeMs;\n    get mtimeMs() {\n        return this.#mtimeMs;\n    }\n    #ctimeMs;\n    get ctimeMs() {\n        return this.#ctimeMs;\n    }\n    #birthtimeMs;\n    get birthtimeMs() {\n        return this.#birthtimeMs;\n    }\n    #atime;\n    get atime() {\n        return this.#atime;\n    }\n    #mtime;\n    get mtime() {\n        return this.#mtime;\n    }\n    #ctime;\n    get ctime() {\n        return this.#ctime;\n    }\n    #birthtime;\n    get birthtime() {\n        return this.#birthtime;\n    }\n    #matchName;\n    #depth;\n    #fullpath;\n    #fullpathPosix;\n    #relative;\n    #relativePosix;\n    #type;\n    #children;\n    #linkTarget;\n    #realpath;\n    /**\n     * This property is for compatibility with the Dirent class as of\n     * Node v20, where Dirent['parentPath'] refers to the path of the\n     * directory that was passed to readdir. For root entries, it's the path\n     * to the entry itself.\n     */\n    get parentPath() {\n        return (this.parent || this).fullpath();\n    }\n    /**\n     * Deprecated alias for Dirent['parentPath'] Somewhat counterintuitively,\n     * this property refers to the *parent* path, not the path object itself.\n     *\n     * @deprecated\n     */\n    get path() {\n        return this.parentPath;\n    }\n    /**\n     * Do not create new Path objects directly.  They should always be accessed\n     * via the PathScurry class or other methods on the Path class.\n     *\n     * @internal\n     */\n    constructor(name, type = UNKNOWN, root, roots, nocase, children, opts) {\n        this.name = name;\n        this.#matchName = nocase ? normalizeNocase(name) : normalize(name);\n        this.#type = type & TYPEMASK;\n        this.nocase = nocase;\n        this.roots = roots;\n        this.root = root || this;\n        this.#children = children;\n        this.#fullpath = opts.fullpath;\n        this.#relative = opts.relative;\n        this.#relativePosix = opts.relativePosix;\n        this.parent = opts.parent;\n        if (this.parent) {\n            this.#fs = this.parent.#fs;\n        }\n        else {\n            this.#fs = fsFromOption(opts.fs);\n        }\n    }\n    /**\n     * Returns the depth of the Path object from its root.\n     *\n     * For example, a path at `/foo/bar` would have a depth of 2.\n     */\n    depth() {\n        if (this.#depth !== undefined)\n            return this.#depth;\n        if (!this.parent)\n            return (this.#depth = 0);\n        return (this.#depth = this.parent.depth() + 1);\n    }\n    /**\n     * @internal\n     */\n    childrenCache() {\n        return this.#children;\n    }\n    /**\n     * Get the Path object referenced by the string path, resolved from this Path\n     */\n    resolve(path) {\n        if (!path) {\n            return this;\n        }\n        const rootPath = this.getRootString(path);\n        const dir = path.substring(rootPath.length);\n        const dirParts = dir.split(this.splitSep);\n        const result = rootPath ?\n            this.getRoot(rootPath).#resolveParts(dirParts)\n            : this.#resolveParts(dirParts);\n        return result;\n    }\n    #resolveParts(dirParts) {\n        let p = this;\n        for (const part of dirParts) {\n            p = p.child(part);\n        }\n        return p;\n    }\n    /**\n     * Returns the cached children Path objects, if still available.  If they\n     * have fallen out of the cache, then returns an empty array, and resets the\n     * READDIR_CALLED bit, so that future calls to readdir() will require an fs\n     * lookup.\n     *\n     * @internal\n     */\n    children() {\n        const cached = this.#children.get(this);\n        if (cached) {\n            return cached;\n        }\n        const children = Object.assign([], { provisional: 0 });\n        this.#children.set(this, children);\n        this.#type &= ~READDIR_CALLED;\n        return children;\n    }\n    /**\n     * Resolves a path portion and returns or creates the child Path.\n     *\n     * Returns `this` if pathPart is `''` or `'.'`, or `parent` if pathPart is\n     * `'..'`.\n     *\n     * This should not be called directly.  If `pathPart` contains any path\n     * separators, it will lead to unsafe undefined behavior.\n     *\n     * Use `Path.resolve()` instead.\n     *\n     * @internal\n     */\n    child(pathPart, opts) {\n        if (pathPart === '' || pathPart === '.') {\n            return this;\n        }\n        if (pathPart === '..') {\n            return this.parent || this;\n        }\n        // find the child\n        const children = this.children();\n        const name = this.nocase ? normalizeNocase(pathPart) : normalize(pathPart);\n        for (const p of children) {\n            if (p.#matchName === name) {\n                return p;\n            }\n        }\n        // didn't find it, create provisional child, since it might not\n        // actually exist.  If we know the parent isn't a dir, then\n        // in fact it CAN'T exist.\n        const s = this.parent ? this.sep : '';\n        const fullpath = this.#fullpath ? this.#fullpath + s + pathPart : undefined;\n        const pchild = this.newChild(pathPart, UNKNOWN, {\n            ...opts,\n            parent: this,\n            fullpath,\n        });\n        if (!this.canReaddir()) {\n            pchild.#type |= ENOENT;\n        }\n        // don't have to update provisional, because if we have real children,\n        // then provisional is set to children.length, otherwise a lower number\n        children.push(pchild);\n        return pchild;\n    }\n    /**\n     * The relative path from the cwd. If it does not share an ancestor with\n     * the cwd, then this ends up being equivalent to the fullpath()\n     */\n    relative() {\n        if (this.isCWD)\n            return '';\n        if (this.#relative !== undefined) {\n            return this.#relative;\n        }\n        const name = this.name;\n        const p = this.parent;\n        if (!p) {\n            return (this.#relative = this.name);\n        }\n        const pv = p.relative();\n        return pv + (!pv || !p.parent ? '' : this.sep) + name;\n    }\n    /**\n     * The relative path from the cwd, using / as the path separator.\n     * If it does not share an ancestor with\n     * the cwd, then this ends up being equivalent to the fullpathPosix()\n     * On posix systems, this is identical to relative().\n     */\n    relativePosix() {\n        if (this.sep === '/')\n            return this.relative();\n        if (this.isCWD)\n            return '';\n        if (this.#relativePosix !== undefined)\n            return this.#relativePosix;\n        const name = this.name;\n        const p = this.parent;\n        if (!p) {\n            return (this.#relativePosix = this.fullpathPosix());\n        }\n        const pv = p.relativePosix();\n        return pv + (!pv || !p.parent ? '' : '/') + name;\n    }\n    /**\n     * The fully resolved path string for this Path entry\n     */\n    fullpath() {\n        if (this.#fullpath !== undefined) {\n            return this.#fullpath;\n        }\n        const name = this.name;\n        const p = this.parent;\n        if (!p) {\n            return (this.#fullpath = this.name);\n        }\n        const pv = p.fullpath();\n        const fp = pv + (!p.parent ? '' : this.sep) + name;\n        return (this.#fullpath = fp);\n    }\n    /**\n     * On platforms other than windows, this is identical to fullpath.\n     *\n     * On windows, this is overridden to return the forward-slash form of the\n     * full UNC path.\n     */\n    fullpathPosix() {\n        if (this.#fullpathPosix !== undefined)\n            return this.#fullpathPosix;\n        if (this.sep === '/')\n            return (this.#fullpathPosix = this.fullpath());\n        if (!this.parent) {\n            const p = this.fullpath().replace(/\\\\/g, '/');\n            if (/^[a-z]:\\//i.test(p)) {\n                return (this.#fullpathPosix = `//?/${p}`);\n            }\n            else {\n                return (this.#fullpathPosix = p);\n            }\n        }\n        const p = this.parent;\n        const pfpp = p.fullpathPosix();\n        const fpp = pfpp + (!pfpp || !p.parent ? '' : '/') + this.name;\n        return (this.#fullpathPosix = fpp);\n    }\n    /**\n     * Is the Path of an unknown type?\n     *\n     * Note that we might know *something* about it if there has been a previous\n     * filesystem operation, for example that it does not exist, or is not a\n     * link, or whether it has child entries.\n     */\n    isUnknown() {\n        return (this.#type & IFMT) === UNKNOWN;\n    }\n    isType(type) {\n        return this[`is${type}`]();\n    }\n    getType() {\n        return (this.isUnknown() ? 'Unknown'\n            : this.isDirectory() ? 'Directory'\n                : this.isFile() ? 'File'\n                    : this.isSymbolicLink() ? 'SymbolicLink'\n                        : this.isFIFO() ? 'FIFO'\n                            : this.isCharacterDevice() ? 'CharacterDevice'\n                                : this.isBlockDevice() ? 'BlockDevice'\n                                    : /* c8 ignore start */ this.isSocket() ? 'Socket'\n                                        : 'Unknown');\n        /* c8 ignore stop */\n    }\n    /**\n     * Is the Path a regular file?\n     */\n    isFile() {\n        return (this.#type & IFMT) === IFREG;\n    }\n    /**\n     * Is the Path a directory?\n     */\n    isDirectory() {\n        return (this.#type & IFMT) === IFDIR;\n    }\n    /**\n     * Is the path a character device?\n     */\n    isCharacterDevice() {\n        return (this.#type & IFMT) === IFCHR;\n    }\n    /**\n     * Is the path a block device?\n     */\n    isBlockDevice() {\n        return (this.#type & IFMT) === IFBLK;\n    }\n    /**\n     * Is the path a FIFO pipe?\n     */\n    isFIFO() {\n        return (this.#type & IFMT) === IFIFO;\n    }\n    /**\n     * Is the path a socket?\n     */\n    isSocket() {\n        return (this.#type & IFMT) === IFSOCK;\n    }\n    /**\n     * Is the path a symbolic link?\n     */\n    isSymbolicLink() {\n        return (this.#type & IFLNK) === IFLNK;\n    }\n    /**\n     * Return the entry if it has been subject of a successful lstat, or\n     * undefined otherwise.\n     *\n     * Does not read the filesystem, so an undefined result *could* simply\n     * mean that we haven't called lstat on it.\n     */\n    lstatCached() {\n        return this.#type & LSTAT_CALLED ? this : undefined;\n    }\n    /**\n     * Return the cached link target if the entry has been the subject of a\n     * successful readlink, or undefined otherwise.\n     *\n     * Does not read the filesystem, so an undefined result *could* just mean we\n     * don't have any cached data. Only use it if you are very sure that a\n     * readlink() has been called at some point.\n     */\n    readlinkCached() {\n        return this.#linkTarget;\n    }\n    /**\n     * Returns the cached realpath target if the entry has been the subject\n     * of a successful realpath, or undefined otherwise.\n     *\n     * Does not read the filesystem, so an undefined result *could* just mean we\n     * don't have any cached data. Only use it if you are very sure that a\n     * realpath() has been called at some point.\n     */\n    realpathCached() {\n        return this.#realpath;\n    }\n    /**\n     * Returns the cached child Path entries array if the entry has been the\n     * subject of a successful readdir(), or [] otherwise.\n     *\n     * Does not read the filesystem, so an empty array *could* just mean we\n     * don't have any cached data. Only use it if you are very sure that a\n     * readdir() has been called recently enough to still be valid.\n     */\n    readdirCached() {\n        const children = this.children();\n        return children.slice(0, children.provisional);\n    }\n    /**\n     * Return true if it's worth trying to readlink.  Ie, we don't (yet) have\n     * any indication that readlink will definitely fail.\n     *\n     * Returns false if the path is known to not be a symlink, if a previous\n     * readlink failed, or if the entry does not exist.\n     */\n    canReadlink() {\n        if (this.#linkTarget)\n            return true;\n        if (!this.parent)\n            return false;\n        // cases where it cannot possibly succeed\n        const ifmt = this.#type & IFMT;\n        return !((ifmt !== UNKNOWN && ifmt !== IFLNK) ||\n            this.#type & ENOREADLINK ||\n            this.#type & ENOENT);\n    }\n    /**\n     * Return true if readdir has previously been successfully called on this\n     * path, indicating that cachedReaddir() is likely valid.\n     */\n    calledReaddir() {\n        return !!(this.#type & READDIR_CALLED);\n    }\n    /**\n     * Returns true if the path is known to not exist. That is, a previous lstat\n     * or readdir failed to verify its existence when that would have been\n     * expected, or a parent entry was marked either enoent or enotdir.\n     */\n    isENOENT() {\n        return !!(this.#type & ENOENT);\n    }\n    /**\n     * Return true if the path is a match for the given path name.  This handles\n     * case sensitivity and unicode normalization.\n     *\n     * Note: even on case-sensitive systems, it is **not** safe to test the\n     * equality of the `.name` property to determine whether a given pathname\n     * matches, due to unicode normalization mismatches.\n     *\n     * Always use this method instead of testing the `path.name` property\n     * directly.\n     */\n    isNamed(n) {\n        return !this.nocase ?\n            this.#matchName === normalize(n)\n            : this.#matchName === normalizeNocase(n);\n    }\n    /**\n     * Return the Path object corresponding to the target of a symbolic link.\n     *\n     * If the Path is not a symbolic link, or if the readlink call fails for any\n     * reason, `undefined` is returned.\n     *\n     * Result is cached, and thus may be outdated if the filesystem is mutated.\n     */\n    async readlink() {\n        const target = this.#linkTarget;\n        if (target) {\n            return target;\n        }\n        if (!this.canReadlink()) {\n            return undefined;\n        }\n        /* c8 ignore start */\n        // already covered by the canReadlink test, here for ts grumples\n        if (!this.parent) {\n            return undefined;\n        }\n        /* c8 ignore stop */\n        try {\n            const read = await this.#fs.promises.readlink(this.fullpath());\n            const linkTarget = (await this.parent.realpath())?.resolve(read);\n            if (linkTarget) {\n                return (this.#linkTarget = linkTarget);\n            }\n        }\n        catch (er) {\n            this.#readlinkFail(er.code);\n            return undefined;\n        }\n    }\n    /**\n     * Synchronous {@link PathBase.readlink}\n     */\n    readlinkSync() {\n        const target = this.#linkTarget;\n        if (target) {\n            return target;\n        }\n        if (!this.canReadlink()) {\n            return undefined;\n        }\n        /* c8 ignore start */\n        // already covered by the canReadlink test, here for ts grumples\n        if (!this.parent) {\n            return undefined;\n        }\n        /* c8 ignore stop */\n        try {\n            const read = this.#fs.readlinkSync(this.fullpath());\n            const linkTarget = this.parent.realpathSync()?.resolve(read);\n            if (linkTarget) {\n                return (this.#linkTarget = linkTarget);\n            }\n        }\n        catch (er) {\n            this.#readlinkFail(er.code);\n            return undefined;\n        }\n    }\n    #readdirSuccess(children) {\n        // succeeded, mark readdir called bit\n        this.#type |= READDIR_CALLED;\n        // mark all remaining provisional children as ENOENT\n        for (let p = children.provisional; p < children.length; p++) {\n            const c = children[p];\n            if (c)\n                c.#markENOENT();\n        }\n    }\n    #markENOENT() {\n        // mark as UNKNOWN and ENOENT\n        if (this.#type & ENOENT)\n            return;\n        this.#type = (this.#type | ENOENT) & IFMT_UNKNOWN;\n        this.#markChildrenENOENT();\n    }\n    #markChildrenENOENT() {\n        // all children are provisional and do not exist\n        const children = this.children();\n        children.provisional = 0;\n        for (const p of children) {\n            p.#markENOENT();\n        }\n    }\n    #markENOREALPATH() {\n        this.#type |= ENOREALPATH;\n        this.#markENOTDIR();\n    }\n    // save the information when we know the entry is not a dir\n    #markENOTDIR() {\n        // entry is not a directory, so any children can't exist.\n        // this *should* be impossible, since any children created\n        // after it's been marked ENOTDIR should be marked ENOENT,\n        // so it won't even get to this point.\n        /* c8 ignore start */\n        if (this.#type & ENOTDIR)\n            return;\n        /* c8 ignore stop */\n        let t = this.#type;\n        // this could happen if we stat a dir, then delete it,\n        // then try to read it or one of its children.\n        if ((t & IFMT) === IFDIR)\n            t &= IFMT_UNKNOWN;\n        this.#type = t | ENOTDIR;\n        this.#markChildrenENOENT();\n    }\n    #readdirFail(code = '') {\n        // markENOTDIR and markENOENT also set provisional=0\n        if (code === 'ENOTDIR' || code === 'EPERM') {\n            this.#markENOTDIR();\n        }\n        else if (code === 'ENOENT') {\n            this.#markENOENT();\n        }\n        else {\n            this.children().provisional = 0;\n        }\n    }\n    #lstatFail(code = '') {\n        // Windows just raises ENOENT in this case, disable for win CI\n        /* c8 ignore start */\n        if (code === 'ENOTDIR') {\n            // already know it has a parent by this point\n            const p = this.parent;\n            p.#markENOTDIR();\n        }\n        else if (code === 'ENOENT') {\n            /* c8 ignore stop */\n            this.#markENOENT();\n        }\n    }\n    #readlinkFail(code = '') {\n        let ter = this.#type;\n        ter |= ENOREADLINK;\n        if (code === 'ENOENT')\n            ter |= ENOENT;\n        // windows gets a weird error when you try to readlink a file\n        if (code === 'EINVAL' || code === 'UNKNOWN') {\n            // exists, but not a symlink, we don't know WHAT it is, so remove\n            // all IFMT bits.\n            ter &= IFMT_UNKNOWN;\n        }\n        this.#type = ter;\n        // windows just gets ENOENT in this case.  We do cover the case,\n        // just disabled because it's impossible on Windows CI\n        /* c8 ignore start */\n        if (code === 'ENOTDIR' && this.parent) {\n            this.parent.#markENOTDIR();\n        }\n        /* c8 ignore stop */\n    }\n    #readdirAddChild(e, c) {\n        return (this.#readdirMaybePromoteChild(e, c) ||\n            this.#readdirAddNewChild(e, c));\n    }\n    #readdirAddNewChild(e, c) {\n        // alloc new entry at head, so it's never provisional\n        const type = entToType(e);\n        const child = this.newChild(e.name, type, { parent: this });\n        const ifmt = child.#type & IFMT;\n        if (ifmt !== IFDIR && ifmt !== IFLNK && ifmt !== UNKNOWN) {\n            child.#type |= ENOTDIR;\n        }\n        c.unshift(child);\n        c.provisional++;\n        return child;\n    }\n    #readdirMaybePromoteChild(e, c) {\n        for (let p = c.provisional; p < c.length; p++) {\n            const pchild = c[p];\n            const name = this.nocase ? normalizeNocase(e.name) : normalize(e.name);\n            if (name !== pchild.#matchName) {\n                continue;\n            }\n            return this.#readdirPromoteChild(e, pchild, p, c);\n        }\n    }\n    #readdirPromoteChild(e, p, index, c) {\n        const v = p.name;\n        // retain any other flags, but set ifmt from dirent\n        p.#type = (p.#type & IFMT_UNKNOWN) | entToType(e);\n        // case sensitivity fixing when we learn the true name.\n        if (v !== e.name)\n            p.name = e.name;\n        // just advance provisional index (potentially off the list),\n        // otherwise we have to splice/pop it out and re-insert at head\n        if (index !== c.provisional) {\n            if (index === c.length - 1)\n                c.pop();\n            else\n                c.splice(index, 1);\n            c.unshift(p);\n        }\n        c.provisional++;\n        return p;\n    }\n    /**\n     * Call lstat() on this Path, and update all known information that can be\n     * determined.\n     *\n     * Note that unlike `fs.lstat()`, the returned value does not contain some\n     * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n     * information is required, you will need to call `fs.lstat` yourself.\n     *\n     * If the Path refers to a nonexistent file, or if the lstat call fails for\n     * any reason, `undefined` is returned.  Otherwise the updated Path object is\n     * returned.\n     *\n     * Results are cached, and thus may be out of date if the filesystem is\n     * mutated.\n     */\n    async lstat() {\n        if ((this.#type & ENOENT) === 0) {\n            try {\n                this.#applyStat(await this.#fs.promises.lstat(this.fullpath()));\n                return this;\n            }\n            catch (er) {\n                this.#lstatFail(er.code);\n            }\n        }\n    }\n    /**\n     * synchronous {@link PathBase.lstat}\n     */\n    lstatSync() {\n        if ((this.#type & ENOENT) === 0) {\n            try {\n                this.#applyStat(this.#fs.lstatSync(this.fullpath()));\n                return this;\n            }\n            catch (er) {\n                this.#lstatFail(er.code);\n            }\n        }\n    }\n    #applyStat(st) {\n        const { atime, atimeMs, birthtime, birthtimeMs, blksize, blocks, ctime, ctimeMs, dev, gid, ino, mode, mtime, mtimeMs, nlink, rdev, size, uid, } = st;\n        this.#atime = atime;\n        this.#atimeMs = atimeMs;\n        this.#birthtime = birthtime;\n        this.#birthtimeMs = birthtimeMs;\n        this.#blksize = blksize;\n        this.#blocks = blocks;\n        this.#ctime = ctime;\n        this.#ctimeMs = ctimeMs;\n        this.#dev = dev;\n        this.#gid = gid;\n        this.#ino = ino;\n        this.#mode = mode;\n        this.#mtime = mtime;\n        this.#mtimeMs = mtimeMs;\n        this.#nlink = nlink;\n        this.#rdev = rdev;\n        this.#size = size;\n        this.#uid = uid;\n        const ifmt = entToType(st);\n        // retain any other flags, but set the ifmt\n        this.#type = (this.#type & IFMT_UNKNOWN) | ifmt | LSTAT_CALLED;\n        if (ifmt !== UNKNOWN && ifmt !== IFDIR && ifmt !== IFLNK) {\n            this.#type |= ENOTDIR;\n        }\n    }\n    #onReaddirCB = [];\n    #readdirCBInFlight = false;\n    #callOnReaddirCB(children) {\n        this.#readdirCBInFlight = false;\n        const cbs = this.#onReaddirCB.slice();\n        this.#onReaddirCB.length = 0;\n        cbs.forEach(cb => cb(null, children));\n    }\n    /**\n     * Standard node-style callback interface to get list of directory entries.\n     *\n     * If the Path cannot or does not contain any children, then an empty array\n     * is returned.\n     *\n     * Results are cached, and thus may be out of date if the filesystem is\n     * mutated.\n     *\n     * @param cb The callback called with (er, entries).  Note that the `er`\n     * param is somewhat extraneous, as all readdir() errors are handled and\n     * simply result in an empty set of entries being returned.\n     * @param allowZalgo Boolean indicating that immediately known results should\n     * *not* be deferred with `queueMicrotask`. Defaults to `false`. Release\n     * zalgo at your peril, the dark pony lord is devious and unforgiving.\n     */\n    readdirCB(cb, allowZalgo = false) {\n        if (!this.canReaddir()) {\n            if (allowZalgo)\n                cb(null, []);\n            else\n                queueMicrotask(() => cb(null, []));\n            return;\n        }\n        const children = this.children();\n        if (this.calledReaddir()) {\n            const c = children.slice(0, children.provisional);\n            if (allowZalgo)\n                cb(null, c);\n            else\n                queueMicrotask(() => cb(null, c));\n            return;\n        }\n        // don't have to worry about zalgo at this point.\n        this.#onReaddirCB.push(cb);\n        if (this.#readdirCBInFlight) {\n            return;\n        }\n        this.#readdirCBInFlight = true;\n        // else read the directory, fill up children\n        // de-provisionalize any provisional children.\n        const fullpath = this.fullpath();\n        this.#fs.readdir(fullpath, { withFileTypes: true }, (er, entries) => {\n            if (er) {\n                this.#readdirFail(er.code);\n                children.provisional = 0;\n            }\n            else {\n                // if we didn't get an error, we always get entries.\n                //@ts-ignore\n                for (const e of entries) {\n                    this.#readdirAddChild(e, children);\n                }\n                this.#readdirSuccess(children);\n            }\n            this.#callOnReaddirCB(children.slice(0, children.provisional));\n            return;\n        });\n    }\n    #asyncReaddirInFlight;\n    /**\n     * Return an array of known child entries.\n     *\n     * If the Path cannot or does not contain any children, then an empty array\n     * is returned.\n     *\n     * Results are cached, and thus may be out of date if the filesystem is\n     * mutated.\n     */\n    async readdir() {\n        if (!this.canReaddir()) {\n            return [];\n        }\n        const children = this.children();\n        if (this.calledReaddir()) {\n            return children.slice(0, children.provisional);\n        }\n        // else read the directory, fill up children\n        // de-provisionalize any provisional children.\n        const fullpath = this.fullpath();\n        if (this.#asyncReaddirInFlight) {\n            await this.#asyncReaddirInFlight;\n        }\n        else {\n            /* c8 ignore start */\n            let resolve = () => { };\n            /* c8 ignore stop */\n            this.#asyncReaddirInFlight = new Promise(res => (resolve = res));\n            try {\n                for (const e of await this.#fs.promises.readdir(fullpath, {\n                    withFileTypes: true,\n                })) {\n                    this.#readdirAddChild(e, children);\n                }\n                this.#readdirSuccess(children);\n            }\n            catch (er) {\n                this.#readdirFail(er.code);\n                children.provisional = 0;\n            }\n            this.#asyncReaddirInFlight = undefined;\n            resolve();\n        }\n        return children.slice(0, children.provisional);\n    }\n    /**\n     * synchronous {@link PathBase.readdir}\n     */\n    readdirSync() {\n        if (!this.canReaddir()) {\n            return [];\n        }\n        const children = this.children();\n        if (this.calledReaddir()) {\n            return children.slice(0, children.provisional);\n        }\n        // else read the directory, fill up children\n        // de-provisionalize any provisional children.\n        const fullpath = this.fullpath();\n        try {\n            for (const e of this.#fs.readdirSync(fullpath, {\n                withFileTypes: true,\n            })) {\n                this.#readdirAddChild(e, children);\n            }\n            this.#readdirSuccess(children);\n        }\n        catch (er) {\n            this.#readdirFail(er.code);\n            children.provisional = 0;\n        }\n        return children.slice(0, children.provisional);\n    }\n    canReaddir() {\n        if (this.#type & ENOCHILD)\n            return false;\n        const ifmt = IFMT & this.#type;\n        // we always set ENOTDIR when setting IFMT, so should be impossible\n        /* c8 ignore start */\n        if (!(ifmt === UNKNOWN || ifmt === IFDIR || ifmt === IFLNK)) {\n            return false;\n        }\n        /* c8 ignore stop */\n        return true;\n    }\n    shouldWalk(dirs, walkFilter) {\n        return ((this.#type & IFDIR) === IFDIR &&\n            !(this.#type & ENOCHILD) &&\n            !dirs.has(this) &&\n            (!walkFilter || walkFilter(this)));\n    }\n    /**\n     * Return the Path object corresponding to path as resolved\n     * by realpath(3).\n     *\n     * If the realpath call fails for any reason, `undefined` is returned.\n     *\n     * Result is cached, and thus may be outdated if the filesystem is mutated.\n     * On success, returns a Path object.\n     */\n    async realpath() {\n        if (this.#realpath)\n            return this.#realpath;\n        if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type)\n            return undefined;\n        try {\n            const rp = await this.#fs.promises.realpath(this.fullpath());\n            return (this.#realpath = this.resolve(rp));\n        }\n        catch (_) {\n            this.#markENOREALPATH();\n        }\n    }\n    /**\n     * Synchronous {@link realpath}\n     */\n    realpathSync() {\n        if (this.#realpath)\n            return this.#realpath;\n        if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type)\n            return undefined;\n        try {\n            const rp = this.#fs.realpathSync(this.fullpath());\n            return (this.#realpath = this.resolve(rp));\n        }\n        catch (_) {\n            this.#markENOREALPATH();\n        }\n    }\n    /**\n     * Internal method to mark this Path object as the scurry cwd,\n     * called by {@link PathScurry#chdir}\n     *\n     * @internal\n     */\n    [setAsCwd](oldCwd) {\n        if (oldCwd === this)\n            return;\n        oldCwd.isCWD = false;\n        this.isCWD = true;\n        const changed = new Set([]);\n        let rp = [];\n        let p = this;\n        while (p && p.parent) {\n            changed.add(p);\n            p.#relative = rp.join(this.sep);\n            p.#relativePosix = rp.join('/');\n            p = p.parent;\n            rp.push('..');\n        }\n        // now un-memoize parents of old cwd\n        p = oldCwd;\n        while (p && p.parent && !changed.has(p)) {\n            p.#relative = undefined;\n            p.#relativePosix = undefined;\n            p = p.parent;\n        }\n    }\n}\nexports.PathBase = PathBase;\n/**\n * Path class used on win32 systems\n *\n * Uses `'\\\\'` as the path separator for returned paths, either `'\\\\'` or `'/'`\n * as the path separator for parsing paths.\n */\nclass PathWin32 extends PathBase {\n    /**\n     * Separator for generating path strings.\n     */\n    sep = '\\\\';\n    /**\n     * Separator for parsing path strings.\n     */\n    splitSep = eitherSep;\n    /**\n     * Do not create new Path objects directly.  They should always be accessed\n     * via the PathScurry class or other methods on the Path class.\n     *\n     * @internal\n     */\n    constructor(name, type = UNKNOWN, root, roots, nocase, children, opts) {\n        super(name, type, root, roots, nocase, children, opts);\n    }\n    /**\n     * @internal\n     */\n    newChild(name, type = UNKNOWN, opts = {}) {\n        return new PathWin32(name, type, this.root, this.roots, this.nocase, this.childrenCache(), opts);\n    }\n    /**\n     * @internal\n     */\n    getRootString(path) {\n        return node_path_1.win32.parse(path).root;\n    }\n    /**\n     * @internal\n     */\n    getRoot(rootPath) {\n        rootPath = uncToDrive(rootPath.toUpperCase());\n        if (rootPath === this.root.name) {\n            return this.root;\n        }\n        // ok, not that one, check if it matches another we know about\n        for (const [compare, root] of Object.entries(this.roots)) {\n            if (this.sameRoot(rootPath, compare)) {\n                return (this.roots[rootPath] = root);\n            }\n        }\n        // otherwise, have to create a new one.\n        return (this.roots[rootPath] = new PathScurryWin32(rootPath, this).root);\n    }\n    /**\n     * @internal\n     */\n    sameRoot(rootPath, compare = this.root.name) {\n        // windows can (rarely) have case-sensitive filesystem, but\n        // UNC and drive letters are always case-insensitive, and canonically\n        // represented uppercase.\n        rootPath = rootPath\n            .toUpperCase()\n            .replace(/\\//g, '\\\\')\n            .replace(uncDriveRegexp, '$1\\\\');\n        return rootPath === compare;\n    }\n}\nexports.PathWin32 = PathWin32;\n/**\n * Path class used on all posix systems.\n *\n * Uses `'/'` as the path separator.\n */\nclass PathPosix extends PathBase {\n    /**\n     * separator for parsing path strings\n     */\n    splitSep = '/';\n    /**\n     * separator for generating path strings\n     */\n    sep = '/';\n    /**\n     * Do not create new Path objects directly.  They should always be accessed\n     * via the PathScurry class or other methods on the Path class.\n     *\n     * @internal\n     */\n    constructor(name, type = UNKNOWN, root, roots, nocase, children, opts) {\n        super(name, type, root, roots, nocase, children, opts);\n    }\n    /**\n     * @internal\n     */\n    getRootString(path) {\n        return path.startsWith('/') ? '/' : '';\n    }\n    /**\n     * @internal\n     */\n    getRoot(_rootPath) {\n        return this.root;\n    }\n    /**\n     * @internal\n     */\n    newChild(name, type = UNKNOWN, opts = {}) {\n        return new PathPosix(name, type, this.root, this.roots, this.nocase, this.childrenCache(), opts);\n    }\n}\nexports.PathPosix = PathPosix;\n/**\n * The base class for all PathScurry classes, providing the interface for path\n * resolution and filesystem operations.\n *\n * Typically, you should *not* instantiate this class directly, but rather one\n * of the platform-specific classes, or the exported {@link PathScurry} which\n * defaults to the current platform.\n */\nclass PathScurryBase {\n    /**\n     * The root Path entry for the current working directory of this Scurry\n     */\n    root;\n    /**\n     * The string path for the root of this Scurry's current working directory\n     */\n    rootPath;\n    /**\n     * A collection of all roots encountered, referenced by rootPath\n     */\n    roots;\n    /**\n     * The Path entry corresponding to this PathScurry's current working directory.\n     */\n    cwd;\n    #resolveCache;\n    #resolvePosixCache;\n    #children;\n    /**\n     * Perform path comparisons case-insensitively.\n     *\n     * Defaults true on Darwin and Windows systems, false elsewhere.\n     */\n    nocase;\n    #fs;\n    /**\n     * This class should not be instantiated directly.\n     *\n     * Use PathScurryWin32, PathScurryDarwin, PathScurryPosix, or PathScurry\n     *\n     * @internal\n     */\n    constructor(cwd = process.cwd(), pathImpl, sep, { nocase, childrenCacheSize = 16 * 1024, fs = defaultFS, } = {}) {\n        this.#fs = fsFromOption(fs);\n        if (cwd instanceof URL || cwd.startsWith('file://')) {\n            cwd = (0, node_url_1.fileURLToPath)(cwd);\n        }\n        // resolve and split root, and then add to the store.\n        // this is the only time we call path.resolve()\n        const cwdPath = pathImpl.resolve(cwd);\n        this.roots = Object.create(null);\n        this.rootPath = this.parseRootPath(cwdPath);\n        this.#resolveCache = new ResolveCache();\n        this.#resolvePosixCache = new ResolveCache();\n        this.#children = new ChildrenCache(childrenCacheSize);\n        const split = cwdPath.substring(this.rootPath.length).split(sep);\n        // resolve('/') leaves '', splits to [''], we don't want that.\n        if (split.length === 1 && !split[0]) {\n            split.pop();\n        }\n        /* c8 ignore start */\n        if (nocase === undefined) {\n            throw new TypeError('must provide nocase setting to PathScurryBase ctor');\n        }\n        /* c8 ignore stop */\n        this.nocase = nocase;\n        this.root = this.newRoot(this.#fs);\n        this.roots[this.rootPath] = this.root;\n        let prev = this.root;\n        let len = split.length - 1;\n        const joinSep = pathImpl.sep;\n        let abs = this.rootPath;\n        let sawFirst = false;\n        for (const part of split) {\n            const l = len--;\n            prev = prev.child(part, {\n                relative: new Array(l).fill('..').join(joinSep),\n                relativePosix: new Array(l).fill('..').join('/'),\n                fullpath: (abs += (sawFirst ? '' : joinSep) + part),\n            });\n            sawFirst = true;\n        }\n        this.cwd = prev;\n    }\n    /**\n     * Get the depth of a provided path, string, or the cwd\n     */\n    depth(path = this.cwd) {\n        if (typeof path === 'string') {\n            path = this.cwd.resolve(path);\n        }\n        return path.depth();\n    }\n    /**\n     * Return the cache of child entries.  Exposed so subclasses can create\n     * child Path objects in a platform-specific way.\n     *\n     * @internal\n     */\n    childrenCache() {\n        return this.#children;\n    }\n    /**\n     * Resolve one or more path strings to a resolved string\n     *\n     * Same interface as require('path').resolve.\n     *\n     * Much faster than path.resolve() when called multiple times for the same\n     * path, because the resolved Path objects are cached.  Much slower\n     * otherwise.\n     */\n    resolve(...paths) {\n        // first figure out the minimum number of paths we have to test\n        // we always start at cwd, but any absolutes will bump the start\n        let r = '';\n        for (let i = paths.length - 1; i >= 0; i--) {\n            const p = paths[i];\n            if (!p || p === '.')\n                continue;\n            r = r ? `${p}/${r}` : p;\n            if (this.isAbsolute(p)) {\n                break;\n            }\n        }\n        const cached = this.#resolveCache.get(r);\n        if (cached !== undefined) {\n            return cached;\n        }\n        const result = this.cwd.resolve(r).fullpath();\n        this.#resolveCache.set(r, result);\n        return result;\n    }\n    /**\n     * Resolve one or more path strings to a resolved string, returning\n     * the posix path.  Identical to .resolve() on posix systems, but on\n     * windows will return a forward-slash separated UNC path.\n     *\n     * Same interface as require('path').resolve.\n     *\n     * Much faster than path.resolve() when called multiple times for the same\n     * path, because the resolved Path objects are cached.  Much slower\n     * otherwise.\n     */\n    resolvePosix(...paths) {\n        // first figure out the minimum number of paths we have to test\n        // we always start at cwd, but any absolutes will bump the start\n        let r = '';\n        for (let i = paths.length - 1; i >= 0; i--) {\n            const p = paths[i];\n            if (!p || p === '.')\n                continue;\n            r = r ? `${p}/${r}` : p;\n            if (this.isAbsolute(p)) {\n                break;\n            }\n        }\n        const cached = this.#resolvePosixCache.get(r);\n        if (cached !== undefined) {\n            return cached;\n        }\n        const result = this.cwd.resolve(r).fullpathPosix();\n        this.#resolvePosixCache.set(r, result);\n        return result;\n    }\n    /**\n     * find the relative path from the cwd to the supplied path string or entry\n     */\n    relative(entry = this.cwd) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        return entry.relative();\n    }\n    /**\n     * find the relative path from the cwd to the supplied path string or\n     * entry, using / as the path delimiter, even on Windows.\n     */\n    relativePosix(entry = this.cwd) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        return entry.relativePosix();\n    }\n    /**\n     * Return the basename for the provided string or Path object\n     */\n    basename(entry = this.cwd) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        return entry.name;\n    }\n    /**\n     * Return the dirname for the provided string or Path object\n     */\n    dirname(entry = this.cwd) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        return (entry.parent || entry).fullpath();\n    }\n    async readdir(entry = this.cwd, opts = {\n        withFileTypes: true,\n    }) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            opts = entry;\n            entry = this.cwd;\n        }\n        const { withFileTypes } = opts;\n        if (!entry.canReaddir()) {\n            return [];\n        }\n        else {\n            const p = await entry.readdir();\n            return withFileTypes ? p : p.map(e => e.name);\n        }\n    }\n    readdirSync(entry = this.cwd, opts = {\n        withFileTypes: true,\n    }) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            opts = entry;\n            entry = this.cwd;\n        }\n        const { withFileTypes = true } = opts;\n        if (!entry.canReaddir()) {\n            return [];\n        }\n        else if (withFileTypes) {\n            return entry.readdirSync();\n        }\n        else {\n            return entry.readdirSync().map(e => e.name);\n        }\n    }\n    /**\n     * Call lstat() on the string or Path object, and update all known\n     * information that can be determined.\n     *\n     * Note that unlike `fs.lstat()`, the returned value does not contain some\n     * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n     * information is required, you will need to call `fs.lstat` yourself.\n     *\n     * If the Path refers to a nonexistent file, or if the lstat call fails for\n     * any reason, `undefined` is returned.  Otherwise the updated Path object is\n     * returned.\n     *\n     * Results are cached, and thus may be out of date if the filesystem is\n     * mutated.\n     */\n    async lstat(entry = this.cwd) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        return entry.lstat();\n    }\n    /**\n     * synchronous {@link PathScurryBase.lstat}\n     */\n    lstatSync(entry = this.cwd) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        return entry.lstatSync();\n    }\n    async readlink(entry = this.cwd, { withFileTypes } = {\n        withFileTypes: false,\n    }) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            withFileTypes = entry.withFileTypes;\n            entry = this.cwd;\n        }\n        const e = await entry.readlink();\n        return withFileTypes ? e : e?.fullpath();\n    }\n    readlinkSync(entry = this.cwd, { withFileTypes } = {\n        withFileTypes: false,\n    }) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            withFileTypes = entry.withFileTypes;\n            entry = this.cwd;\n        }\n        const e = entry.readlinkSync();\n        return withFileTypes ? e : e?.fullpath();\n    }\n    async realpath(entry = this.cwd, { withFileTypes } = {\n        withFileTypes: false,\n    }) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            withFileTypes = entry.withFileTypes;\n            entry = this.cwd;\n        }\n        const e = await entry.realpath();\n        return withFileTypes ? e : e?.fullpath();\n    }\n    realpathSync(entry = this.cwd, { withFileTypes } = {\n        withFileTypes: false,\n    }) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            withFileTypes = entry.withFileTypes;\n            entry = this.cwd;\n        }\n        const e = entry.realpathSync();\n        return withFileTypes ? e : e?.fullpath();\n    }\n    async walk(entry = this.cwd, opts = {}) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            opts = entry;\n            entry = this.cwd;\n        }\n        const { withFileTypes = true, follow = false, filter, walkFilter, } = opts;\n        const results = [];\n        if (!filter || filter(entry)) {\n            results.push(withFileTypes ? entry : entry.fullpath());\n        }\n        const dirs = new Set();\n        const walk = (dir, cb) => {\n            dirs.add(dir);\n            dir.readdirCB((er, entries) => {\n                /* c8 ignore start */\n                if (er) {\n                    return cb(er);\n                }\n                /* c8 ignore stop */\n                let len = entries.length;\n                if (!len)\n                    return cb();\n                const next = () => {\n                    if (--len === 0) {\n                        cb();\n                    }\n                };\n                for (const e of entries) {\n                    if (!filter || filter(e)) {\n                        results.push(withFileTypes ? e : e.fullpath());\n                    }\n                    if (follow && e.isSymbolicLink()) {\n                        e.realpath()\n                            .then(r => (r?.isUnknown() ? r.lstat() : r))\n                            .then(r => r?.shouldWalk(dirs, walkFilter) ? walk(r, next) : next());\n                    }\n                    else {\n                        if (e.shouldWalk(dirs, walkFilter)) {\n                            walk(e, next);\n                        }\n                        else {\n                            next();\n                        }\n                    }\n                }\n            }, true); // zalgooooooo\n        };\n        const start = entry;\n        return new Promise((res, rej) => {\n            walk(start, er => {\n                /* c8 ignore start */\n                if (er)\n                    return rej(er);\n                /* c8 ignore stop */\n                res(results);\n            });\n        });\n    }\n    walkSync(entry = this.cwd, opts = {}) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            opts = entry;\n            entry = this.cwd;\n        }\n        const { withFileTypes = true, follow = false, filter, walkFilter, } = opts;\n        const results = [];\n        if (!filter || filter(entry)) {\n            results.push(withFileTypes ? entry : entry.fullpath());\n        }\n        const dirs = new Set([entry]);\n        for (const dir of dirs) {\n            const entries = dir.readdirSync();\n            for (const e of entries) {\n                if (!filter || filter(e)) {\n                    results.push(withFileTypes ? e : e.fullpath());\n                }\n                let r = e;\n                if (e.isSymbolicLink()) {\n                    if (!(follow && (r = e.realpathSync())))\n                        continue;\n                    if (r.isUnknown())\n                        r.lstatSync();\n                }\n                if (r.shouldWalk(dirs, walkFilter)) {\n                    dirs.add(r);\n                }\n            }\n        }\n        return results;\n    }\n    /**\n     * Support for `for await`\n     *\n     * Alias for {@link PathScurryBase.iterate}\n     *\n     * Note: As of Node 19, this is very slow, compared to other methods of\n     * walking.  Consider using {@link PathScurryBase.stream} if memory overhead\n     * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n     */\n    [Symbol.asyncIterator]() {\n        return this.iterate();\n    }\n    iterate(entry = this.cwd, options = {}) {\n        // iterating async over the stream is significantly more performant,\n        // especially in the warm-cache scenario, because it buffers up directory\n        // entries in the background instead of waiting for a yield for each one.\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            options = entry;\n            entry = this.cwd;\n        }\n        return this.stream(entry, options)[Symbol.asyncIterator]();\n    }\n    /**\n     * Iterating over a PathScurry performs a synchronous walk.\n     *\n     * Alias for {@link PathScurryBase.iterateSync}\n     */\n    [Symbol.iterator]() {\n        return this.iterateSync();\n    }\n    *iterateSync(entry = this.cwd, opts = {}) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            opts = entry;\n            entry = this.cwd;\n        }\n        const { withFileTypes = true, follow = false, filter, walkFilter, } = opts;\n        if (!filter || filter(entry)) {\n            yield withFileTypes ? entry : entry.fullpath();\n        }\n        const dirs = new Set([entry]);\n        for (const dir of dirs) {\n            const entries = dir.readdirSync();\n            for (const e of entries) {\n                if (!filter || filter(e)) {\n                    yield withFileTypes ? e : e.fullpath();\n                }\n                let r = e;\n                if (e.isSymbolicLink()) {\n                    if (!(follow && (r = e.realpathSync())))\n                        continue;\n                    if (r.isUnknown())\n                        r.lstatSync();\n                }\n                if (r.shouldWalk(dirs, walkFilter)) {\n                    dirs.add(r);\n                }\n            }\n        }\n    }\n    stream(entry = this.cwd, opts = {}) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            opts = entry;\n            entry = this.cwd;\n        }\n        const { withFileTypes = true, follow = false, filter, walkFilter, } = opts;\n        const results = new minipass_1.Minipass({ objectMode: true });\n        if (!filter || filter(entry)) {\n            results.write(withFileTypes ? entry : entry.fullpath());\n        }\n        const dirs = new Set();\n        const queue = [entry];\n        let processing = 0;\n        const process = () => {\n            let paused = false;\n            while (!paused) {\n                const dir = queue.shift();\n                if (!dir) {\n                    if (processing === 0)\n                        results.end();\n                    return;\n                }\n                processing++;\n                dirs.add(dir);\n                const onReaddir = (er, entries, didRealpaths = false) => {\n                    /* c8 ignore start */\n                    if (er)\n                        return results.emit('error', er);\n                    /* c8 ignore stop */\n                    if (follow && !didRealpaths) {\n                        const promises = [];\n                        for (const e of entries) {\n                            if (e.isSymbolicLink()) {\n                                promises.push(e\n                                    .realpath()\n                                    .then((r) => r?.isUnknown() ? r.lstat() : r));\n                            }\n                        }\n                        if (promises.length) {\n                            Promise.all(promises).then(() => onReaddir(null, entries, true));\n                            return;\n                        }\n                    }\n                    for (const e of entries) {\n                        if (e && (!filter || filter(e))) {\n                            if (!results.write(withFileTypes ? e : e.fullpath())) {\n                                paused = true;\n                            }\n                        }\n                    }\n                    processing--;\n                    for (const e of entries) {\n                        const r = e.realpathCached() || e;\n                        if (r.shouldWalk(dirs, walkFilter)) {\n                            queue.push(r);\n                        }\n                    }\n                    if (paused && !results.flowing) {\n                        results.once('drain', process);\n                    }\n                    else if (!sync) {\n                        process();\n                    }\n                };\n                // zalgo containment\n                let sync = true;\n                dir.readdirCB(onReaddir, true);\n                sync = false;\n            }\n        };\n        process();\n        return results;\n    }\n    streamSync(entry = this.cwd, opts = {}) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            opts = entry;\n            entry = this.cwd;\n        }\n        const { withFileTypes = true, follow = false, filter, walkFilter, } = opts;\n        const results = new minipass_1.Minipass({ objectMode: true });\n        const dirs = new Set();\n        if (!filter || filter(entry)) {\n            results.write(withFileTypes ? entry : entry.fullpath());\n        }\n        const queue = [entry];\n        let processing = 0;\n        const process = () => {\n            let paused = false;\n            while (!paused) {\n                const dir = queue.shift();\n                if (!dir) {\n                    if (processing === 0)\n                        results.end();\n                    return;\n                }\n                processing++;\n                dirs.add(dir);\n                const entries = dir.readdirSync();\n                for (const e of entries) {\n                    if (!filter || filter(e)) {\n                        if (!results.write(withFileTypes ? e : e.fullpath())) {\n                            paused = true;\n                        }\n                    }\n                }\n                processing--;\n                for (const e of entries) {\n                    let r = e;\n                    if (e.isSymbolicLink()) {\n                        if (!(follow && (r = e.realpathSync())))\n                            continue;\n                        if (r.isUnknown())\n                            r.lstatSync();\n                    }\n                    if (r.shouldWalk(dirs, walkFilter)) {\n                        queue.push(r);\n                    }\n                }\n            }\n            if (paused && !results.flowing)\n                results.once('drain', process);\n        };\n        process();\n        return results;\n    }\n    chdir(path = this.cwd) {\n        const oldCwd = this.cwd;\n        this.cwd = typeof path === 'string' ? this.cwd.resolve(path) : path;\n        this.cwd[setAsCwd](oldCwd);\n    }\n}\nexports.PathScurryBase = PathScurryBase;\n/**\n * Windows implementation of {@link PathScurryBase}\n *\n * Defaults to case insensitve, uses `'\\\\'` to generate path strings.  Uses\n * {@link PathWin32} for Path objects.\n */\nclass PathScurryWin32 extends PathScurryBase {\n    /**\n     * separator for generating path strings\n     */\n    sep = '\\\\';\n    constructor(cwd = process.cwd(), opts = {}) {\n        const { nocase = true } = opts;\n        super(cwd, node_path_1.win32, '\\\\', { ...opts, nocase });\n        this.nocase = nocase;\n        for (let p = this.cwd; p; p = p.parent) {\n            p.nocase = this.nocase;\n        }\n    }\n    /**\n     * @internal\n     */\n    parseRootPath(dir) {\n        // if the path starts with a single separator, it's not a UNC, and we'll\n        // just get separator as the root, and driveFromUNC will return \\\n        // In that case, mount \\ on the root from the cwd.\n        return node_path_1.win32.parse(dir).root.toUpperCase();\n    }\n    /**\n     * @internal\n     */\n    newRoot(fs) {\n        return new PathWin32(this.rootPath, IFDIR, undefined, this.roots, this.nocase, this.childrenCache(), { fs });\n    }\n    /**\n     * Return true if the provided path string is an absolute path\n     */\n    isAbsolute(p) {\n        return (p.startsWith('/') || p.startsWith('\\\\') || /^[a-z]:(\\/|\\\\)/i.test(p));\n    }\n}\nexports.PathScurryWin32 = PathScurryWin32;\n/**\n * {@link PathScurryBase} implementation for all posix systems other than Darwin.\n *\n * Defaults to case-sensitive matching, uses `'/'` to generate path strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nclass PathScurryPosix extends PathScurryBase {\n    /**\n     * separator for generating path strings\n     */\n    sep = '/';\n    constructor(cwd = process.cwd(), opts = {}) {\n        const { nocase = false } = opts;\n        super(cwd, node_path_1.posix, '/', { ...opts, nocase });\n        this.nocase = nocase;\n    }\n    /**\n     * @internal\n     */\n    parseRootPath(_dir) {\n        return '/';\n    }\n    /**\n     * @internal\n     */\n    newRoot(fs) {\n        return new PathPosix(this.rootPath, IFDIR, undefined, this.roots, this.nocase, this.childrenCache(), { fs });\n    }\n    /**\n     * Return true if the provided path string is an absolute path\n     */\n    isAbsolute(p) {\n        return p.startsWith('/');\n    }\n}\nexports.PathScurryPosix = PathScurryPosix;\n/**\n * {@link PathScurryBase} implementation for Darwin (macOS) systems.\n *\n * Defaults to case-insensitive matching, uses `'/'` for generating path\n * strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nclass PathScurryDarwin extends PathScurryPosix {\n    constructor(cwd = process.cwd(), opts = {}) {\n        const { nocase = true } = opts;\n        super(cwd, { ...opts, nocase });\n    }\n}\nexports.PathScurryDarwin = PathScurryDarwin;\n/**\n * Default {@link PathBase} implementation for the current platform.\n *\n * {@link PathWin32} on Windows systems, {@link PathPosix} on all others.\n */\nexports.Path = process.platform === 'win32' ? PathWin32 : PathPosix;\n/**\n * Default {@link PathScurryBase} implementation for the current platform.\n *\n * {@link PathScurryWin32} on Windows systems, {@link PathScurryDarwin} on\n * Darwin (macOS) systems, {@link PathScurryPosix} on all others.\n */\nexports.PathScurry = process.platform === 'win32' ? PathScurryWin32\n    : process.platform === 'darwin' ? PathScurryDarwin\n        : PathScurryPosix;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Minipass = exports.isWritable = exports.isReadable = exports.isStream = void 0;\nconst proc = typeof process === 'object' && process\n    ? process\n    : {\n        stdout: null,\n        stderr: null,\n    };\nconst node_events_1 = require(\"node:events\");\nconst node_stream_1 = __importDefault(require(\"node:stream\"));\nconst node_string_decoder_1 = require(\"node:string_decoder\");\n/**\n * Return true if the argument is a Minipass stream, Node stream, or something\n * else that Minipass can interact with.\n */\nconst isStream = (s) => !!s &&\n    typeof s === 'object' &&\n    (s instanceof Minipass ||\n        s instanceof node_stream_1.default ||\n        (0, exports.isReadable)(s) ||\n        (0, exports.isWritable)(s));\nexports.isStream = isStream;\n/**\n * Return true if the argument is a valid {@link Minipass.Readable}\n */\nconst isReadable = (s) => !!s &&\n    typeof s === 'object' &&\n    s instanceof node_events_1.EventEmitter &&\n    typeof s.pipe === 'function' &&\n    // node core Writable streams have a pipe() method, but it throws\n    s.pipe !== node_stream_1.default.Writable.prototype.pipe;\nexports.isReadable = isReadable;\n/**\n * Return true if the argument is a valid {@link Minipass.Writable}\n */\nconst isWritable = (s) => !!s &&\n    typeof s === 'object' &&\n    s instanceof node_events_1.EventEmitter &&\n    typeof s.write === 'function' &&\n    typeof s.end === 'function';\nexports.isWritable = isWritable;\nconst EOF = Symbol('EOF');\nconst MAYBE_EMIT_END = Symbol('maybeEmitEnd');\nconst EMITTED_END = Symbol('emittedEnd');\nconst EMITTING_END = Symbol('emittingEnd');\nconst EMITTED_ERROR = Symbol('emittedError');\nconst CLOSED = Symbol('closed');\nconst READ = Symbol('read');\nconst FLUSH = Symbol('flush');\nconst FLUSHCHUNK = Symbol('flushChunk');\nconst ENCODING = Symbol('encoding');\nconst DECODER = Symbol('decoder');\nconst FLOWING = Symbol('flowing');\nconst PAUSED = Symbol('paused');\nconst RESUME = Symbol('resume');\nconst BUFFER = Symbol('buffer');\nconst PIPES = Symbol('pipes');\nconst BUFFERLENGTH = Symbol('bufferLength');\nconst BUFFERPUSH = Symbol('bufferPush');\nconst BUFFERSHIFT = Symbol('bufferShift');\nconst OBJECTMODE = Symbol('objectMode');\n// internal event when stream is destroyed\nconst DESTROYED = Symbol('destroyed');\n// internal event when stream has an error\nconst ERROR = Symbol('error');\nconst EMITDATA = Symbol('emitData');\nconst EMITEND = Symbol('emitEnd');\nconst EMITEND2 = Symbol('emitEnd2');\nconst ASYNC = Symbol('async');\nconst ABORT = Symbol('abort');\nconst ABORTED = Symbol('aborted');\nconst SIGNAL = Symbol('signal');\nconst DATALISTENERS = Symbol('dataListeners');\nconst DISCARDED = Symbol('discarded');\nconst defer = (fn) => Promise.resolve().then(fn);\nconst nodefer = (fn) => fn();\nconst isEndish = (ev) => ev === 'end' || ev === 'finish' || ev === 'prefinish';\nconst isArrayBufferLike = (b) => b instanceof ArrayBuffer ||\n    (!!b &&\n        typeof b === 'object' &&\n        b.constructor &&\n        b.constructor.name === 'ArrayBuffer' &&\n        b.byteLength >= 0);\nconst isArrayBufferView = (b) => !Buffer.isBuffer(b) && ArrayBuffer.isView(b);\n/**\n * Internal class representing a pipe to a destination stream.\n *\n * @internal\n */\nclass Pipe {\n    src;\n    dest;\n    opts;\n    ondrain;\n    constructor(src, dest, opts) {\n        this.src = src;\n        this.dest = dest;\n        this.opts = opts;\n        this.ondrain = () => src[RESUME]();\n        this.dest.on('drain', this.ondrain);\n    }\n    unpipe() {\n        this.dest.removeListener('drain', this.ondrain);\n    }\n    // only here for the prototype\n    /* c8 ignore start */\n    proxyErrors(_er) { }\n    /* c8 ignore stop */\n    end() {\n        this.unpipe();\n        if (this.opts.end)\n            this.dest.end();\n    }\n}\n/**\n * Internal class representing a pipe to a destination stream where\n * errors are proxied.\n *\n * @internal\n */\nclass PipeProxyErrors extends Pipe {\n    unpipe() {\n        this.src.removeListener('error', this.proxyErrors);\n        super.unpipe();\n    }\n    constructor(src, dest, opts) {\n        super(src, dest, opts);\n        this.proxyErrors = er => dest.emit('error', er);\n        src.on('error', this.proxyErrors);\n    }\n}\nconst isObjectModeOptions = (o) => !!o.objectMode;\nconst isEncodingOptions = (o) => !o.objectMode && !!o.encoding && o.encoding !== 'buffer';\n/**\n * Main export, the Minipass class\n *\n * `RType` is the type of data emitted, defaults to Buffer\n *\n * `WType` is the type of data to be written, if RType is buffer or string,\n * then any {@link Minipass.ContiguousData} is allowed.\n *\n * `Events` is the set of event handler signatures that this object\n * will emit, see {@link Minipass.Events}\n */\nclass Minipass extends node_events_1.EventEmitter {\n    [FLOWING] = false;\n    [PAUSED] = false;\n    [PIPES] = [];\n    [BUFFER] = [];\n    [OBJECTMODE];\n    [ENCODING];\n    [ASYNC];\n    [DECODER];\n    [EOF] = false;\n    [EMITTED_END] = false;\n    [EMITTING_END] = false;\n    [CLOSED] = false;\n    [EMITTED_ERROR] = null;\n    [BUFFERLENGTH] = 0;\n    [DESTROYED] = false;\n    [SIGNAL];\n    [ABORTED] = false;\n    [DATALISTENERS] = 0;\n    [DISCARDED] = false;\n    /**\n     * true if the stream can be written\n     */\n    writable = true;\n    /**\n     * true if the stream can be read\n     */\n    readable = true;\n    /**\n     * If `RType` is Buffer, then options do not need to be provided.\n     * Otherwise, an options object must be provided to specify either\n     * {@link Minipass.SharedOptions.objectMode} or\n     * {@link Minipass.SharedOptions.encoding}, as appropriate.\n     */\n    constructor(...args) {\n        const options = (args[0] ||\n            {});\n        super();\n        if (options.objectMode && typeof options.encoding === 'string') {\n            throw new TypeError('Encoding and objectMode may not be used together');\n        }\n        if (isObjectModeOptions(options)) {\n            this[OBJECTMODE] = true;\n            this[ENCODING] = null;\n        }\n        else if (isEncodingOptions(options)) {\n            this[ENCODING] = options.encoding;\n            this[OBJECTMODE] = false;\n        }\n        else {\n            this[OBJECTMODE] = false;\n            this[ENCODING] = null;\n        }\n        this[ASYNC] = !!options.async;\n        this[DECODER] = this[ENCODING]\n            ? new node_string_decoder_1.StringDecoder(this[ENCODING])\n            : null;\n        //@ts-ignore - private option for debugging and testing\n        if (options && options.debugExposeBuffer === true) {\n            Object.defineProperty(this, 'buffer', { get: () => this[BUFFER] });\n        }\n        //@ts-ignore - private option for debugging and testing\n        if (options && options.debugExposePipes === true) {\n            Object.defineProperty(this, 'pipes', { get: () => this[PIPES] });\n        }\n        const { signal } = options;\n        if (signal) {\n            this[SIGNAL] = signal;\n            if (signal.aborted) {\n                this[ABORT]();\n            }\n            else {\n                signal.addEventListener('abort', () => this[ABORT]());\n            }\n        }\n    }\n    /**\n     * The amount of data stored in the buffer waiting to be read.\n     *\n     * For Buffer strings, this will be the total byte length.\n     * For string encoding streams, this will be the string character length,\n     * according to JavaScript's `string.length` logic.\n     * For objectMode streams, this is a count of the items waiting to be\n     * emitted.\n     */\n    get bufferLength() {\n        return this[BUFFERLENGTH];\n    }\n    /**\n     * The `BufferEncoding` currently in use, or `null`\n     */\n    get encoding() {\n        return this[ENCODING];\n    }\n    /**\n     * @deprecated - This is a read only property\n     */\n    set encoding(_enc) {\n        throw new Error('Encoding must be set at instantiation time');\n    }\n    /**\n     * @deprecated - Encoding may only be set at instantiation time\n     */\n    setEncoding(_enc) {\n        throw new Error('Encoding must be set at instantiation time');\n    }\n    /**\n     * True if this is an objectMode stream\n     */\n    get objectMode() {\n        return this[OBJECTMODE];\n    }\n    /**\n     * @deprecated - This is a read-only property\n     */\n    set objectMode(_om) {\n        throw new Error('objectMode must be set at instantiation time');\n    }\n    /**\n     * true if this is an async stream\n     */\n    get ['async']() {\n        return this[ASYNC];\n    }\n    /**\n     * Set to true to make this stream async.\n     *\n     * Once set, it cannot be unset, as this would potentially cause incorrect\n     * behavior.  Ie, a sync stream can be made async, but an async stream\n     * cannot be safely made sync.\n     */\n    set ['async'](a) {\n        this[ASYNC] = this[ASYNC] || !!a;\n    }\n    // drop everything and get out of the flow completely\n    [ABORT]() {\n        this[ABORTED] = true;\n        this.emit('abort', this[SIGNAL]?.reason);\n        this.destroy(this[SIGNAL]?.reason);\n    }\n    /**\n     * True if the stream has been aborted.\n     */\n    get aborted() {\n        return this[ABORTED];\n    }\n    /**\n     * No-op setter. Stream aborted status is set via the AbortSignal provided\n     * in the constructor options.\n     */\n    set aborted(_) { }\n    write(chunk, encoding, cb) {\n        if (this[ABORTED])\n            return false;\n        if (this[EOF])\n            throw new Error('write after end');\n        if (this[DESTROYED]) {\n            this.emit('error', Object.assign(new Error('Cannot call write after a stream was destroyed'), { code: 'ERR_STREAM_DESTROYED' }));\n            return true;\n        }\n        if (typeof encoding === 'function') {\n            cb = encoding;\n            encoding = 'utf8';\n        }\n        if (!encoding)\n            encoding = 'utf8';\n        const fn = this[ASYNC] ? defer : nodefer;\n        // convert array buffers and typed array views into buffers\n        // at some point in the future, we may want to do the opposite!\n        // leave strings and buffers as-is\n        // anything is only allowed if in object mode, so throw\n        if (!this[OBJECTMODE] && !Buffer.isBuffer(chunk)) {\n            if (isArrayBufferView(chunk)) {\n                //@ts-ignore - sinful unsafe type changing\n                chunk = Buffer.from(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n            }\n            else if (isArrayBufferLike(chunk)) {\n                //@ts-ignore - sinful unsafe type changing\n                chunk = Buffer.from(chunk);\n            }\n            else if (typeof chunk !== 'string') {\n                throw new Error('Non-contiguous data written to non-objectMode stream');\n            }\n        }\n        // handle object mode up front, since it's simpler\n        // this yields better performance, fewer checks later.\n        if (this[OBJECTMODE]) {\n            // maybe impossible?\n            /* c8 ignore start */\n            if (this[FLOWING] && this[BUFFERLENGTH] !== 0)\n                this[FLUSH](true);\n            /* c8 ignore stop */\n            if (this[FLOWING])\n                this.emit('data', chunk);\n            else\n                this[BUFFERPUSH](chunk);\n            if (this[BUFFERLENGTH] !== 0)\n                this.emit('readable');\n            if (cb)\n                fn(cb);\n            return this[FLOWING];\n        }\n        // at this point the chunk is a buffer or string\n        // don't buffer it up or send it to the decoder\n        if (!chunk.length) {\n            if (this[BUFFERLENGTH] !== 0)\n                this.emit('readable');\n            if (cb)\n                fn(cb);\n            return this[FLOWING];\n        }\n        // fast-path writing strings of same encoding to a stream with\n        // an empty buffer, skipping the buffer/decoder dance\n        if (typeof chunk === 'string' &&\n            // unless it is a string already ready for us to use\n            !(encoding === this[ENCODING] && !this[DECODER]?.lastNeed)) {\n            //@ts-ignore - sinful unsafe type change\n            chunk = Buffer.from(chunk, encoding);\n        }\n        if (Buffer.isBuffer(chunk) && this[ENCODING]) {\n            //@ts-ignore - sinful unsafe type change\n            chunk = this[DECODER].write(chunk);\n        }\n        // Note: flushing CAN potentially switch us into not-flowing mode\n        if (this[FLOWING] && this[BUFFERLENGTH] !== 0)\n            this[FLUSH](true);\n        if (this[FLOWING])\n            this.emit('data', chunk);\n        else\n            this[BUFFERPUSH](chunk);\n        if (this[BUFFERLENGTH] !== 0)\n            this.emit('readable');\n        if (cb)\n            fn(cb);\n        return this[FLOWING];\n    }\n    /**\n     * Low-level explicit read method.\n     *\n     * In objectMode, the argument is ignored, and one item is returned if\n     * available.\n     *\n     * `n` is the number of bytes (or in the case of encoding streams,\n     * characters) to consume. If `n` is not provided, then the entire buffer\n     * is returned, or `null` is returned if no data is available.\n     *\n     * If `n` is greater that the amount of data in the internal buffer,\n     * then `null` is returned.\n     */\n    read(n) {\n        if (this[DESTROYED])\n            return null;\n        this[DISCARDED] = false;\n        if (this[BUFFERLENGTH] === 0 ||\n            n === 0 ||\n            (n && n > this[BUFFERLENGTH])) {\n            this[MAYBE_EMIT_END]();\n            return null;\n        }\n        if (this[OBJECTMODE])\n            n = null;\n        if (this[BUFFER].length > 1 && !this[OBJECTMODE]) {\n            // not object mode, so if we have an encoding, then RType is string\n            // otherwise, must be Buffer\n            this[BUFFER] = [\n                (this[ENCODING]\n                    ? this[BUFFER].join('')\n                    : Buffer.concat(this[BUFFER], this[BUFFERLENGTH])),\n            ];\n        }\n        const ret = this[READ](n || null, this[BUFFER][0]);\n        this[MAYBE_EMIT_END]();\n        return ret;\n    }\n    [READ](n, chunk) {\n        if (this[OBJECTMODE])\n            this[BUFFERSHIFT]();\n        else {\n            const c = chunk;\n            if (n === c.length || n === null)\n                this[BUFFERSHIFT]();\n            else if (typeof c === 'string') {\n                this[BUFFER][0] = c.slice(n);\n                chunk = c.slice(0, n);\n                this[BUFFERLENGTH] -= n;\n            }\n            else {\n                this[BUFFER][0] = c.subarray(n);\n                chunk = c.subarray(0, n);\n                this[BUFFERLENGTH] -= n;\n            }\n        }\n        this.emit('data', chunk);\n        if (!this[BUFFER].length && !this[EOF])\n            this.emit('drain');\n        return chunk;\n    }\n    end(chunk, encoding, cb) {\n        if (typeof chunk === 'function') {\n            cb = chunk;\n            chunk = undefined;\n        }\n        if (typeof encoding === 'function') {\n            cb = encoding;\n            encoding = 'utf8';\n        }\n        if (chunk !== undefined)\n            this.write(chunk, encoding);\n        if (cb)\n            this.once('end', cb);\n        this[EOF] = true;\n        this.writable = false;\n        // if we haven't written anything, then go ahead and emit,\n        // even if we're not reading.\n        // we'll re-emit if a new 'end' listener is added anyway.\n        // This makes MP more suitable to write-only use cases.\n        if (this[FLOWING] || !this[PAUSED])\n            this[MAYBE_EMIT_END]();\n        return this;\n    }\n    // don't let the internal resume be overwritten\n    [RESUME]() {\n        if (this[DESTROYED])\n            return;\n        if (!this[DATALISTENERS] && !this[PIPES].length) {\n            this[DISCARDED] = true;\n        }\n        this[PAUSED] = false;\n        this[FLOWING] = true;\n        this.emit('resume');\n        if (this[BUFFER].length)\n            this[FLUSH]();\n        else if (this[EOF])\n            this[MAYBE_EMIT_END]();\n        else\n            this.emit('drain');\n    }\n    /**\n     * Resume the stream if it is currently in a paused state\n     *\n     * If called when there are no pipe destinations or `data` event listeners,\n     * this will place the stream in a \"discarded\" state, where all data will\n     * be thrown away. The discarded state is removed if a pipe destination or\n     * data handler is added, if pause() is called, or if any synchronous or\n     * asynchronous iteration is started.\n     */\n    resume() {\n        return this[RESUME]();\n    }\n    /**\n     * Pause the stream\n     */\n    pause() {\n        this[FLOWING] = false;\n        this[PAUSED] = true;\n        this[DISCARDED] = false;\n    }\n    /**\n     * true if the stream has been forcibly destroyed\n     */\n    get destroyed() {\n        return this[DESTROYED];\n    }\n    /**\n     * true if the stream is currently in a flowing state, meaning that\n     * any writes will be immediately emitted.\n     */\n    get flowing() {\n        return this[FLOWING];\n    }\n    /**\n     * true if the stream is currently in a paused state\n     */\n    get paused() {\n        return this[PAUSED];\n    }\n    [BUFFERPUSH](chunk) {\n        if (this[OBJECTMODE])\n            this[BUFFERLENGTH] += 1;\n        else\n            this[BUFFERLENGTH] += chunk.length;\n        this[BUFFER].push(chunk);\n    }\n    [BUFFERSHIFT]() {\n        if (this[OBJECTMODE])\n            this[BUFFERLENGTH] -= 1;\n        else\n            this[BUFFERLENGTH] -= this[BUFFER][0].length;\n        return this[BUFFER].shift();\n    }\n    [FLUSH](noDrain = false) {\n        do { } while (this[FLUSHCHUNK](this[BUFFERSHIFT]()) &&\n            this[BUFFER].length);\n        if (!noDrain && !this[BUFFER].length && !this[EOF])\n            this.emit('drain');\n    }\n    [FLUSHCHUNK](chunk) {\n        this.emit('data', chunk);\n        return this[FLOWING];\n    }\n    /**\n     * Pipe all data emitted by this stream into the destination provided.\n     *\n     * Triggers the flow of data.\n     */\n    pipe(dest, opts) {\n        if (this[DESTROYED])\n            return dest;\n        this[DISCARDED] = false;\n        const ended = this[EMITTED_END];\n        opts = opts || {};\n        if (dest === proc.stdout || dest === proc.stderr)\n            opts.end = false;\n        else\n            opts.end = opts.end !== false;\n        opts.proxyErrors = !!opts.proxyErrors;\n        // piping an ended stream ends immediately\n        if (ended) {\n            if (opts.end)\n                dest.end();\n        }\n        else {\n            // \"as\" here just ignores the WType, which pipes don't care about,\n            // since they're only consuming from us, and writing to the dest\n            this[PIPES].push(!opts.proxyErrors\n                ? new Pipe(this, dest, opts)\n                : new PipeProxyErrors(this, dest, opts));\n            if (this[ASYNC])\n                defer(() => this[RESUME]());\n            else\n                this[RESUME]();\n        }\n        return dest;\n    }\n    /**\n     * Fully unhook a piped destination stream.\n     *\n     * If the destination stream was the only consumer of this stream (ie,\n     * there are no other piped destinations or `'data'` event listeners)\n     * then the flow of data will stop until there is another consumer or\n     * {@link Minipass#resume} is explicitly called.\n     */\n    unpipe(dest) {\n        const p = this[PIPES].find(p => p.dest === dest);\n        if (p) {\n            if (this[PIPES].length === 1) {\n                if (this[FLOWING] && this[DATALISTENERS] === 0) {\n                    this[FLOWING] = false;\n                }\n                this[PIPES] = [];\n            }\n            else\n                this[PIPES].splice(this[PIPES].indexOf(p), 1);\n            p.unpipe();\n        }\n    }\n    /**\n     * Alias for {@link Minipass#on}\n     */\n    addListener(ev, handler) {\n        return this.on(ev, handler);\n    }\n    /**\n     * Mostly identical to `EventEmitter.on`, with the following\n     * behavior differences to prevent data loss and unnecessary hangs:\n     *\n     * - Adding a 'data' event handler will trigger the flow of data\n     *\n     * - Adding a 'readable' event handler when there is data waiting to be read\n     *   will cause 'readable' to be emitted immediately.\n     *\n     * - Adding an 'endish' event handler ('end', 'finish', etc.) which has\n     *   already passed will cause the event to be emitted immediately and all\n     *   handlers removed.\n     *\n     * - Adding an 'error' event handler after an error has been emitted will\n     *   cause the event to be re-emitted immediately with the error previously\n     *   raised.\n     */\n    on(ev, handler) {\n        const ret = super.on(ev, handler);\n        if (ev === 'data') {\n            this[DISCARDED] = false;\n            this[DATALISTENERS]++;\n            if (!this[PIPES].length && !this[FLOWING]) {\n                this[RESUME]();\n            }\n        }\n        else if (ev === 'readable' && this[BUFFERLENGTH] !== 0) {\n            super.emit('readable');\n        }\n        else if (isEndish(ev) && this[EMITTED_END]) {\n            super.emit(ev);\n            this.removeAllListeners(ev);\n        }\n        else if (ev === 'error' && this[EMITTED_ERROR]) {\n            const h = handler;\n            if (this[ASYNC])\n                defer(() => h.call(this, this[EMITTED_ERROR]));\n            else\n                h.call(this, this[EMITTED_ERROR]);\n        }\n        return ret;\n    }\n    /**\n     * Alias for {@link Minipass#off}\n     */\n    removeListener(ev, handler) {\n        return this.off(ev, handler);\n    }\n    /**\n     * Mostly identical to `EventEmitter.off`\n     *\n     * If a 'data' event handler is removed, and it was the last consumer\n     * (ie, there are no pipe destinations or other 'data' event listeners),\n     * then the flow of data will stop until there is another consumer or\n     * {@link Minipass#resume} is explicitly called.\n     */\n    off(ev, handler) {\n        const ret = super.off(ev, handler);\n        // if we previously had listeners, and now we don't, and we don't\n        // have any pipes, then stop the flow, unless it's been explicitly\n        // put in a discarded flowing state via stream.resume().\n        if (ev === 'data') {\n            this[DATALISTENERS] = this.listeners('data').length;\n            if (this[DATALISTENERS] === 0 &&\n                !this[DISCARDED] &&\n                !this[PIPES].length) {\n                this[FLOWING] = false;\n            }\n        }\n        return ret;\n    }\n    /**\n     * Mostly identical to `EventEmitter.removeAllListeners`\n     *\n     * If all 'data' event handlers are removed, and they were the last consumer\n     * (ie, there are no pipe destinations), then the flow of data will stop\n     * until there is another consumer or {@link Minipass#resume} is explicitly\n     * called.\n     */\n    removeAllListeners(ev) {\n        const ret = super.removeAllListeners(ev);\n        if (ev === 'data' || ev === undefined) {\n            this[DATALISTENERS] = 0;\n            if (!this[DISCARDED] && !this[PIPES].length) {\n                this[FLOWING] = false;\n            }\n        }\n        return ret;\n    }\n    /**\n     * true if the 'end' event has been emitted\n     */\n    get emittedEnd() {\n        return this[EMITTED_END];\n    }\n    [MAYBE_EMIT_END]() {\n        if (!this[EMITTING_END] &&\n            !this[EMITTED_END] &&\n            !this[DESTROYED] &&\n            this[BUFFER].length === 0 &&\n            this[EOF]) {\n            this[EMITTING_END] = true;\n            this.emit('end');\n            this.emit('prefinish');\n            this.emit('finish');\n            if (this[CLOSED])\n                this.emit('close');\n            this[EMITTING_END] = false;\n        }\n    }\n    /**\n     * Mostly identical to `EventEmitter.emit`, with the following\n     * behavior differences to prevent data loss and unnecessary hangs:\n     *\n     * If the stream has been destroyed, and the event is something other\n     * than 'close' or 'error', then `false` is returned and no handlers\n     * are called.\n     *\n     * If the event is 'end', and has already been emitted, then the event\n     * is ignored. If the stream is in a paused or non-flowing state, then\n     * the event will be deferred until data flow resumes. If the stream is\n     * async, then handlers will be called on the next tick rather than\n     * immediately.\n     *\n     * If the event is 'close', and 'end' has not yet been emitted, then\n     * the event will be deferred until after 'end' is emitted.\n     *\n     * If the event is 'error', and an AbortSignal was provided for the stream,\n     * and there are no listeners, then the event is ignored, matching the\n     * behavior of node core streams in the presense of an AbortSignal.\n     *\n     * If the event is 'finish' or 'prefinish', then all listeners will be\n     * removed after emitting the event, to prevent double-firing.\n     */\n    emit(ev, ...args) {\n        const data = args[0];\n        // error and close are only events allowed after calling destroy()\n        if (ev !== 'error' &&\n            ev !== 'close' &&\n            ev !== DESTROYED &&\n            this[DESTROYED]) {\n            return false;\n        }\n        else if (ev === 'data') {\n            return !this[OBJECTMODE] && !data\n                ? false\n                : this[ASYNC]\n                    ? (defer(() => this[EMITDATA](data)), true)\n                    : this[EMITDATA](data);\n        }\n        else if (ev === 'end') {\n            return this[EMITEND]();\n        }\n        else if (ev === 'close') {\n            this[CLOSED] = true;\n            // don't emit close before 'end' and 'finish'\n            if (!this[EMITTED_END] && !this[DESTROYED])\n                return false;\n            const ret = super.emit('close');\n            this.removeAllListeners('close');\n            return ret;\n        }\n        else if (ev === 'error') {\n            this[EMITTED_ERROR] = data;\n            super.emit(ERROR, data);\n            const ret = !this[SIGNAL] || this.listeners('error').length\n                ? super.emit('error', data)\n                : false;\n            this[MAYBE_EMIT_END]();\n            return ret;\n        }\n        else if (ev === 'resume') {\n            const ret = super.emit('resume');\n            this[MAYBE_EMIT_END]();\n            return ret;\n        }\n        else if (ev === 'finish' || ev === 'prefinish') {\n            const ret = super.emit(ev);\n            this.removeAllListeners(ev);\n            return ret;\n        }\n        // Some other unknown event\n        const ret = super.emit(ev, ...args);\n        this[MAYBE_EMIT_END]();\n        return ret;\n    }\n    [EMITDATA](data) {\n        for (const p of this[PIPES]) {\n            if (p.dest.write(data) === false)\n                this.pause();\n        }\n        const ret = this[DISCARDED] ? false : super.emit('data', data);\n        this[MAYBE_EMIT_END]();\n        return ret;\n    }\n    [EMITEND]() {\n        if (this[EMITTED_END])\n            return false;\n        this[EMITTED_END] = true;\n        this.readable = false;\n        return this[ASYNC]\n            ? (defer(() => this[EMITEND2]()), true)\n            : this[EMITEND2]();\n    }\n    [EMITEND2]() {\n        if (this[DECODER]) {\n            const data = this[DECODER].end();\n            if (data) {\n                for (const p of this[PIPES]) {\n                    p.dest.write(data);\n                }\n                if (!this[DISCARDED])\n                    super.emit('data', data);\n            }\n        }\n        for (const p of this[PIPES]) {\n            p.end();\n        }\n        const ret = super.emit('end');\n        this.removeAllListeners('end');\n        return ret;\n    }\n    /**\n     * Return a Promise that resolves to an array of all emitted data once\n     * the stream ends.\n     */\n    async collect() {\n        const buf = Object.assign([], {\n            dataLength: 0,\n        });\n        if (!this[OBJECTMODE])\n            buf.dataLength = 0;\n        // set the promise first, in case an error is raised\n        // by triggering the flow here.\n        const p = this.promise();\n        this.on('data', c => {\n            buf.push(c);\n            if (!this[OBJECTMODE])\n                buf.dataLength += c.length;\n        });\n        await p;\n        return buf;\n    }\n    /**\n     * Return a Promise that resolves to the concatenation of all emitted data\n     * once the stream ends.\n     *\n     * Not allowed on objectMode streams.\n     */\n    async concat() {\n        if (this[OBJECTMODE]) {\n            throw new Error('cannot concat in objectMode');\n        }\n        const buf = await this.collect();\n        return (this[ENCODING]\n            ? buf.join('')\n            : Buffer.concat(buf, buf.dataLength));\n    }\n    /**\n     * Return a void Promise that resolves once the stream ends.\n     */\n    async promise() {\n        return new Promise((resolve, reject) => {\n            this.on(DESTROYED, () => reject(new Error('stream destroyed')));\n            this.on('error', er => reject(er));\n            this.on('end', () => resolve());\n        });\n    }\n    /**\n     * Asynchronous `for await of` iteration.\n     *\n     * This will continue emitting all chunks until the stream terminates.\n     */\n    [Symbol.asyncIterator]() {\n        // set this up front, in case the consumer doesn't call next()\n        // right away.\n        this[DISCARDED] = false;\n        let stopped = false;\n        const stop = async () => {\n            this.pause();\n            stopped = true;\n            return { value: undefined, done: true };\n        };\n        const next = () => {\n            if (stopped)\n                return stop();\n            const res = this.read();\n            if (res !== null)\n                return Promise.resolve({ done: false, value: res });\n            if (this[EOF])\n                return stop();\n            let resolve;\n            let reject;\n            const onerr = (er) => {\n                this.off('data', ondata);\n                this.off('end', onend);\n                this.off(DESTROYED, ondestroy);\n                stop();\n                reject(er);\n            };\n            const ondata = (value) => {\n                this.off('error', onerr);\n                this.off('end', onend);\n                this.off(DESTROYED, ondestroy);\n                this.pause();\n                resolve({ value, done: !!this[EOF] });\n            };\n            const onend = () => {\n                this.off('error', onerr);\n                this.off('data', ondata);\n                this.off(DESTROYED, ondestroy);\n                stop();\n                resolve({ done: true, value: undefined });\n            };\n            const ondestroy = () => onerr(new Error('stream destroyed'));\n            return new Promise((res, rej) => {\n                reject = rej;\n                resolve = res;\n                this.once(DESTROYED, ondestroy);\n                this.once('error', onerr);\n                this.once('end', onend);\n                this.once('data', ondata);\n            });\n        };\n        return {\n            next,\n            throw: stop,\n            return: stop,\n            [Symbol.asyncIterator]() {\n                return this;\n            },\n        };\n    }\n    /**\n     * Synchronous `for of` iteration.\n     *\n     * The iteration will terminate when the internal buffer runs out, even\n     * if the stream has not yet terminated.\n     */\n    [Symbol.iterator]() {\n        // set this up front, in case the consumer doesn't call next()\n        // right away.\n        this[DISCARDED] = false;\n        let stopped = false;\n        const stop = () => {\n            this.pause();\n            this.off(ERROR, stop);\n            this.off(DESTROYED, stop);\n            this.off('end', stop);\n            stopped = true;\n            return { done: true, value: undefined };\n        };\n        const next = () => {\n            if (stopped)\n                return stop();\n            const value = this.read();\n            return value === null ? stop() : { done: false, value };\n        };\n        this.once('end', stop);\n        this.once(ERROR, stop);\n        this.once(DESTROYED, stop);\n        return {\n            next,\n            throw: stop,\n            return: stop,\n            [Symbol.iterator]() {\n                return this;\n            },\n        };\n    }\n    /**\n     * Destroy a stream, preventing it from being used for any further purpose.\n     *\n     * If the stream has a `close()` method, then it will be called on\n     * destruction.\n     *\n     * After destruction, any attempt to write data, read data, or emit most\n     * events will be ignored.\n     *\n     * If an error argument is provided, then it will be emitted in an\n     * 'error' event.\n     */\n    destroy(er) {\n        if (this[DESTROYED]) {\n            if (er)\n                this.emit('error', er);\n            else\n                this.emit(DESTROYED);\n            return this;\n        }\n        this[DESTROYED] = true;\n        this[DISCARDED] = true;\n        // throw away all buffered data, it's never coming out\n        this[BUFFER].length = 0;\n        this[BUFFERLENGTH] = 0;\n        const wc = this;\n        if (typeof wc.close === 'function' && !this[CLOSED])\n            wc.close();\n        if (er)\n            this.emit('error', er);\n        // if no error to emit, still reject pending promises\n        else\n            this.emit(DESTROYED);\n        return this;\n    }\n    /**\n     * Alias for {@link isStream}\n     *\n     * Former export location, maintained for backwards compatibility.\n     *\n     * @deprecated\n     */\n    static get isStream() {\n        return exports.isStream;\n    }\n}\nexports.Minipass = Minipass;\n//# sourceMappingURL=index.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".extension.js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(4265);\n"],"names":["installedChunks","balanced","a","b","str","RegExp","maybeMatch","r","range","start","end","pre","slice","body","length","post","reg","m","match","begs","beg","left","right","result","ai","indexOf","bi","i","push","pop","module","exports","substr","expand","split","join","escSlash","escOpen","escClose","escComma","escPeriod","escapeBraces","map","unescapeBraces","Math","random","numeric","parseInt","charCodeAt","parseCommaParts","parts","p","postParts","shift","apply","embrace","isPadded","el","test","lte","y","gte","isTop","expansions","k","expansion","n","N","isNumericSequence","isAlphaSequence","isSequence","isOptions","x","width","max","incr","abs","pad","some","c","String","fromCharCode","need","z","Array","j","fs","path","mkdirsSync","utimesMillisSync","stat","getStats","destStat","src","dest","opts","srcStat","dereference","statSync","lstatSync","isDirectory","copyDir","srcMode","mkdirSync","setDestMode","mkDirAndCopy","mode","onDir","isFile","isCharacterDevice","isBlockDevice","overwrite","unlinkSync","copyFile","errorOnExist","Error","mayCopyFile","onFile","isSymbolicLink","resolvedSrc","readlinkSync","resolve","process","cwd","resolvedDest","err","code","symlinkSync","isSrcSubdir","copyLink","onLink","isSocket","isFIFO","copyFileSync","preserveTimestamps","fileIsNotWritable","makeFileWritable","updatedSrcStat","atime","mtime","setDestTimestamps","handleTimestamps","chmodSync","readdirSync","forEach","item","srcItem","destItem","filter","checkPathsSync","copyDirItem","clobber","arch","emitWarning","checkParentPathsSync","destParent","dirname","existsSync","mkdirs","pathExists","utimesMillis","async","runFilter","getStatsAndPerformCopy","statFn","lstat","mkdir","items","readdir","Promise","all","checkPaths","chmod","unlink","readlink","symlink","e","checkParentPaths","u","copy","copySync","remove","emptyDir","dir","emptyDirSync","removeSync","emptydirSync","emptydir","createFile","file","stats","dirStats","writeFile","createFileSync","writeFileSync","createLink","createLinkSync","createSymlink","createSymlinkSync","ensureFile","ensureFileSync","ensureLink","ensureLinkSync","ensureSymlink","ensureSymlinkSync","areIdentical","srcpath","dstpath","dstStat","message","replace","link","linkSync","symlinkPaths","isAbsolute","toCwd","toDst","dstdir","relativeToDst","relative","symlinkPathsSync","symlinkType","type","symlinkTypeSync","toType","api","key","Object","assign","method","exists","filename","callback","read","fd","buffer","offset","position","reject","bytesRead","write","args","bytesWritten","readv","buffers","writev","realpath","native","jsonFile","outputJson","outputJsonSync","outputJSON","outputJSONSync","writeJSON","writeJson","writeJSONSync","writeJsonSync","readJSON","readJson","readJSONSync","readJsonSync","readFile","readFileSync","stringify","outputFileSync","data","options","outputFile","makeDir","_makeDir","makeDirSync","mkdirp","mkdirpSync","ensureDir","ensureDirSync","checkPath","getMode","recursive","pth","platform","parse","root","error","move","moveSync","rename","renameSync","moveAcrossDevice","isChangingCase","parent","isParentRoot","doRename","encoding","access","then","catch","pathExistsSync","rm","force","rmSync","ino","dev","srcArr","sep","destArr","every","cur","errMsg","funcName","statFunc","bigint","srcBaseName","basename","destBaseName","toLowerCase","getStatsSync","srcParent","open","closeErr","futimes","close","openSync","futimesSync","closeSync","obj","__proto__","getPrototypeOf","create","getOwnPropertyNames","defineProperty","getOwnPropertyDescriptor","gracefulQueue","previousSymbol","polyfills","legacy","clone","util","publishQueue","context","queue","get","Symbol","for","retryTimer","debug","debuglog","env","NODE_DEBUG","format","arguments","console","global","fs$close","cb","call","resetQueue","this","value","fs$closeSync","on","patch","gracefulify","createReadStream","ReadStream","createWriteStream","WriteStream","fs$readFile","go$readFile","startTime","enqueue","Date","now","fs$writeFile","go$writeFile","fs$appendFile","appendFile","go$appendFile","fs$copyFile","flags","go$copyFile","fs$readdir","go$readdir","noReaddirOptionVersions","version","fs$readdirCallback","files","sort","legStreams","fs$ReadStream","prototype","that","autoClose","destroy","emit","fs$WriteStream","set","val","enumerable","configurable","FileReadStream","FileWriteStream","fs$open","go$open","elem","name","retry","clearTimeout","undefined","fn","lastTime","sinceAttempt","sinceStart","min","concat","setTimeout","TEST_GRACEFUL_FS_GLOBAL_PATCH","__patched","Stream","self","readable","paused","bufferSize","keys","index","setEncoding","TypeError","Infinity","pos","_read","nextTick","writable","busy","_queue","_open","flush","constants","origCwd","GRACEFUL_FS_PLATFORM","er","chdir","d","setPrototypeOf","chmodFix","orig","target","chownErOk","chmodFixSync","chownFix","uid","gid","chownFixSync","statFix","statFixSync","getuid","fs$readSync","hasOwnProperty","lchmod","O_WRONLY","O_SYMLINK","fchmod","err2","lchmodSync","ret","threw","fchmodSync","patchLchmod","lutimes","at","mt","er2","lutimesSync","_a","_b","_c","patchLutimes","chown","fchown","lchown","chownSync","fchownSync","lchownSync","fstat","fstatSync","fs$rename","from","to","backoff","CB","stater","st","fs$read","callback_","eagCounter","_","__","readSync","_fs","universalify","stripBom","jsonfile","fromPromise","shouldThrow","throws","fromCallback","JSON","reviver","content","EOL","finalEOL","replacer","spaces","EOF","Buffer","isBuffer","toString","rootPath","ignoreArr","graph","Map","constructor","findNearestNodeModules","filePath","rootDir","nodeModulesPath","ofs","findTsconfig","tsconfig","glob","sync","ignore","log","isLocalFile","startsWith","build","jsonrepair","tsconfigPath","tsBaseUrl","alias","tsconfigStr","tsconfigObj","compilerOptions","baseUrl","paths","reduce","acc","excludeFolder","exclude","extractDependencies","dependency","handledDependency","aliasKey","find","aliasPath","addEdge","dependencyPattern","htmlcssPattern","dependencies","matchDep","matchHtml","exec","has","Set","add","getDependencies","getImageMap","config","vscode","workspace","getConfiguration","language","disposable","commands","registerCommand","resourceRoot","Uri","joinPath","extensionUri","formatStr","workspaceFolders","window","showErrorMessage","firstWorkspaceFolderPath","uri","imgObj","imageGraph","size","source","fsStat","filesize","standard","originalSize","getFilesize","relativeFile","absoluteFile","imageName","originalImageName","dep","images","panel","createWebviewPanel","ViewColumn","One","enableScripts","handledImages","imagePath","imageUri","webviewImageUri","webview","asWebviewUri","themeColors","backgroundColor","textColor","webviewResourceRoot","html","__dirname","onDidReceiveMessage","command","fileUri","executeCommand","openFile","postMessage","subscriptions","showResults","fsPath","res","require","Glob","minimatch_1","node_url_1","path_scurry_1","pattern_js_1","walker_js_1","defaultPlatform","absolute","dot","dotRelative","follow","magicalBraces","mark","matchBase","maxDepth","nobrace","nocase","nodir","noext","noglobstar","pattern","scurry","signal","windowsPathsNoEscape","withFileTypes","includeChildMatches","patterns","URL","fileURLToPath","allowWindowsEscape","includes","Scurry","PathScurryWin32","PathScurryDarwin","PathScurryPosix","PathScurry","nocaseMagicOnly","mmo","nocomment","nonegate","optimizationLevel","mms","Minimatch","matchSet","globParts","g","Pattern","walk","GlobWalker","depth","walkSync","stream","GlobStream","streamSync","iterateSync","iterator","iterate","asyncIterator","hasMagic","isArray","Ignore","relativeChildren","absoluteChildren","mmopts","ignored","ign","mm","parsed","globString","children","fullpath","fullpaths","relatives","childrenIgnored","unescape","escape","globStreamSync","globStream","globSync","globIterateSync","globIterate","glob_js_1","has_magic_js_1","minimatch_2","glob_js_2","has_magic_js_2","ignore_js_1","glob_","patternList","globList","isUNC","p0","p1","p2","p3","prest","g0","g1","g2","g3","grest","isDrive","isString","isGlobstar","GLOBSTAR","isRegExp","hasMore","rest","pl","checkFollowGlobstar","markFollowGlobstar","Processor","SubWalks","MatchRecord","HasWalkedCache","store","hasWalked","storeWalked","cached","ifDir","current","entries","canReaddir","subs","t","hasWalkedCache","matches","subwalks","processPatterns","processingSet","isENOENT","changed","rp","rrest","tp","subwalkTargets","child","filterEntries","results","testGlobstar","testRegExp","testString","ep","isNamed","GlobUtil","minipass_1","processor_js_1","seen","aborted","posix","makeIgnore","addEventListener","pause","resume","onResume","matchCheck","rpc","realpathCached","s","isUnknown","matchCheckTest","matchCheckSync","realpathSync","matchFinish","relativePosix","matchEmit","fullpathPosix","rel","matchSync","walkCB","walkCB2","processor","tasks","next","childrenCached","readdirCached","calledReaddir","walkCB3","readdirCB","walkCBSync","walkCB2Sync","walkCB3Sync","super","reason","rej","Minipass","objectMode","flowing","LRUCache","perf","performance","warned","PROCESS","msg","AC","globalThis","AbortController","AS","AbortSignal","onabort","_onabort","warnACPolyfill","abort","printACPolyfillWarning","LRU_CACHE_IGNORE_AC_WARNING","isPosInt","floor","isFinite","getUintArray","pow","Uint8Array","Uint16Array","Uint32Array","Number","MAX_SAFE_INTEGER","ZeroArray","fill","Stack","heap","static","HeapCls","ttl","ttlResolution","ttlAutopurge","updateAgeOnGet","updateAgeOnHas","allowStale","noDisposeOnSet","noUpdateTTL","maxEntrySize","sizeCalculation","noDeleteOnFetchRejection","noDeleteOnStaleGet","allowStaleOnFetchAbort","allowStaleOnFetchRejection","ignoreFetchAbort","unsafeExposeInternals","starts","ttls","sizes","keyMap","keyList","valList","prev","head","tail","free","isBackgroundFetch","backgroundFetch","moveToTail","indexes","rindexes","isStale","maxSize","calculatedSize","fetchMethod","memoMethod","dispose","disposeAfter","UintArray","shouldWarn","getRemainingTTL","unref","status","cachedNow","getNow","age","remainingTTL","v","entrySize","totalCalculatedSize","_i","_s","_st","_k","_v","rentries","rkeys","values","rvalues","toStringTag","getOptions","__staleWhileFetching","thisp","rforEach","purgeStale","deleted","info","entry","remain","dump","arr","unshift","load","clear","setOptions","delete","maxEntrySizeExceeded","oldVal","__abortController","oldValue","dt","task","hasOptions","peek","peekOptions","ac","fetchOpts","updateCache","ignoreAbort","fetchAborted","fetchError","fetchAbortIgnored","fetchResolved","fetchFail","bf","fetchUpdated","allowStaleAborted","noDelete","returnedStale","__returned","fetchDispatched","fmp","fetchRejected","fetch","fetchOptions","forceRefresh","stale","staleVal","forceFetch","memo","memoOptions","vv","fetching","pi","ni","assertValidPattern","AST","brace_expressions_js_1","unescape_js_1","types","isExtglobType","startNoDot","addPatternStart","justDots","reSpecials","qmark","star","starNoEmpty","pp","part","copyIn","toJSON","isStart","isEnd","ast","opt","escaping","inBrace","braceStart","braceNeg","charAt","ext","substring","fromGlob","toMMPattern","re","uflag","toRegExpSource","toUpperCase","_src","_glob","allowDot","noEmpty","aps","needNoTrav","needNoDot","repeated","bodyDotAllowed","final","_hasMagic","needUflag","consumed","magic","parseClass","posixClasses","braceEscape","rangesToString","ranges","negs","sawStart","negate","endPos","rangeStart","WHILE","cls","unip","neg","sranges","snegs","__importDefault","mod","__esModule","makeRe","braceExpand","defaults","minimatch","brace_expansion_1","assert_valid_pattern_js_1","ast_js_1","escape_js_1","starDotExtRE","starDotExtTest","f","endsWith","starDotExtTestDot","starDotExtTestNocase","starDotExtTestNocaseDot","starDotStarRE","starDotStarTest","starDotStarTestDot","dotStarRE","dotStarTest","starRE","starTest","starTestDot","qmarksRE","qmarksTestNocase","$0","qmarksTestNoExt","qmarksTestNocaseDot","qmarksTestNoExtDot","qmarksTestDot","qmarksTest","len","__MINIMATCH_TESTING_PLATFORM__","def","list","default","nonull","globMagic","comment","empty","preserveMultipleSlashes","partial","globSet","isWindows","windowsNoMagicRoot","regexp","make","parseNegate","rawGlobParts","slashSplit","preprocess","ss","firstPhasePreProcess","secondPhasePreProcess","levelOneOptimize","adjascentGlobstarOptimize","gs","splice","levelTwoFileOptimize","didSomething","dd","gss","other","splin","matched","partsMatch","emptyGSMatch","which","negateOffset","matchOne","fileDrive","fileUNC","patternDrive","fdi","pdi","pd","fi","fl","fr","pr","swallowee","hit","fastTest","Reflect","twoStar","ex","ff","flipNegate","ast_js_2","escape_js_2","unescape_js_2","__createBinding","o","k2","desc","__setModuleDefault","__importStar","Path","PathScurryBase","PathPosix","PathWin32","PathBase","ChildrenCache","ResolveCache","lru_cache_1","node_path_1","fs_1","actualFS","promises_1","defaultFS","promises","fsFromOption","fsOption","uncDriveRegexp","eitherSep","IFLNK","IFMT","IFMT_UNKNOWN","ENOENT","entToType","normalizeCache","normalize","normalizeNocaseCache","normalizeNocase","setAsCwd","roots","isCWD","nlink","rdev","blksize","blocks","atimeMs","mtimeMs","ctimeMs","birthtimeMs","ctime","birthtime","parentPath","childrenCache","getRootString","dirParts","splitSep","getRoot","provisional","pathPart","pchild","newChild","pv","fp","pfpp","fpp","isType","getType","lstatCached","readlinkCached","canReadlink","ifmt","linkTarget","ter","cbs","allowZalgo","queueMicrotask","ENOTDIR","shouldWalk","dirs","walkFilter","oldCwd","win32","uncToDrive","compare","sameRoot","_rootPath","pathImpl","childrenCacheSize","cwdPath","parseRootPath","newRoot","joinSep","sawFirst","l","resolvePosix","processing","onReaddir","didRealpaths","once","_dir","isWritable","isReadable","isStream","proc","stdout","stderr","node_events_1","node_stream_1","node_string_decoder_1","EventEmitter","pipe","Writable","MAYBE_EMIT_END","EMITTED_END","EMITTING_END","EMITTED_ERROR","CLOSED","READ","FLUSH","FLUSHCHUNK","ENCODING","DECODER","FLOWING","PAUSED","RESUME","BUFFER","PIPES","BUFFERLENGTH","BUFFERPUSH","BUFFERSHIFT","OBJECTMODE","DESTROYED","ERROR","EMITDATA","EMITEND","EMITEND2","ASYNC","ABORT","ABORTED","SIGNAL","DATALISTENERS","DISCARDED","defer","nodefer","Pipe","ondrain","unpipe","removeListener","proxyErrors","_er","PipeProxyErrors","StringDecoder","debugExposeBuffer","debugExposePipes","bufferLength","_enc","_om","chunk","ArrayBuffer","isView","byteOffset","byteLength","isArrayBufferLike","lastNeed","subarray","destroyed","noDrain","ended","addListener","ev","handler","isEndish","removeAllListeners","h","off","listeners","emittedEnd","collect","buf","dataLength","promise","stopped","stop","done","onerr","ondata","onend","ondestroy","throw","return","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","chunkId","prop","moreModules","modules","chunkIds","ids","runtime","installChunk","__webpack_exports__"],"sourceRoot":""}